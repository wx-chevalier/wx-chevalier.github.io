<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>05.编码规约与协作 | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/web-engineering-notes/05.%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6%E4%B8%8E%E5%8D%8F%E4%BD%9C/</link>
      <atom:link href="https://ng-tech.icu/books/web-engineering-notes/05.%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6%E4%B8%8E%E5%8D%8F%E4%BD%9C/index.xml" rel="self" type="application/rss+xml" />
    <description>05.编码规约与协作</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>05.编码规约与协作</title>
      <link>https://ng-tech.icu/books/web-engineering-notes/05.%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6%E4%B8%8E%E5%8D%8F%E4%BD%9C/</link>
    </image>
    
    <item>
      <title>DOM 与组件</title>
      <link>https://ng-tech.icu/books/web-engineering-notes/05.%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6%E4%B8%8E%E5%8D%8F%E4%BD%9C/dom-%E4%B8%8E%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/web-engineering-notes/05.%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6%E4%B8%8E%E5%8D%8F%E4%BD%9C/dom-%E4%B8%8E%E7%BB%84%E4%BB%B6/</guid>
      <description>&lt;h1 id=&#34;syntax&#34;&gt;Syntax&lt;/h1&gt;
&lt;h2 id=&#34;html&#34;&gt;HTML&lt;/h2&gt;
&lt;h2 id=&#34;dom&#34;&gt;DOM&lt;/h2&gt;
&lt;h2 id=&#34;css&#34;&gt;CSS&lt;/h2&gt;
&lt;h1 id=&#34;react-component&#34;&gt;React Component&lt;/h1&gt;
&lt;h2 id=&#34;数据独立于逻辑&#34;&gt;数据独立于逻辑&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>布局与样式</title>
      <link>https://ng-tech.icu/books/web-engineering-notes/05.%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6%E4%B8%8E%E5%8D%8F%E4%BD%9C/%E5%B8%83%E5%B1%80%E4%B8%8E%E6%A0%B7%E5%BC%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/web-engineering-notes/05.%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6%E4%B8%8E%E5%8D%8F%E4%BD%9C/%E5%B8%83%E5%B1%80%E4%B8%8E%E6%A0%B7%E5%BC%8F/</guid>
      <description>&lt;h1 id=&#34;明白何谓-margin-collapse&#34;&gt;明白何谓 Margin Collapse&lt;/h1&gt;
&lt;p&gt;不同于其他很多属性，盒模型中垂直方向上的 Margin 会在相遇时发生崩塌，也就是说当某个元素的底部 Margin 与另一个元素的顶部 Margin 相邻时，只有二者中的较大值会被保留下来，可以从下面这个简单的例子来学习:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;square&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;red&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#f44336&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;margin-bottom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;blue&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#2196f3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;margin-top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在上述例子中我们会发现，红色和蓝色方块的外边距并没有相加得到 70px，而是只有红色的下外边距保留了下来。我们可以使用一些&lt;a href=&#34;http://stackoverflow.com/questions/19718634/how-to-disable-margin-collapsing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;方法&lt;/a&gt;来避免这种行为，不过建议来说还是尽量统一使用&lt;code&gt;margin-bottom&lt;/code&gt;属性，这样就显得和谐多了。&lt;/p&gt;
&lt;h1 id=&#34;使用-flexbox-进行布局&#34;&gt;使用 Flexbox 进行布局&lt;/h1&gt;
&lt;p&gt;在传统的布局中我们习惯使用 Floats 或者 inline-blocks，不过它们更适合于格式化文档，而不是整个网站。而 Flexbox 则是专门的用于进行布局的工具。Flexbox 模型允许开发者使用很多便捷可扩展的属性来进行布局，估计你一旦用上就舍不得了:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.container {
    display: flex;
    /* Don&amp;#39;t forget to add prefixes for Safari */display: -webkit-flex;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们已经在 Tutorialzine 上提供了很多的关于 Flexbox 的介绍与小技巧，譬如&lt;a href=&#34;http://tutorialzine.com/2016/04/5-flexbox-techniques-you-need-to-know-about/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;5 Flexbox Techniques You Need to Know About&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&#34;使用-css-reset&#34;&gt;使用 CSS Reset&lt;/h1&gt;
&lt;p&gt;虽然这些年来随着浏览器的迅速发展与规范的统一，浏览器特性碎片化的情况有所改善，但是在不同的浏览器之间仍然存在着很多的行为差异。而解决这种问题的最好的办法就是使用某个 CSS Reset 来为所有的元素设置统一的样式，保证你能在相对统一干净的样式表的基础上开始工作。目前流行的 Reset 库有 &lt;a href=&#34;http://necolas.github.io/normalize.css/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;normalize.css,&lt;/a&gt; &lt;a href=&#34;http://jgthms.com/minireset.css/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;minireset&lt;/a&gt;以及 &lt;a href=&#34;https://github.com/filipelinhares/ress&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ress&lt;/a&gt;，它们都可以修正很多已知的浏览器之间的差异性。而如果你不打算用某个外在的库，那么建议可以使用如下的基本规则:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面的规则看起来没啥用，不过如果不同的浏览器在默认情况下为你设置了不同的外边距/内边距的默认值，还是会挺麻烦的。&lt;/p&gt;
&lt;h1 id=&#34;一切应为-border-box&#34;&gt;一切应为 Border-box&lt;/h1&gt;
&lt;p&gt;虽然很多初学者并不了解&lt;code&gt;box-sizing&lt;/code&gt;这个属性，但是它确实相当的重要。而最好的理解它的方式就是看看它的两种取值:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认值为 content-box，即当我们设置某个元素的 heght/width 属性时，仅仅会作用于其内容尺寸。而所有的内边距与边都是在其之上的累加，譬如某个&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;标签设置为宽 100，内边距为 10，那么最终元素会占用 120(100 + 2*10)的像素。&lt;/li&gt;
&lt;li&gt;border-box:内边距与边是包含在了 width/height 之内，譬如设置了&lt;code&gt;width:100px&lt;/code&gt;的&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;无论其内边距或者边长设置为多少，其占有的大小都是 100px。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将元素设置为 border-box 会很方便你进行样式布局，这样的话你就可以在父元素设置高宽限制而不担心子元素的内边距或者边打破了这种限制。&lt;/p&gt;
&lt;h1 id=&#34;以背景图方式使用-images&#34;&gt;以背景图方式使用 Images&lt;/h1&gt;
&lt;p&gt;如果需要在响应式的环境下展示图片，有个简单的小技巧就是使用该图片作为某个&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;的背景图而不是直接使用 img 标签。基于这种方式配合上&lt;code&gt;background-size&lt;/code&gt;与&lt;code&gt;background-position&lt;/code&gt;这两个属性，可以很方便地按比例缩放:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;300&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;300&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://cdn.tutorialzine.com/wp-content/uploads/2016/08/bicycle.jpg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;background-position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;center&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;background-size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;cover&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不过这种方式也是存在缺陷的，譬如你无法设置图片的懒加载、图片无法被搜索引擎或者其他类似的工具抓取到，有个不错的属性叫&lt;a href=&#34;http://tutorialzine.com/2016/04/quick-tip-get-to-know-css-object-fit-position/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;object-fit&lt;/a&gt;可以解决这个问题，不过该属性目前的浏览器支持并不是很完善。&lt;/p&gt;
&lt;h1 id=&#34;better-table-borders&#34;&gt;Better Table Borders&lt;/h1&gt;
&lt;p&gt;HTML 中使用 Tables 进行布局一直是个很头疼的问题，它们使用起来很简单，但是无法进行响应式操作，并且也不方便进行全局样式设置。譬如，如果你打算为 Table 的边与单元的边添加样式，可能得到的结果如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;solid&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#505050&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;margin-bottom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#505050&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;td&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;solid&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#505050&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里存在的问题是出现了很多的重复的边，会导致视觉上不协调的情况，那么我们可以通过设置&lt;code&gt;border-collapse:collapse&lt;/code&gt;来进行处理:&lt;/p&gt;
&lt;h1 id=&#34;注释格式优化&#34;&gt;注释格式优化&lt;/h1&gt;
&lt;p&gt;CSS 虽然谈不上一门编程语言但是其仍然需要添加注释以保障整体代码的可读性，只要添加些简单的注释不仅可以方便你更好地组织整个样式表还能够让你的同事或者未来的自己更好地理解。对于 CSS 中整块的注释或者使用在 Media-Query 中的注释，建议是使用如下形式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;/*---------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;    #Header
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;---------------*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;nav&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;/*---------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;    #Slideshow
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;---------------*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;slideshow&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而设计的细节说明或者一些不重要的组件可以用如下单行注释的方式:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;/*   Footer Buttons   */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;footer&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;footer&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;hover&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同时，不要忘了 CSS 中是没有 &lt;code&gt;//&lt;/code&gt; 这种注释方式的:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;/*  Do  */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c&#34;&gt;/*border: 1px solid #222;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;/*  Don&amp;#39;t  */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;err&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;solid&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#222&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;使用-kebab-case-命名变量&#34;&gt;使用 Kebab-case 命名变量&lt;/h1&gt;
&lt;p&gt;对于样式类名或者 ID 名的命名都需要在多个单词之间添加&lt;code&gt;-&lt;/code&gt;符号，CSS 本身是大小写不敏感的因此你是用不了 camelCase 的，另一方面，很久之前也不支持下划线，所以现在的默认的命名方式就是使用&lt;code&gt;-&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;/*  Do     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;footer-column-left&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;/*  Don&amp;#39;t  */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;footerColumnLeft&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;footer_column_left&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而涉及到具体的变量命名规范时，建议是使用&lt;a href=&#34;https://en.bem.info/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BEM&lt;/a&gt;规范，只要遵循一些简单的原则即可以保证基于组件风格的命名一致性。你也可以参考&lt;a href=&#34;https://css-tricks.com/bem-101/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CSS Tricks&lt;/a&gt;来获得更多的细节描述。&lt;/p&gt;
&lt;h1 id=&#34;避免重复代码&#34;&gt;避免重复代码&lt;/h1&gt;
&lt;p&gt;大部分元素的 CSS 属性都是从 DOM 树根部继承而来，这也是其命名为级联样式表的由来。我们以&lt;code&gt;font&lt;/code&gt;属性为例，该属性往往是继承自父属性，因此我们并不需要再单独地为元素设置该属性。我们只需要在&lt;code&gt;html&lt;/code&gt;或者&lt;code&gt;body&lt;/code&gt;中添加该属性然后使其层次传递下去即可:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;normal&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.4&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;sans-serif&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;使用-transform-添加-css-animations&#34;&gt;使用 transform 添加 CSS Animations&lt;/h1&gt;
&lt;p&gt;不建议直接改变元素的&lt;code&gt;width&lt;/code&gt;与&lt;code&gt;height&lt;/code&gt;属性或者&lt;code&gt;left/top/bottom/right&lt;/code&gt;这些属性来达到动画效果，而应该优先使用&lt;code&gt;transform()&lt;/code&gt;属性来提供更平滑的变换效果，并且能使得代码的可读性会更好:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ball&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;transition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.4&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;ease-out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;/* Not Cool*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ball&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;slide-out&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;/* Cool*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ball&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;slide-out&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;translateX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;450&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Transform 的几个属性&lt;code&gt;translate&lt;/code&gt;、&lt;code&gt;rotate&lt;/code&gt;、&lt;code&gt;scale&lt;/code&gt;都具有比较好的浏览器兼容性可以放心使用。&lt;/p&gt;
&lt;h1 id=&#34;不要重复造轮子&#34;&gt;不要重复造轮子&lt;/h1&gt;
&lt;p&gt;现在 CSS 社区已经非常庞大，并且不断地有新的各式各样的库开源出来。这些库可以帮助我们解决从小的代码片到用于构建完整的响应式应用的全框架。所以如果下次你再碰到什么 CSS 问题的时候，在打算撸起袖子自己上之前可以尝试在&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHUB&lt;/a&gt;或者&lt;a href=&#34;http://codepen.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CodePen&lt;/a&gt;上搜索可行方案。&lt;/p&gt;
&lt;h1 id=&#34;尽可能使用低优先级的选择器&#34;&gt;尽可能使用低优先级的选择器&lt;/h1&gt;
&lt;p&gt;并不是所有的 CSS 选择器的优先级都一样，很多初学者在使用 CSS 选择器的时候都是考虑以新的特性去复写全部的继承特性，不过这一点在某个元素多状态时就麻烦了，譬如下面这个例子:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;a{
    color: #fff;
    padding: 15px;
}

a#blue-btn {
    background-color: blue;
}

a.active {
    background-color: red;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们本来希望将&lt;code&gt;.active&lt;/code&gt;类添加到按钮上然后使其显示为红色，不过在上面这个例子中很明显起不了作用，因为&lt;code&gt;button&lt;/code&gt;已经以 ID 选择器设置过了背景色，也就是所谓的&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Higher Selector Specificity&lt;/a&gt;。一般来说，选择器的优先级顺序为：ID(#id) &amp;gt; Class(.class) &amp;gt; Type(header)&lt;/p&gt;
&lt;h1 id=&#34;避免使用important&#34;&gt;避免使用!important&lt;/h1&gt;
&lt;p&gt;认真的说，千万要避免使用!important，这可能会导致你在未来的开发中无尽的属性重写，你应该选择更合适的 CSS 选择器。而唯一的可以使用&lt;code&gt;!important&lt;/code&gt;属性的场景就是当你想去复写某些行内样式的时候，不过行内样式本身也是需要避免的。&lt;/p&gt;
&lt;h1 id=&#34;使用-text-transform-属性设置文本大写&#34;&gt;使用 text-transform 属性设置文本大写&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;div class=&amp;#34;movie-poster&amp;#34;&amp;gt;Star Wars: The Force Awakens&amp;lt;/div&amp;gt;

.movie-poster {
    text-transform: uppercase;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;em-rem-以及-pixel&#34;&gt;Em, Rem, 以及 Pixel&lt;/h1&gt;
&lt;p&gt;已经有很多关于人们应该如何使用 em，rem，以及 px 作为元素尺寸与文本尺寸的讨论，而笔者认为，这三个尺寸单位都有其适用与不适用的地方。不同的开发与项目都有其特定的设置，因此并没有通用的规则来决定应该使用哪个单位，这里是我总结的几个考虑:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;em – 其基本单位即为当前元素的&lt;code&gt;font-size&lt;/code&gt;值，经常适用于 media-queries 中，em 是特别适用于响应式开发中。&lt;/li&gt;
&lt;li&gt;rem – 其是相对于&lt;code&gt;html&lt;/code&gt;属性的单位，可以保证文本段落真正的响应式尺寸特性。&lt;/li&gt;
&lt;li&gt;px – Pixels 并没有任何的动态扩展性，它们往往用于描述绝对单位，并且可以在设置值与最终的显示效果之间保留一定的一致性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;在大型项目中使用预处理器&#34;&gt;在大型项目中使用预处理器&lt;/h1&gt;
&lt;p&gt;估计你肯定听说过 &lt;a href=&#34;http://sass-lang.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sass&lt;/a&gt;, &lt;a href=&#34;http://lesscss.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Less&lt;/a&gt;, &lt;a href=&#34;http://postcss.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PostCSS&lt;/a&gt;, &lt;a href=&#34;http://stylus-lang.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stylus&lt;/a&gt;这些预处理器与对应的语法。Preprocessors 可以允许我们将未来的 CSS 特性应用在当前的代码开发中，譬如变量支持、函数、嵌套式的选择器以及很多其他的特性，这里我们以 Sass 为例:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$accent-color: #2196F3;

a {
    padding: 10px 15px;
    background-color: $accent-color;
}

a:hover {
    background-color: darken($accent-color,10%);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;使用-autoprefixers-来提升浏览器兼容性&#34;&gt;使用 Autoprefixers 来提升浏览器兼容性&lt;/h1&gt;
&lt;p&gt;使用特定的浏览器前缀是 CSS 开发中常见的工作之一，不同的浏览器、不同的属性对于前缀的要求也不一样，这就使得我们无法在编码过程中记住所有的前缀规则。并且在写样式代码的时候还需要加上特定的浏览器前缀支持也是个麻烦活，幸亏现在也是有很多工具可以辅助我们进行这样的开发:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Online tools: &lt;a href=&#34;https://autoprefixer.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Autoprefixer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Text editor plugins: &lt;a href=&#34;https://github.com/sindresorhus/sublime-autoprefixer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sublime Text&lt;/a&gt;, &lt;a href=&#34;https://atom.io/packages/autoprefixer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Atom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Libraries: &lt;a href=&#34;https://github.com/postcss/autoprefixer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Autoprefixer&lt;/a&gt; (PostCSS)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;在生产环境下使用-minified-代码&#34;&gt;在生产环境下使用 Minified 代码&lt;/h1&gt;
&lt;p&gt;为了提升页面的加载速度，在生产环境下我们应该默认使用压缩之后的资源代码。在压缩的过程中，会将所有的空白与重复剔除掉从而减少整个文件的体积大小。当然，经过压缩之后的代码毫无可读性，因此在开发阶段我们还是应该使用普通的版本。对于 CSS 的压缩有很多的现行工具:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Online tools – &lt;a href=&#34;https://cssminifier.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CSS Minifier&lt;/a&gt; (API included), &lt;a href=&#34;http://csscompressor.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CSS Compressor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Text editor plugins: &lt;a href=&#34;https://packagecontrol.io/packages/Minify&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sublime Text&lt;/a&gt;, &lt;a href=&#34;https://atom.io/packages/atom-minify&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Atom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Libraries: &lt;a href=&#34;https://github.com/matthiasmullie/minify&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Minfiy&lt;/a&gt; (PHP), &lt;a href=&#34;https://github.com/css/csso&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CSSO&lt;/a&gt; and &lt;a href=&#34;http://cssnano.co/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CSSNano&lt;/a&gt; (PostCSS, Grunt, Gulp)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选择哪个工具肯定是依赖于你自己的工作流啦~&lt;/p&gt;
&lt;h1 id=&#34;多参阅-caniuse&#34;&gt;多参阅 Caniuse&lt;/h1&gt;
&lt;p&gt;不同的浏览器在兼容性上差异很大，因此如果我们可以针对我们所需要适配的浏览器，在&lt;a href=&#34;http://caniuse.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;caniuse&lt;/a&gt;上我们可以查询某个特性的浏览器版本适配性，是否需要添加特定的前缀或者在某个平台上是否存在 Bug 等等。不过光光使用 caniuse 肯定是不够的，我们还需要使用些额外的服务来进行检测。&lt;/p&gt;
&lt;h1 id=&#34;validate校验&#34;&gt;Validate:校验&lt;/h1&gt;
&lt;p&gt;对于 CSS 的校验可能不如 HTML 校验或者 JavaScript 校验那么重要，不过在正式发布之前用 Lint 工具校验一波你的 CSS 代码还是很有意义的。它会告诉你代码中潜在的错误，提示你一些不符合最佳实践的代码以及给你一些提升代码性能的建议。就像 Minifers 与 Autoprefixers，也有很多可用的工具:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Online tools: &lt;a href=&#34;https://jigsaw.w3.org/css-validator/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;W3 Validator&lt;/a&gt;, &lt;a href=&#34;http://csslint.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CSS Lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Text editor plugins: &lt;a href=&#34;https://packagecontrol.io/packages/W3CValidators&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sublime Text&lt;/a&gt;, &lt;a href=&#34;https://atom.io/packages/csslint&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Atom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Libraries: &lt;a href=&#34;http://stylelint.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;stylelint&lt;/a&gt; (Node.js, PostCSS), &lt;a href=&#34;https://www.npmjs.com/package/css-validator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;css-validator&lt;/a&gt; (Node.js)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
