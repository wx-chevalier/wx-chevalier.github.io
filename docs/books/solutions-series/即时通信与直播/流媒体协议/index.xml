<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>流媒体协议 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/solutions-series/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%9B%B4%E6%92%AD/%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/</link><atom:link href="https://ng-tech.icu/books/solutions-series/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%9B%B4%E6%92%AD/%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/index.xml" rel="self" type="application/rss+xml"/><description>流媒体协议</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>流媒体协议</title><link>https://ng-tech.icu/books/solutions-series/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%9B%B4%E6%92%AD/%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/</link></image><item><title>HLS</title><link>https://ng-tech.icu/books/solutions-series/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%9B%B4%E6%92%AD/%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/hls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/solutions-series/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%9B%B4%E6%92%AD/%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/hls/</guid><description>&lt;h1 id="hls">HLS&lt;/h1>
&lt;p>HLS 全称是 HTTP Live Streaming，是一个由 Apple 公司提出的基于 HTTP 的媒体流传输协议，用于实时音视频流的传输。目前 HLS 协议被广泛的应用于视频点播和直播领域。&lt;/p>
&lt;p>HLS 通过将整条流切割成一个小的可以通过 HTTP 下载的媒体文件, 然后提供一个配套的媒体列表文件, 提供给客户端, 让客户端顺序地拉取这些媒体文件播放, 来实现看上去是在播放一条流的效果.由于传输层协议只需要标准的 HTTP 协议, HLS 可以方便的透过防火墙或者代理服务器, 而且可以很方便的利用 CDN 进行分发加速, 并且客户端实现起来也很方便。&lt;/p>
&lt;h2 id="优缺点">优缺点&lt;/h2>
&lt;p>HLS 协议的优点如下：&lt;/p>
&lt;ul>
&lt;li>客户端支持简单, 只需要支持 HTTP 请求即可, HTTP 协议无状态, 只需要按顺序下载媒体片段即可。&lt;/li>
&lt;li>使用 HTTP 协议网络兼容性好, HTTP 数据包也可以方便地通过防火墙或者代理服务器, CDN 支持良好。&lt;/li>
&lt;li>Apple 的全系列产品支持，不需要安装任何插件就可以原生支持播放 HLS, 目前 Android 也加入了对 HLS 的支持。&lt;/li>
&lt;li>自带多码率自适应机制。&lt;/li>
&lt;/ul>
&lt;p>HLS 协议的缺点如下：&lt;/p>
&lt;ul>
&lt;li>相比 RTMP 这类长连接协议, 延时较高, 难以用到互动直播场景。&lt;/li>
&lt;li>对于点播服务来说, 由于 TS 切片通常较小, 海量碎片在文件分发, 一致性缓存, 存储等方面都有较大挑战。&lt;/li>
&lt;/ul>
&lt;h1 id="hls-协议构成">HLS 协议构成&lt;/h1>
&lt;p>HLS 由两部分构成，一个是 .m3u8 文件，一个是 .ts 视频文件。每一个 .m3u8 文件，分别对应若干个 ts 文件，这些 ts 文件才是真正存放视频的数据，m3u8 文件只是存放了一些 ts 文件的配置信息和相关路径，当视频播放时，.m3u8 是动态改变的，video 标签会解析这个文件，并找到对应的 ts 文件来播放，所以一般为了加快速度，.m3u8 放在 web 服务器上，ts 文件放在 CDN 上。&lt;/p>
&lt;p>HLS 协议视频支持 H.264 格式的编码，支持的音频编码方式是 AAC 编码。HLS 的架构分为三部分：Server，CDN，Client 。即服务器、分发组件和客户端。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://user-images.githubusercontent.com/5803001/47569752-fbd91680-d966-11e8-8e5d-491fa49ec18e.png" alt="HLS 架构" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>服务器用于接收媒体输入流，对它们进行编码，封装成适合于分发的格式，然后准备进行分发。&lt;/li>
&lt;li>分发组件为标准的 Web 服务器。它们用于接收客户端请求，传递处理过的媒体，把资源和客户端联系起来。&lt;/li>
&lt;li>客户端软件决定请求何种合适的媒体，下载这些资源，然后把它们重新组装成用户可以观看的连续流。&lt;/li>
&lt;/ul>
&lt;h2 id="m3u8">m3u8&lt;/h2>
&lt;p>.m3u8 文件，其实就是以 UTF-8 编码的 m3u 文件，这个文件本身不能播放，只是存放了播放信息的文本文件：&lt;/p>
&lt;pre tabindex="0">&lt;code>#EXTM3U m3u文件头
#EXT-X-MEDIA-SEQUENCE 第一个TS分片的序列号
#EXT-X-TARGETDURATION 每个分片TS的最大的时长
#EXT-X-ALLOW-CACHE 是否允许cache
#EXT-X-ENDLIST m3u8文件结束符
#EXTINF 指定每个媒体段(ts)的持续时间（秒），仅对其后面的URI有效
mystream-12.ts
&lt;/code>&lt;/pre>&lt;p>HLS 协议的使用也非常便捷，将 m3u8 直接写入到 src 中然后交与浏览器解析，也可以使用 fetch 来手动解析并且获取相关文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">video&lt;/span> &lt;span class="nx">controls&lt;/span> &lt;span class="nx">autoplay&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">source&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;http://devimages.apple.com/iphone/samples/bipbop/masterplaylist.m3u8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;application/vnd.apple.mpegurl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">p&lt;/span> &lt;span class="kr">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;warning&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">Your&lt;/span> &lt;span class="nx">browser&lt;/span> &lt;span class="nx">does&lt;/span> &lt;span class="nx">not&lt;/span> &lt;span class="nx">support&lt;/span> &lt;span class="nx">HTML5&lt;/span> &lt;span class="nx">video&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/p&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/video&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>HLS 详细版的内容比上面的简版多了一个 playlist，也可以叫做 master。在 master 中，会根据网络段实现设置好不同的 m3u8 文件，比如，3G/4G/wifi 网速等。比如，一个 master 文件中为：&lt;/p>
&lt;pre tabindex="0">&lt;code>#EXTM3U
#EXT-X-VERSION:6
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=2855600,CODECS=&amp;#34;avc1.4d001f,mp4a.40.2&amp;#34;,RESOLUTION=960x540
live/medium.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=5605600,CODECS=&amp;#34;avc1.640028,mp4a.40.2&amp;#34;,RESOLUTION=1280x720
live/high.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=1755600,CODECS=&amp;#34;avc1.42001f,mp4a.40.2&amp;#34;,RESOLUTION=640x360
live/low.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=545600,CODECS=&amp;#34;avc1.42001e,mp4a.40.2&amp;#34;,RESOLUTION=416x234
live/cellular.m3u8
&lt;/code>&lt;/pre>&lt;p>以 high.m3u8 文件为例，其内容会包含：&lt;/p>
&lt;pre tabindex="0">&lt;code>#EXTM3U
#EXT-X-VERSION:6
#EXT-X-TARGETDURATION:10
#EXT-X-MEDIA-SEQUENCE:26
#EXTINF:9.901,
http://media.example.com/wifi/segment26.ts
#EXTINF:9.901,
http://media.example.com/wifi/segment27.ts
#EXTINF:9.501,
http://media.example.com/wifi/segment28.ts
&lt;/code>&lt;/pre>&lt;p>该二级 m3u8 文件也可以称为 media 文件，其有三种类型：&lt;/p>
&lt;ul>
&lt;li>live playlist: 动态列表。顾名思义，该列表是动态变化的，里面的 ts 文件会实时更新，并且过期的 ts 索引会被删除。默认，情况下都是使用动态列表。&lt;/li>
&lt;li>event playlist: 静态列表。它和动态列表主要区别就是，原来的 ts 文件索引不会被删除，该列表是不断更新，而且文件大小会逐渐增大。它会在文件中，直接添加 #EXT-X-PLAYLIST-TYPE:EVENT 作为标识。&lt;/li>
&lt;li>VOD playlist: 全量列表。它就是将所有的 ts 文件都列在 list 当中。如果，使用该列表，就和播放一整个视频没有啥区别了。它是使用 #EXT-X-ENDLIST 表示文件结尾。&lt;/li>
&lt;/ul>
&lt;p>显而易见，HLS 的延时包含了 TCP 握手、m3u8 文件下载与解析、ts 文件下载与解析等多个步骤，可以缩短列表的长度和单个 ts 文件的大小来降低延迟，极致来说可以缩减列表长度为 1，并且 ts 的时长为 1s，但是这样会造成请求次数增加，增大服务器压力，当网速慢时回造成更多的缓冲，所以苹果官方推荐的 ts 时长时 10s，所以这样就会大改有 30s 的延迟。&lt;/p></description></item><item><title>HTTP-FLV</title><link>https://ng-tech.icu/books/solutions-series/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%9B%B4%E6%92%AD/%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/http-flv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/solutions-series/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%9B%B4%E6%92%AD/%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/http-flv/</guid><description>&lt;h1 id="http-flv">HTTP-FLV&lt;/h1>
&lt;p>RTMP 是直接将流的传输架在 RTMP 协议之上，而 HTTP-FLV 是在 RTMP 和客户端之间套了一层转码的过程，即：&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://user-images.githubusercontent.com/5803001/47570314-735b7580-d968-11e8-9b7e-7c42d830afc9.png" alt="image" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>每个 FLV 文件是通过 HTTP 的方式获取的，所以，它通过抓包得出的协议头需要使用 chunked 编码：&lt;/p>
&lt;pre tabindex="0">&lt;code>Content-Type:video/x-flv
Expires:Fri, 10 Feb 2017 05:24:03 GMT
Pragma:no-cache
Transfer-Encoding:chunked
&lt;/code>&lt;/pre></description></item><item><title>RTMP</title><link>https://ng-tech.icu/books/solutions-series/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%9B%B4%E6%92%AD/%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/rtmp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/solutions-series/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%9B%B4%E6%92%AD/%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/rtmp/</guid><description>&lt;h1 id="rtmp">RTMP&lt;/h1>
&lt;p>RTMP，Real-Time Messaging Protocol 是由 Adobe 推出的音视频流传递协议，该协议从属于应用层，被设计用来在适合的传输协议（如 TCP）上复用和打包多媒体传输流（如音频、视频和互动内容）。RTMP 提供了一套全双工的可靠的多路复用消息服务，类似于 TCP 协议[RFC0793]，用来在一对结点之间并行传输带时间戳的音频流，视频流，数据流。通常情况下，不同类型的消息会被分配不同的优先级，当网络传输能力受限时，优先级用来控制消息在网络底层的排队顺序。&lt;/p>
&lt;p>RTMP 协议根据不同的套层，也可以分为：&lt;/p>
&lt;ul>
&lt;li>纯 RTMP: 直接通过 TCP 连接，端口为 1935&lt;/li>
&lt;li>RTMPS: RTMP + TLS/SSL，用于安全性的交流。&lt;/li>
&lt;li>RTMPE: RTMP + encryption。在 RTMP 原始协议上使用，Adobe 自身的加密方法&lt;/li>
&lt;li>RTMPT: RTMP + HTTP。使用 HTTP 的方式来包裹 RTMP 流，这样能直接通过防火墙。不过，延迟性比较大。&lt;/li>
&lt;li>RTMFP: RMPT + UDP。该协议常常用于 P2P 的场景中，针对延时有变态的要求。&lt;/li>
&lt;/ul>
&lt;p>在 Web 上可以通过 MSE（MediaSource Extensions）来接入 RTMP，基本思路是根据 WebSocket 直接建立长连接进行数据的交流和监听。&lt;/p>
&lt;h1 id="协议规范">协议规范&lt;/h1>
&lt;p>RTMP 内部是借由 TCP 长连接协议传输相关数据，所以，它的延时性非常低。并且，该协议灵活性非常好（所以，也很复杂），它可以根据 message stream ID 传输数据，也可以根据 chunk stream ID 传递数据。两者都可以起到流的划分作用。流的内容也主要分为：视频，音频，相关协议包等。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://user-images.githubusercontent.com/5803001/47570269-56bf3d80-d968-11e8-8e9c-4fc8a5e1a873.png" alt="RTMP 协议示范" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>当使用一个可靠的传输协议如 TCP[RFC0793] 时，RTMP 块流提供了一种可以在多个流中，基于时间戳的端到端交付所有消息的方法。RTMP 块流不提供任何优先级或类似形式的控制，但可以使用更高级别的协议来提供这样的优先级。例如，一个视频服务器可以根据发送的时间或确认每个消息的时间，来决定为一个网络差的用户丢弃视频信息，以确保音频信息的及时接收。RTMP 块流不仅包含了自己的协议控制信息，同时也提供了一个更高级别的协议机制，用来嵌入用户控制信息。&lt;/p>
&lt;h2 id="消息格式">消息格式&lt;/h2>
&lt;p>消息格式可以被分割成多个块，用来在更高的协议中支持多路复用。在创建块消息格式时，应该包含以下字段:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>时间戳：消息的时间戳。这个字段占用 4 字节。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>长度：消息的有效长度。如果消息头不能被忽略，它应该包括长度。这个字段在块头中占用 3 字节。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>类型 ID：各种类型的协议控制消息的 ID。这些消息使用 RTMP 块流协议和更高级别的协议来传输信息。所有其他类型的 ID 可以用在高级协议，这对于 RTMP 块流来说，是不透明的。事实上，RTMP 块流中没有要求使用这些值作为类型；所有(无协议的)消息可能是相同的类型，或者应用程序使用这个字段来区分多个连接，而不是类型。这个字段在块头中占用 1 字节。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>消息流 ID：消息流 ID 可以是任意值。当同一个块流被复用到不同的消息流中时，可以通过消息流 ID 来区分它们。另外，对于 RTMP 块流而言，这是一个不透明值。该字段占用 4 字节，使用小端序。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="握手">握手&lt;/h2>
&lt;p>RTMP 连接从握手开始。它包含三个固定大小的块，不像其他的协议，是由头部大小可变的块组成的。客户端（初始化连接的一端）和服务端发送同样的三个块。为了方便描述，客户端发送的三个块命名为 C0，C1，C2；服务端发送的三个块命名为 S0，S1，S2。&lt;/p>
&lt;p>客户端通过发送 C0 和 C1 消息来启动握手过程。客户端必须接收到 S1 消息，然后发送 C2 消息。客户端必须接收到 S2 消息，然后发送其他数据。服务端必须接收到 C0 或者 C1 消息，然后发送 S0 和 S1 消息。服务端必须接收到 C1 消息，然后发送 S2 消息。服务端必须接收到 C2 消息，然后发送其他数据。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">+-------------+ +-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Client &lt;span class="p">|&lt;/span> TCP/IP Network &lt;span class="p">|&lt;/span> Server &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-------------+ &lt;span class="p">|&lt;/span> +-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Uninitialized &lt;span class="p">|&lt;/span> Uninitialized
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> C0 &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span>-------------------&amp;gt;&lt;span class="p">|&lt;/span> C0 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>--------------------&amp;gt;&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> C1 &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span>-------------------&amp;gt;&lt;span class="p">|&lt;/span> S0 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>&amp;lt;--------------------&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> S1 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Version sent &lt;span class="p">|&lt;/span>&amp;lt;--------------------&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> S0 &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span>&amp;lt;-------------------&lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> S1 &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span>&amp;lt;-------------------&lt;span class="p">|&lt;/span> Version sent
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> C1 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>--------------------&amp;gt;&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> C2 &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span>-------------------&amp;gt;&lt;span class="p">|&lt;/span> S2 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>&amp;lt;--------------------&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Ack sent &lt;span class="p">|&lt;/span> Ack Sent
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> S2 &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span>&amp;lt;-------------------&lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> C2 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>--------------------&amp;gt;&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Handshake Done &lt;span class="p">|&lt;/span> Handshake Done
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面是握手示意图中提到的状态:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>未初始化：协议版本号在此阶段发送。客户端和服务器均处于未初始化状态。客户端发送携带协议版本号的 C0 包。如果服务器支持此版本，回复 S0 和 S1 包。如果服务器不支持此版本，使用适当的动作回复。在 RTMP 协议中，此动作是中止连接。
注: 在”C0 和 S0 格式”章节中提及,如果服务器不支持客户端的版本号,可以选择降到版本 3 或中止。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>发送版本：客户端和服务器双方在未初始化状态后，会进入发送版本状态。之后，客户端等待 S1 包，服务器等待 C1 包。待接收到数据包，客户端发送 C2 包，服务器发送 S2 包。然后，双方都进入答复状态。客户端等待 C2 的答复，服务器等待 S2 的答复。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>握手完成：客户端和服务器交换消息。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="rtmp-代理">RTMP 代理&lt;/h1>
&lt;p>关于 RTMP 代理的协议规范。RTMP 是字节协议，第一个包是 c0，1 个字节，一般是 03 表示是明文的 RTMP。所以如果需要做 RTMP 代理，如果直接转发 RTMP 客户端的消息，是没法传递额外的信息的，譬如 HTTP 代理在 Header 中传递的 X-Real-IP，即客户端的 IP，就没法给 RTMP 的后端了。&lt;/p>
&lt;p>因此，RTMP 的 Proxy 协议必须使用私有协议，c0 的意义必须改写了，譬如另外一个值表示是代理，后面跟随了一些协议信息，这个协议就是 RTMP Proxy 协议。&lt;/p>
&lt;p>使用网络字节序，big-endian。在 C0 前插入代理的包，兼容 RTMP 标准协议。&lt;/p>
&lt;p>标准 RTMP 协议如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>C0, 1B, 03表示明文RTMP。后面是C1C2以及其他消息。
&lt;/code>&lt;/pre>&lt;p>RTMP 代理协议如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>F3, 1B，常量0xF3，表示RTMP代理协议。
Size, 2B, 表示代理数据的长度，即Size和C0之间的数据。
X-Real-IP, 4B, 表示客户端的真实IP。
C0, 1B，原始客户端的C0，方便代理直接转发客户端的数据。
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>备注：一般 Size 应该不超过 C0C1 长度，即&lt;code>Size&amp;lt;=1537&lt;/code>。&lt;/p>
&lt;/blockquote>
&lt;p>例如，标准 RTMP 客户端的消息：&lt;/p>
&lt;pre tabindex="0">&lt;code>03 // 客户端的C0包，后面是C1C2，以及其他的消息。
&lt;/code>&lt;/pre>&lt;p>或者，代理客户端发送的消息：&lt;/p>
&lt;pre tabindex="0">&lt;code>F3 // 表示是RTMP代理
00 04 // 表示Extra有4字节
C0 A8 01 67 // 表示客户端IP，C0.A8.01.67，即192.168.1.103
03 // 客户端原始的C0数据。从这个数据（包括它本身）开始，就是客户端发送的消息了，譬如C1C2。
&lt;/code>&lt;/pre>&lt;p>RTMP 协议，譬如握手的 C0、C1、C2、S0、S1、S2，以及数据部分，都没有变更。&lt;/p></description></item><item><title>RTSP</title><link>https://ng-tech.icu/books/solutions-series/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%9B%B4%E6%92%AD/%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/rtsp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/solutions-series/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%9B%B4%E6%92%AD/%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/rtsp/</guid><description>&lt;h1 id="rtsp">RTSP&lt;/h1>
&lt;p>RTSP（Real Time Streaming Protocol）是由 Real Network 和 Netscape 共同提出的如何有效地在 IP 网络上传输流媒体数据的应用层协议。RTSP 对流媒体提供了诸如暂停，快进等控制，而它本身并不传输数据，RTSP 的作用相当于流媒体服务器的远程控制。服务器端可以自行选择使用 TCP 或 UDP 来传送串流内容，它的语法和运作跟 HTTP 1.1 类似，但并不特别强调时间同步，所以比较能容忍网络延迟。而且允许同时多个串流需求控制（Multicast），除了可以降低服务器端的网络用量，还可以支持多方视频会议（Video onference）因为与 HTTP1.1 的运作方式相似，所以代理服务器的快取功能 Cache 也同样适用于 RTSP，并因 RTSP 具有重新导向功能，可视实际负载情况来转换提供服务的服务器，以避免过大的负载集中于同一服务器而造成延迟。&lt;/p>
&lt;h2 id="rtsp-和-http-的区别和联系">RTSP 和 HTTP 的区别和联系&lt;/h2>
&lt;p>联系在于，两者都用纯文本来发送消息，且 rtsp 协议的语法也和 HTTP 类似。Rtsp 一开始这样设计，也是为了能够兼容使用以前写的 HTTP 协议分析代码。&lt;/p>
&lt;p>区别在于，rtsp 是有状态的，不同的是 RTSP 的命令需要知道现在正处于一个什么状态，也就是说 rtsp 的命令总是按照顺序来发送，某个命令总在另外一个命令之前要发送。Rtsp 不管处于什么状态都不会去断掉连接。，而 http 则不保存状态，协议在发送一个命令以后，连接就会断开，且命令之间是没有依赖性的。rtsp 协议使用 554 端口，http 使用 80 端口。&lt;/p>
&lt;h2 id="rtsp-和-sip-的区别和联系">RTSP 和 SIP 的区别和联系&lt;/h2>
&lt;p>SIP（Session Initiation Protocol），是基于 IP 的一个应用层控制协议。由于 SIP 是基于纯文本的信令协议，可以管理不同接入网络上的会话等。会话可以是终端设备之间任何类型的通信，如视频会话、既时信息处理或协作会话。该协议不会定义或限制可使用的业务，传输、服务质量、计费、安全性等问题都由基本核心网络和其它协议处理。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>联系：sip 和 rtsp 都是应用层的控制协议，负责一次通信过程的建立和控制和结束，不负责中间的传输部分。他们都是基于纯文本的信令协议，穿墙性能良好。支持 tcp、udp，支持多方通信。他们都需要服务器支持，都支持会话中重定向。sip 和 rtsp 都使用 sdp 协议来传送媒体参数，使用 rtp（rtcp）协议来传输媒体流。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>区别：rtsp 是专门为流媒体制定的协议，在多个媒体流的时间同步方面比 sip 强大。rtsp 还提供网络负载均衡的功能，减轻服务器压力和网络带宽要求。sip 一般用来创建一次音频、视频通话（双向），而 rtsp 一般用来做视频点播、视频监控等（单向）。当然，从原理上讲，rtsp 也可以做双向的视频通话。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="rtsp-和-rtprtcp的关系">RTSP 和 RTP（RTCP）的关系&lt;/h2>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://s2.ax1x.com/2020/02/10/151agH.png" alt="RTSP 网络层次图" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>rtsp 负责建立和控制会话，rtp 负责多媒体的传输，rtcp 配合 rtp 做控制和流量统计，他们是合作的关系。&lt;/p>
&lt;h1 id="消息">消息&lt;/h1>
&lt;p>RTSP 的消息有两大类，一是请求消息(request)，一是回应消息(response)，两种消息的格式不同。&lt;/p>
&lt;p>请求消息格式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-s" data-lang="s">&lt;span class="line">&lt;span class="cl">方法 &lt;span class="n">URI&lt;/span> &lt;span class="n">RTSP&lt;/span> 版本 &lt;span class="n">CR&lt;/span> &lt;span class="n">LF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">消息头 &lt;span class="n">CR&lt;/span> &lt;span class="n">LF&lt;/span> &lt;span class="n">CR&lt;/span> &lt;span class="n">LF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">消息体 &lt;span class="n">CR&lt;/span> &lt;span class="n">LF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中方法包括 OPTIONS、SETUP、PLAY、TEARDOWN 等待，URI 是接收方（服务端）的地址，例如：rtsp://192.168.22.136:5000/v0，每行后面的 CR LF 表示回车换行，需要接收端有相应的解析，最后一个消息头需要有两个 CR LF。&lt;/p>
&lt;p>回应消息格式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-s" data-lang="s">&lt;span class="line">&lt;span class="cl">&lt;span class="n">RTSP&lt;/span> 版本 状态码 解释 &lt;span class="n">CR&lt;/span> &lt;span class="n">LF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">消息头 &lt;span class="n">CR&lt;/span> &lt;span class="n">LF&lt;/span> &lt;span class="n">CR&lt;/span> &lt;span class="n">LF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">消息体 &lt;span class="n">CR&lt;/span> &lt;span class="n">LF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中 RTSP 版本一般都是 RTSP/1.0，状态码是一个数值，200 表示成功，解释是与状态码对应的文本解释。状态码由三位数组成，表示方法执行的结果，定义如下：&lt;/p>
&lt;ul>
&lt;li>1XX：保留，将来使用；&lt;/li>
&lt;li>2XX：成功，操作被接收、理解、接受（received,understand,accepted）；&lt;/li>
&lt;li>3XX：重定向，要完成操作必须进行进一步操作；&lt;/li>
&lt;li>4XX：客户端出错，请求有语法错误或无法实现；&lt;/li>
&lt;li>5XX：服务器出错，服务器无法实现合法的请求。&lt;/li>
&lt;/ul>
&lt;h1 id="方法">方法&lt;/h1>
&lt;p>rtsp 中定义的方法有：OPTIONS, DESCRIBE, SETUP, TEARDOWN, PLAY, PAUSE, SCALE, GET_PARAMETER，SET_PARAMETER。&lt;/p>
&lt;h2 id="option">OPTION&lt;/h2>
&lt;p>目的是得到服务器提供的可用方法:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">OPTIONS rtsp://192.168.20.136:5000/xxx666 RTSP/1.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CSeq: &lt;span class="m">1&lt;/span> //每个消息都有序号来标记，第一个包通常是 option 请求消息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">User-Agent: VLC media player &lt;span class="o">(&lt;/span>LIVE555 Streaming Media v2005.11.10&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 服务器的回应信息包括提供的一些方法,例如:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">RTSP/1.0 &lt;span class="m">200&lt;/span> OK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Server: UServer 0.9.7_rc1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Cseq: &lt;span class="m">1&lt;/span> //每个回应消息的 cseq 数值和请求消息的 cseq 相对应
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Public: OPTIONS, DESCRIBE, SETUP, TEARDOWN, PLAY, PAUSE, SCALE, GET_PARAMETER //服务器提供的可用的方法
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="describe">DESCRIBE&lt;/h2>
&lt;p>C 向 S 发起 DESCRIBE 请求,为了得到会话描述信息(SDP):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">DESCRIBE rtsp://192.168.20.136:5000/xxx666 RTSP/1.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CSeq: &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">token:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Accept: application/sdp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">User-Agent: VLC media player &lt;span class="o">(&lt;/span>LIVE555 Streaming Media v2005.11.10&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 服务器回应一些对此会话的描述信息(sdp):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">RTSP/1.0 &lt;span class="m">200&lt;/span> OK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Server: UServer 0.9.7_rc1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Cseq: &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">x-prev-url: rtsp://192.168.20.136:5000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">x-next-url: rtsp://192.168.20.136:5000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">x-Accept-Retransmit: our-retransmit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">x-Accept-Dynamic-Rate: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Cache-Control: must-revalidate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Last-Modified: Fri, &lt;span class="m">10&lt;/span> Nov &lt;span class="m">2006&lt;/span> 12:34:38 GMT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Date: Fri, &lt;span class="m">10&lt;/span> Nov &lt;span class="m">2006&lt;/span> 12:34:38 GMT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Expires: Fri, &lt;span class="m">10&lt;/span> Nov &lt;span class="m">2006&lt;/span> 12:34:38 GMT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Base: rtsp://192.168.20.136:5000/xxx666/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Length: &lt;span class="m">344&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Type: application/sdp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">v&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> //以下都是 sdp 信息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">o&lt;/span>&lt;span class="o">=&lt;/span>OnewaveUServerNG &lt;span class="m">1451516402&lt;/span> &lt;span class="m">1025358037&lt;/span> IN IP4 192.168.20.136
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">s&lt;/span>&lt;span class="o">=&lt;/span>/xxx666
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">u&lt;/span>&lt;span class="o">=&lt;/span>http:///
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">e&lt;/span>&lt;span class="o">=&lt;/span>admin@
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">c&lt;/span>&lt;span class="o">=&lt;/span>IN IP4 0.0.0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">t&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">a&lt;/span>&lt;span class="o">=&lt;/span>isma-compliance:1,1.0,1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">a&lt;/span>&lt;span class="o">=&lt;/span>range:npt&lt;span class="o">=&lt;/span>0-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">m&lt;/span>&lt;span class="o">=&lt;/span>video &lt;span class="m">0&lt;/span> RTP/AVP &lt;span class="m">96&lt;/span> //m 表示媒体描述，下面是对会话中视频通道的媒体描述
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">a&lt;/span>&lt;span class="o">=&lt;/span>rtpmap:96 MP4V-ES/90000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">a&lt;/span>&lt;span class="o">=&lt;/span>fmtp:96 profile-level-id&lt;span class="o">=&lt;/span>245&lt;span class="p">;&lt;/span>&lt;span class="nv">config&lt;/span>&lt;span class="o">=&lt;/span>000001B0F5000001B509000001000000012000C888B0E0E0FA62D089028307
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">a&lt;/span>&lt;span class="o">=&lt;/span>control:trackID&lt;span class="o">=&lt;/span>0//trackID ＝ &lt;span class="m">0&lt;/span> 表示视频流用的是通道 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="setup">SETUP&lt;/h2>
&lt;p>客户端提醒服务器建立会话,并确定传输模式:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">SETUP rtsp://192.168.20.136:5000/xxx666/trackID&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> RTSP/1.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CSeq: &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Transport: RTP/AVP/TCP&lt;span class="p">;&lt;/span>unicast&lt;span class="p">;&lt;/span>&lt;span class="nv">interleaved&lt;/span>&lt;span class="o">=&lt;/span>0-1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">User-Agent: VLC media player &lt;span class="o">(&lt;/span>LIVE555 Streaming Media v2005.11.10&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//uri 中带有 trackID ＝ 0，表示对该通道进行设置。Transport 参数设置了传输模式，包的结构。接下来的数据包头部第二个字节位置就是 interleaved，它的值是每个通道都不同的，trackID ＝ &lt;span class="m">0&lt;/span> 的 interleaved 值有两个 0或1，0 表示 rtp 包，1 表示 rtcp 包，接受端根据 interleaved 的值来区别是哪种数据包。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 服务器回应信息:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">RTSP/1.0 &lt;span class="m">200&lt;/span> OK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Server: UServer 0.9.7_rc1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Cseq: &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Session: &lt;span class="m">6310936469860791894&lt;/span> //服务器回应的会话标识符
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Cache-Control: no-cache
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Transport: RTP/AVP/TCP&lt;span class="p">;&lt;/span>unicast&lt;span class="p">;&lt;/span>&lt;span class="nv">interleaved&lt;/span>&lt;span class="o">=&lt;/span>0-1&lt;span class="p">;&lt;/span>&lt;span class="nv">ssrc&lt;/span>&lt;span class="o">=&lt;/span>6B8B4567
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="play">PLAY&lt;/h2>
&lt;p>客户端发送播放请求:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-s" data-lang="s">&lt;span class="line">&lt;span class="cl">&lt;span class="n">PLAY&lt;/span> &lt;span class="n">rtsp&lt;/span>&lt;span class="o">://&lt;/span>&lt;span class="m">192.168.20.136&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">5000&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">xxx666&lt;/span> &lt;span class="n">RTSP&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">1.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CSeq&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Session&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="m">6310936469860791894&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Range&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">npt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0.000&lt;/span>&lt;span class="o">-&lt;/span> &lt;span class="o">//&lt;/span>设置播放时间的范围
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">User&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Agent&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">VLC&lt;/span> &lt;span class="n">media&lt;/span> &lt;span class="nf">player &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LIVE555&lt;/span> &lt;span class="n">Streaming&lt;/span> &lt;span class="n">Media&lt;/span> &lt;span class="n">v2005.11.10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 服务器回应信息:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">RTSP&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">1.0&lt;/span> &lt;span class="m">200&lt;/span> &lt;span class="n">OK&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Server&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">UServer&lt;/span> &lt;span class="m">0.9.7&lt;/span>&lt;span class="n">_rc1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Cseq&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Session&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="m">6310936469860791894&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Range&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">npt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0.000000&lt;/span>&lt;span class="o">-&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">RTP&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Info&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">url&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">trackID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">17040&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">rtptime&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1467265309&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span>&lt;span class="n">seq&lt;/span> 和 &lt;span class="n">rtptime&lt;/span> 都是 &lt;span class="n">rtp&lt;/span> 包中的信息
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="teardown">TEARDOWN&lt;/h2>
&lt;p>客户端发起关闭请求:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">TEARDOWN rtsp://192.168.20.136:5000/xxx666 RTSP/1.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CSeq: &lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Session: &lt;span class="m">6310936469860791894&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">User-Agent: VLC media player &lt;span class="o">(&lt;/span>LIVE555 Streaming Media v2005.11.10&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 服务器回应:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">RTSP/1.0 &lt;span class="m">200&lt;/span> OK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Server: UServer 0.9.7_rc1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Cseq: &lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Session: &lt;span class="m">6310936469860791894&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Connection: Close
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>以上方法都是交互过程中最为常用的,其它还有一些重要的方法如 get/set_parameter,pause,redirect 等等&lt;/p></description></item></channel></rss>