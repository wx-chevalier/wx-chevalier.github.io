<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>1.快速开始 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/java-series/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/gradle/1.%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/</link><atom:link href="https://ng-tech.icu/books/java-series/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/gradle/1.%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/index.xml" rel="self" type="application/rss+xml"/><description>1.快速开始</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>1.快速开始</title><link>https://ng-tech.icu/books/java-series/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/gradle/1.%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/</link></image><item><title>安装配置</title><link>https://ng-tech.icu/books/java-series/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/gradle/1.%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/java-series/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/gradle/1.%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid><description>&lt;h1 id="gradle-快速开始">Gradle 快速开始&lt;/h1>
&lt;h1 id="安装与配置">安装与配置&lt;/h1>
&lt;h2 id="手动安装">手动安装&lt;/h2>
&lt;p>首先，先 download 最新版本的 gradle，网址如下：&lt;a href="http://www.gradle.org/get-started" target="_blank" rel="noopener">download&lt;/a>。然后将下载下来的 zip 包放在你要安装的路径上，我安装在&lt;/p>
&lt;pre tabindex="0">&lt;code>/usr/local/bin；
&lt;/code>&lt;/pre>&lt;p>然后打开电脑上的.bash_profile 文件，输入以下命令：&lt;/p>
&lt;pre tabindex="0">&lt;code>GRADLE_HOME=/usr/local/bin/gradle-1.8;
export GRADLE_HOME
export PATH=$PATH:$GRADLE_HOME/bin
&lt;/code>&lt;/pre>&lt;p>然后再在 console 上输入以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">source&lt;/span> ~/.bash_profile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样就安装成功啦，可以通过以下命令来查看是否安装成功。&lt;/p>
&lt;pre tabindex="0">&lt;code>gradle -version
&lt;/code>&lt;/pre>&lt;p>如果提示没有 gradle 命令，则有可能是：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>GRADLE_HOME 路径可能不对；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>没有执行 source ~/.bash_profile&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="使用-sdkman-安装">使用 sdkman 安装&lt;/h2>
&lt;h1 id="常用命令">常用命令&lt;/h1></description></item><item><title>项目初始化</title><link>https://ng-tech.icu/books/java-series/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/gradle/1.%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/java-series/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/gradle/1.%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/</guid><description>&lt;h1 id="初始化项目">初始化项目&lt;/h1>
&lt;h1 id="init-初始化">init 初始化&lt;/h1>
&lt;p>Gradle 有一个内置的任务，叫做 init，可以在一个空的文件夹中初始化一个新的 Gradle 项目。init 任务使用（也是内置的）wrapper 任务来创建一个 Gradle 包装脚本，即 gradlew。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ mkdir demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> demo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在新项目目录下，在终端使用以下命令运行 init 任务：&lt;code>gradle init&lt;/code>。当提示时，选择&lt;code>2：应用程序&lt;/code>项目类型和&lt;code>3：Java&lt;/code>作为实现语言。接下来你可以选择用于编写构建脚本的 DSL - &lt;code>1: Groovy&lt;/code>或&lt;code>2: Kotlin&lt;/code>。对于其他问题，按回车键，使用默认值。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-groovy" data-lang="groovy">&lt;span class="line">&lt;span class="cl">&lt;span class="n">$&lt;/span> &lt;span class="n">gradle&lt;/span> &lt;span class="n">init&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Select&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">project&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="nl">generate:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">basic&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">2&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">application&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">3&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">library&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">4&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">Gradle&lt;/span> &lt;span class="n">plugin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Enter&lt;/span> &lt;span class="nf">selection&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">basic&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">..&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Select&lt;/span> &lt;span class="n">implementation&lt;/span> &lt;span class="nl">language:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="o">++&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">2&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">Groovy&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">3&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">Java&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">4&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">Kotlin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">5&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">Scala&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">6&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">Swift&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Enter&lt;/span> &lt;span class="nf">selection&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">Java&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">..&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Select&lt;/span> &lt;span class="n">build&lt;/span> &lt;span class="n">script&lt;/span> &lt;span class="nl">DSL:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">Groovy&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">2&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">Kotlin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Enter&lt;/span> &lt;span class="nf">selection&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">Groovy&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">..&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Select&lt;/span> &lt;span class="n">test&lt;/span> &lt;span class="nl">framework:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">JUnit&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">2&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">TestNG&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">3&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">Spock&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">4&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">JUnit&lt;/span> &lt;span class="n">Jupiter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Enter&lt;/span> &lt;span class="nf">selection&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">JUnit&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">..&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Project&lt;/span> &lt;span class="nf">name&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">demo&lt;/span>&lt;span class="o">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Source&lt;/span> &lt;span class="nf">package&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">demo&lt;/span>&lt;span class="o">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">BUILD&lt;/span> &lt;span class="n">SUCCESSFUL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2&lt;/span> &lt;span class="n">actionable&lt;/span> &lt;span class="nl">tasks:&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="n">executed&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>init 任务生成的新项目的结构如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-s" data-lang="s">&lt;span class="line">&lt;span class="cl">├── &lt;span class="n">gradle&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── &lt;span class="n">wrapper&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── &lt;span class="n">gradle&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">wrapper.jar&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── &lt;span class="n">gradle&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">wrapper.properties&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── &lt;span class="n">gradlew&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── &lt;span class="n">gradlew.bat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── &lt;span class="n">settings.gradle&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── &lt;span class="n">build.gradle&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── &lt;span class="n">src&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── &lt;span class="n">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ └── &lt;span class="n">java&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ └── &lt;span class="n">demo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ └── &lt;span class="n">App.java&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── &lt;span class="n">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── &lt;span class="n">java&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── &lt;span class="n">demo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── &lt;span class="n">AppTest.java&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中，settings.gradle(.kts) 文件有两行有趣的内容。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>rootProject.name&lt;/code>为构建指定了一个名称，它覆盖了以构建所在的目录命名的默认行为。建议设置一个固定的名字，因为如果项目是共享的&amp;ndash;例如作为 Git 仓库的根目录，文件夹可能会改变。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>include(&amp;quot;app&amp;quot;)&lt;/code>定义构建由一个名为&lt;code>app&lt;/code>的子项目组成，包含实际的代码和构建逻辑。更多的子项目可以通过额外的`include(..)&amp;lsquo;语句添加。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>我们的构建包含一个名为 app 的子项目，代表我们正在构建的 Java 应用程序。它被配置在 app/build.gradle(.kts)文件中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-s" data-lang="s">&lt;span class="line">&lt;span class="cl">&lt;span class="n">plugins&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id&lt;/span> &lt;span class="s">&amp;#39;application&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">repositories&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">mavenCentral&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dependencies&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">testImplementation&lt;/span> &lt;span class="s">&amp;#39;org.junit.jupiter:junit-jupiter:5.7.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">implementation&lt;/span> &lt;span class="s">&amp;#39;com.google.guava:guava:30.1-jre&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">application&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mainClass&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#39;demo.App&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">tasks.named&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#39;test&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">useJUnitPlatform&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="运行与打包">运行与打包&lt;/h1>
&lt;p>src/main/java/demo/App.java 内容如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nn">demo&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">App&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getGreeting&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;Hello World!&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">App&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">getGreeting&lt;/span>&lt;span class="o">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 对应的测试文件如下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.junit.jupiter.api.Test&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.junit.jupiter.api.Assertions.*&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">AppTest&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nd">@Test&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">appHasAGreeting&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">App&lt;/span> &lt;span class="n">classUnderTest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">App&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">assertNotNull&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">classUnderTest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getGreeting&lt;/span>&lt;span class="o">(),&lt;/span> &lt;span class="s">&amp;#34;app should have a greeting&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>多亏了 application 插件，你可以直接从命令行运行应用程序。运行任务告诉 Gradle 执行分配给 mainClass 属性的类中的主方法。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-s" data-lang="s">&lt;span class="line">&lt;span class="cl">&lt;span class="o">$&lt;/span> &lt;span class="n">./gradlew&lt;/span> &lt;span class="n">run&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="o">:&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">run&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Hello&lt;/span> &lt;span class="n">world&lt;/span>&lt;span class="o">!&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">BUILD&lt;/span> &lt;span class="n">SUCCESSFUL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span> &lt;span class="n">actionable&lt;/span> &lt;span class="n">tasks&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="n">executed&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第一次运行包装脚本 gradlew 时，可能会有延迟，因为该版本的 gradle 被下载并存储在本地的~/.gradle/wrapper/dists 文件夹中。该 application 插件还为你捆绑了应用程序及其所有的依赖性。归档文件还将包含一个脚本，可以用一个命令启动应用程序。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">$&lt;/span> &lt;span class="o">./&lt;/span>&lt;span class="n">gradlew&lt;/span> &lt;span class="n">build&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">BUILD&lt;/span> &lt;span class="n">SUCCESSFUL&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">7&lt;/span> &lt;span class="n">actionable&lt;/span> &lt;span class="n">tasks&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">7&lt;/span> &lt;span class="n">executed&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果你如上所示运行一个完整的构建，Gradle 将为你生成两种格式的存档。&lt;code>app/build/distributions/app.tar&lt;/code>和&lt;code>app/build/distributions/app.zip&lt;/code>。了解你的构建在幕后做什么的最好方法是发布一个构建扫描。要做到这一点，只需用&lt;code>--scan&lt;/code>标记运行 Gradle。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">$&lt;/span> &lt;span class="o">./&lt;/span>&lt;span class="n">gradlew&lt;/span> &lt;span class="n">build&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">scan&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">BUILD&lt;/span> &lt;span class="n">SUCCESSFUL&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">7&lt;/span> &lt;span class="n">actionable&lt;/span> &lt;span class="n">tasks&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">7&lt;/span> &lt;span class="n">executed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Publishing&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">build&lt;/span> &lt;span class="n">scan&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">scans&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">gradle&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">com&lt;/span> &lt;span class="n">requires&lt;/span> &lt;span class="n">accepting&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">Gradle&lt;/span> &lt;span class="n">Terms&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">Service&lt;/span> &lt;span class="n">defined&lt;/span> &lt;span class="n">at&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="c1">//gradle.com/terms-of-service.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">Do&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">accept&lt;/span> &lt;span class="n">these&lt;/span> &lt;span class="n">terms&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="n">yes&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">no&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Gradle&lt;/span> &lt;span class="n">Terms&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">Service&lt;/span> &lt;span class="n">accepted&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Publishing&lt;/span> &lt;span class="n">build&lt;/span> &lt;span class="n">scan&lt;/span>&lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nl">https:&lt;/span>&lt;span class="c1">//gradle.com/s/5u4w3gxeurtd2
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>