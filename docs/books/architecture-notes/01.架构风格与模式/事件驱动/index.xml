<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>事件驱动 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8/</link><atom:link href="https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8/index.xml" rel="self" type="application/rss+xml"/><description>事件驱动</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>事件驱动</title><link>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8/</link></image><item><title>EventSourcing</title><link>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8/eventsourcing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8/eventsourcing/</guid><description>&lt;h1 id="event-sourcing">Event Sourcing&lt;/h1>
&lt;p>查询方面，直接通过方法查询数据库，然后通过 DTO 将数据返回。在操作(Command)方面，是通过发送 Command 实现，由 CommandBus 处理特定的 Command，然后由 Command 将特定的 Event 发布到 EventBus 上，然后 EventBus 使用特定的 Handler 来处理事件，执行一些诸如，修改，删除，更新等操作。这里，所有与 Command 相关的操作都通过 Event 实现。这样我们可以通过记录 Event 来记录系统的运行历史记录，并且能够方便的回滚到某一历史状态。Event Sourcing 就是用来进行存储和管理事件的。&lt;/p></description></item><item><title>事件溯源</title><link>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8/%E4%BA%8B%E4%BB%B6%E6%BA%AF%E6%BA%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8/%E4%BA%8B%E4%BB%B6%E6%BA%AF%E6%BA%90/</guid><description>&lt;h1 id="事件溯源">事件溯源&lt;/h1>
&lt;p>事件溯源。而对于领域对象来说，我们也应该知晓其整个生命周期的演变过程，这样有利于查看并还原某一“时刻”的领域对象，在 EDA 架构中，对于领域对象状态的保存是通过领域事件进行完成，所以我们要想记录领域对象的状态记录，就需要把领域对象所经历的所有事件进行保存下来，这就是 Event Store（事件存储），这个东西就相当于 Git 代码服务器，存储所有领域对象所经历的事件，对于某一事件来说，可以看作是对应领域对象的“快照”。&lt;/p></description></item></channel></rss>