<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>事务脚本 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E5%8A%A1%E8%84%9A%E6%9C%AC/</link><atom:link href="https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E5%8A%A1%E8%84%9A%E6%9C%AC/index.xml" rel="self" type="application/rss+xml"/><description>事务脚本</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>事务脚本</title><link>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E5%8A%A1%E8%84%9A%E6%9C%AC/</link></image><item><title>表模块</title><link>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E5%8A%A1%E8%84%9A%E6%9C%AC/%E8%A1%A8%E6%A8%A1%E5%9D%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E5%8A%A1%E8%84%9A%E6%9C%AC/%E8%A1%A8%E6%A8%A1%E5%9D%97/</guid><description>&lt;h1 id="表模块">表模块&lt;/h1></description></item><item><title>活动记录</title><link>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E5%8A%A1%E8%84%9A%E6%9C%AC/%E6%B4%BB%E5%8A%A8%E8%AE%B0%E5%BD%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E5%8A%A1%E8%84%9A%E6%9C%AC/%E6%B4%BB%E5%8A%A8%E8%AE%B0%E5%BD%95/</guid><description>&lt;h1 id="活动记录">活动记录&lt;/h1></description></item><item><title>事务脚本</title><link>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E5%8A%A1%E8%84%9A%E6%9C%AC/%E4%BA%8B%E5%8A%A1%E8%84%9A%E6%9C%AC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/architecture-notes/01.%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E6%A8%A1%E5%BC%8F/%E4%BA%8B%E5%8A%A1%E8%84%9A%E6%9C%AC/%E4%BA%8B%E5%8A%A1%E8%84%9A%E6%9C%AC/</guid><description>&lt;h1 id="事务脚本">事务脚本&lt;/h1>
&lt;p>使用过程来组织业务逻辑，每个过程处理来自表现层的单个请求。对于很对业务应用来说都可以被看作是一系列事务。业务的一个请求将触发一系列的业务处理逻辑，而我们在代码中通常采用 SpringAOP 声明式事务方式将事务控制在业务层的实现类的方法上面，一个请求对应一套业务流程，对应一个事务控制。前面我们也提到了事物的 4 个特性中，有一个隔离性表示事务与事务间是相互隔离的，互不影响的。&lt;/p>
&lt;p>事务脚本将所有这些业务逻辑组织成单个过程，在组织时通常都是考虑的业务逻辑的过程，将业务逻辑按照一定的顺序排列执行，然后将事务控制在某一个主方法的入口上，并且在过程中直接调用数据库，或者调用数据库封装器（如 MyBatis、Hibernate 等 ORM 映射框架）。每个事物都有属于它自己的事物脚本，这里的脚本指的是方法。事务脚本比较适合于业务逻辑相对简单的情况下，理论上来说，事务控制在 3 层架构中任何一层都是可以的，但是我们通常来说，都是控制在业务层的实现上的。事务脚本是属于领域逻辑模式中一种，将其置于与其他处理表现层和数据源层的类相对独立的类中。如果置于数据源层的类中，会失去事务脚本的控制原则，因为可能只控制了一部分业务逻辑，而其他的业务逻辑并没有控制到。&lt;/p>
&lt;p>对于事务脚本来说，很多时候都有 3 个具体的类来构成，他们一般分别是 Sevice,Dao,JavaBean, Service 类主要用于组织业务逻辑，Dao 类主要用于实现数据的存储，JavaBean 主要用于数据的封装。事务脚本贵在简单，对于少量逻辑的应用程序来说，它非常实用。如果业务逻辑复杂时，就会导致事务之间的冗余代码。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">Save&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Dao1&lt;/span> &lt;span class="n">dao1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Dao1&lt;/span>&lt;span class="o">();&lt;/span> &lt;span class="n">dao1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">IsExists&lt;/span>&lt;span class="o">();&lt;/span>&lt;span class="c1">//检查一些东西
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">Dao2&lt;/span> &lt;span class="n">dao1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Dao2&lt;/span>&lt;span class="o">();&lt;/span> &lt;span class="n">dao2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Save&lt;/span>&lt;span class="o">();&lt;/span>&lt;span class="c1">//保存一些数据
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">Submit&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">BeginTran&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Dao1&lt;/span> &lt;span class="n">dao1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Dao1&lt;/span>&lt;span class="o">();&lt;/span> &lt;span class="n">dao1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">IsExists&lt;/span>&lt;span class="o">();&lt;/span>&lt;span class="c1">//检查一些东西
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">Dao2&lt;/span> &lt;span class="n">dao1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Dao2&lt;/span>&lt;span class="o">();&lt;/span> &lt;span class="n">dao2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Save&lt;/span>&lt;span class="o">();&lt;/span>&lt;span class="c1">//保存一些数据
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">Dao3&lt;/span> &lt;span class="n">dao3&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Dao3&lt;/span>&lt;span class="o">();&lt;/span> &lt;span class="n">dao3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">GoToNextFlow&lt;/span>&lt;span class="o">();&lt;/span>&lt;span class="c1">//流程提交
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">Commit&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Rollback&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>事务脚本的优势是简单，容易上手，DAO（数据访问对象）的重用可能性高，强于经典的三层。不过与与使用 O/RM 相比，还是需要写 SQL 语句，虽然可以重用数据访问的代码，因为没有领域模型，所以很多业务规则依然没办法重用。经典的三层一旦遇到事务密集的项目，业务层和数据访问层就会黏在一起了，如果对三层进行改良，把事务管理提上来，放在业务层，然后思维模式稍加改变，就变成了事务脚本。&lt;/p>
&lt;h1 id="典型应用">典型应用&lt;/h1>
&lt;p>这里以银行转账事务脚本实现为例，在事务脚本的实现中，关于在两个账号之间转账的领域业务逻辑都被写在了 MoneyTransferService 的实现里面了，而 Account 仅仅是 getters 和 setters 的数据结构，也就是我们说的贫血模型：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">MoneyTransferServiceTransactionScriptImpl&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">implements&lt;/span> &lt;span class="n">MoneyTransferService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">private&lt;/span> &lt;span class="n">AccountDao&lt;/span> &lt;span class="n">accountDao&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">private&lt;/span> &lt;span class="n">BankingTransactionRepository&lt;/span> &lt;span class="n">bankingTransactionRepository&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nd">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="n">BankingTransaction&lt;/span> &lt;span class="nf">transfer&lt;/span>&lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">String&lt;/span> &lt;span class="n">fromAccountId&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">toAccountId&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Account&lt;/span> &lt;span class="n">fromAccount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">accountDao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findById&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">fromAccountId&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Account&lt;/span> &lt;span class="n">toAccount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">accountDao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findById&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">toAccountId&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// . . .
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">newBalance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fromAccount&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getBalance&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">fromAccount&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getOverdraftPolicy&lt;/span>&lt;span class="o">())&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="n">NEVER&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">newBalance&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DebitException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Insufficient funds&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="n">ALLOWED&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">newBalance&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">limit&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DebitException&lt;/span>&lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Overdraft limit (of &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">limit&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s">&amp;#34;) exceeded: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">newBalance&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fromAccount&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setBalance&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">newBalance&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">toAccount&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setBalance&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">toAccount&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getBalance&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">BankingTransaction&lt;/span> &lt;span class="n">moneyTransferTransaction&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">MoneyTranferTransaction&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">fromAccountId&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">toAccountId&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">bankingTransactionRepository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addTransaction&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">moneyTransferTransaction&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">moneyTransferTransaction&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这完全是面向过程的代码风格。&lt;/p></description></item></channel></rss>