<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architecture-Notes | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/architecture-notes/</link>
      <atom:link href="https://ng-tech.icu/books/architecture-notes/index.xml" rel="self" type="application/rss+xml" />
    <description>Architecture-Notes</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>Architecture-Notes</title>
      <link>https://ng-tech.icu/books/architecture-notes/</link>
    </image>
    
    <item>
      <title>INTRODUCTION</title>
      <link>https://ng-tech.icu/books/architecture-notes/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/architecture-notes/introduction/</guid>
      <description>&lt;h1 id=&#34;introduction导读&#34;&gt;Introduction（导读）&lt;/h1&gt;
&lt;h1 id=&#34;软件架构编年史&#34;&gt;软件架构编年史&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;20 世纪 50 年代
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;非结构化编程&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;~1951 – &lt;strong&gt;汇编&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;20 世纪 60 年代
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;结构化编程&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分层&lt;/strong&gt;: 用户界面、业务逻辑数据存储都在&lt;strong&gt;一层&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;~1958 – Algol&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;20 世纪 70 年代
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;过程式/函数式编程&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;~1970 – Pascal&lt;/li&gt;
&lt;li&gt;~1972 – C&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://heim.ifi.uio.no/~trygver/1979/mvc-2/1979-12-MVC.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1979&lt;/a&gt; – &lt;strong&gt;MVC 模式(Model-View-Controller)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;20 世纪 80 年代
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;面向对象编程&lt;/strong&gt; (但其思想在 &lt;a href=&#34;http://userpage.fu-berlin.de/~ram/pub/pub_jf47ht81Ht/doc_kay_oop_en&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;20 世纪 60 年代&lt;/a&gt;晚期已经第一次提出)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分层&lt;/strong&gt;: &lt;strong&gt;两层&lt;/strong&gt;，第一层是用户界面，第二层是业务逻辑和数据存储&lt;/li&gt;
&lt;li&gt;~1980 – C++&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CORBA&lt;/strong&gt; – 通用物件请求代理架构(尽管&lt;a href=&#34;https://en.wikipedia.org/wiki/Common_Object_Request_Broker_Architecture%23Versions_history&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1991 年&lt;/a&gt;才推出第一个稳定版，但最早使用可以追溯到 &lt;a href=&#34;https://en.wikipedia.org/wiki/TIBCO_Software&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;20 世纪 80 年代&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;~1986 – Erlang&lt;/li&gt;
&lt;li&gt;~1987 – Perl&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lri.fr/~mbl/ENS/FONDIHM/2013/papers/Coutaz-Interact87.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1987&lt;/a&gt; – PAC 即 &lt;strong&gt;HMVC 模式(Hierarchical Model-View-Controller)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/0BwhCYaYDn8EgNzAzZjA5ZmItNjU3NS00MzQ5LTkwYjMtMDJhNDU5ZTM0MTlh/view&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1988&lt;/a&gt; – &lt;strong&gt;LSP(里氏替换原则)&lt;/strong&gt; (~SO&lt;strong&gt;L&lt;/strong&gt;ID)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;20 世纪 90 年代
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分层&lt;/strong&gt;: &lt;strong&gt;三层&lt;/strong&gt;，第一层是用户界面，第二层是业务逻辑(以及浏览器作为客户端时的用户界面展现逻辑)，第三层是数据存储&lt;/li&gt;
&lt;li&gt;~1991 – &lt;strong&gt;消息总线&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;~1991 – Python&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Object-Oriented-Software-Engineering-Driven-Approach/dp/0201403471&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1992&lt;/a&gt; – &lt;strong&gt;EBI 架构&lt;/strong&gt;(Entity-Boundary-Interactor) 即 EBC 或 EIC&lt;/li&gt;
&lt;li&gt;~1993 – Ruby&lt;/li&gt;
&lt;li&gt;~1995 – Delphi, Java, Javascript, PHP&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.wildcrest.com/Potel/Portfolio/mvp.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1996&lt;/a&gt; – &lt;strong&gt;MVP 模式(Model-View-Presenter)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1996&lt;/a&gt; – &lt;strong&gt;OCP&lt;/strong&gt;, &lt;strong&gt;ISP&lt;/strong&gt;, &lt;strong&gt;DIP&lt;/strong&gt; (~S&lt;strong&gt;O&lt;/strong&gt;L&lt;strong&gt;ID&lt;/strong&gt;), REP, CRP, CCP, ADP&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1997&lt;/a&gt; – SDP, SAP&lt;/li&gt;
&lt;li&gt;~&lt;a href=&#34;http://www.cs.ubc.ca/~gregor/papers/kiczales-ECOOP1997-AOP.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1997&lt;/a&gt; – &lt;strong&gt;面向方面编程&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;~1997 – Web 服务&lt;/li&gt;
&lt;li&gt;~&lt;a href=&#34;http://shop.oreilly.com/product/9780596006754.do&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1997&lt;/a&gt; – &lt;strong&gt;ESB&lt;/strong&gt; – 企业服务总线 (尽管创造该术语的书籍 2004 年才出版，但这个概念早已被使用)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;21 世纪 00 年代
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://a.co/7S3sJ2J&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2002&lt;/a&gt; – &lt;strong&gt;SRP&lt;/strong&gt; (~&lt;strong&gt;S&lt;/strong&gt;OLID)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2003&lt;/a&gt; – &lt;strong&gt;领域驱动设计&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/johngossman/2005/10/08/introduction-to-modelviewviewmodel-pattern-for-building-wpf-apps/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2005&lt;/a&gt; – &lt;strong&gt;MVVM 模式(Model-View-ViewModel)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alistair.cockburn.us/Hexagonal%2Barchitecture&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2005&lt;/a&gt; – &lt;strong&gt;端口和适配器架构&lt;/strong&gt;即六边形架构&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/JHGkaShoyNs%3Ft%3D1m17s&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2006&lt;/a&gt;? – &lt;strong&gt;CQRS 与 ES&lt;/strong&gt; (命令查询职责分离与事件溯源)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jeffreypalermo.com/blog/the-onion-architecture-part-1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2008&lt;/a&gt; – &lt;strong&gt;洋葱架构&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/s-c-a-l-e/talking-microservices-with-the-man-who-made-netflix-s-cloud-famous-1032689afed3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2009&lt;/a&gt; – &lt;strong&gt;微服务&lt;/strong&gt;(Netflix)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;21 世纪 10 年代
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.uk/Lean-Architecture-Agile-Software-Development/dp/0470684208&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2010&lt;/a&gt; – &lt;strong&gt;DCI 架构&lt;/strong&gt;(Data-Context-Interaction)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2012&lt;/a&gt; – &lt;strong&gt;整洁架构&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codingthearchitecture.com/2014/08/24/c4_model_poster.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2014&lt;/a&gt; – C4 模型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
