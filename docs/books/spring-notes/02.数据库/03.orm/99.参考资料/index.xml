<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>99.参考资料 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/spring-notes/02.%E6%95%B0%E6%8D%AE%E5%BA%93/03.orm/99.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/</link><atom:link href="https://ng-tech.icu/books/spring-notes/02.%E6%95%B0%E6%8D%AE%E5%BA%93/03.orm/99.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/index.xml" rel="self" type="application/rss+xml"/><description>99.参考资料</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>99.参考资料</title><link>https://ng-tech.icu/books/spring-notes/02.%E6%95%B0%E6%8D%AE%E5%BA%93/03.orm/99.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/</link></image><item><title>2021-Java ORM 概念总结</title><link>https://ng-tech.icu/books/spring-notes/02.%E6%95%B0%E6%8D%AE%E5%BA%93/03.orm/99.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/2021-java-orm-%E6%A6%82%E5%BF%B5%E6%80%BB%E7%BB%93/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/spring-notes/02.%E6%95%B0%E6%8D%AE%E5%BA%93/03.orm/99.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/2021-java-orm-%E6%A6%82%E5%BF%B5%E6%80%BB%E7%BB%93/</guid><description>&lt;h2 id="什么是-orm">什么是 ORM？&lt;/h2>
&lt;p>ORM，即对象关系映射（&lt;strong>O&lt;/strong>bject &lt;strong>R&lt;/strong>elational &lt;strong>M&lt;/strong>apping）模式&lt;/p>
&lt;p>在初学 Java 的时候，都是使用 JDBC 方式连接数据库。之后逐步使用 EclipseLink 、iBATIS（半自动） 和 Hibernate（全自动）等开源 ORM 框架。&lt;/p>
&lt;p>JDBC 的使用流程为：&lt;/p>
&lt;ol>
&lt;li>加载数据库驱动 （JDBC Driver）&lt;/li>
&lt;li>创建数据库链接&lt;/li>
&lt;li>创建编译对象（预编译对象 PrepareStatement）&lt;/li>
&lt;li>设置入参执行 SQL&lt;/li>
&lt;li>返回结果集 (resultSet)&lt;/li>
&lt;/ol>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/item/20230514224404.png" alt="image-20230319134837722" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>JDBC 使用流程&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/item/20230514224423.png" alt="image-20230312192006619" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>使用 JDBC 连接数据库&lt;/p>
&lt;p>&lt;strong>ORM 框架主要可以解决面向对象与关系数据库之间互不匹配的问题，即用于处理面向对象编程语言中不同类型系统间的数据转换&lt;/strong>&lt;/p>
&lt;h3 id="httpswwwbantangerfunpages5f5e77jdbc-的缺点jdbc-的缺点">&lt;a href="https://www.bantanger.fun/pages/5f5e77/#jdbc-%e7%9a%84%e7%bc%ba%e7%82%b9" target="_blank" rel="noopener">#&lt;/a>JDBC 的缺点&lt;/h3>
&lt;ul>
&lt;li>硬编码 &amp;ndash;&amp;gt; 反射，封装，代理&lt;/li>
&lt;li>频繁释放数据库连接资源 &amp;ndash;&amp;gt; 连接池&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://cdn.staticaly.com/gh/BanTanger/image-hosting@master/00.%E6%80%BB%E7%BB%93-assets/202303191408128.png" alt="image-20230319140832760" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;h3 id="httpswwwbantangerfunpages5f5e77为什么会出现-orm-思想为什么会出现-orm-思想">&lt;a href="https://www.bantanger.fun/pages/5f5e77/#%e4%b8%ba%e4%bb%80%e4%b9%88%e4%bc%9a%e5%87%ba%e7%8e%b0-orm-%e6%80%9d%e6%83%b3" target="_blank" rel="noopener">#&lt;/a>为什么会出现 ORM 思想&lt;/h3>
&lt;p>先从项目中数据流存储形式这个角度说起.简单拿 MVC 这种分层模式来说，Model 作为数据承载实体. 在用户界面层和业务逻辑层之间数据实现面向对象 OO 形式传递. 当我们需要通过 Control 层分发请求把数据持久化时我们会发现. 内存中的面向对象的 &lt;strong>OO&lt;/strong> 如何&lt;strong>持久化成&lt;/strong>关系型数据中存储&lt;strong>一条实际数据记录&lt;/strong>呢？&lt;/p>
&lt;p>面向对象是从软件工程基本原则(如耦合、聚合、封装)的基础上发展起来的，而关系数据库则是从数学理论发展而来的。两者之间是不匹配的。而 ORM 作为项目中间件形式实现数据在不同场景下数据关系映射。&lt;strong>对象关系映射（Object Relational Mapping，简称 ORM）是一种为了解决面向对象与关系数据库存在的互不匹配的现象的技术&lt;/strong>，ORM 就是这样而来的.&lt;/p>
&lt;p>ORM 是连接数据库的桥梁，只要提供了持久化类与表的映射关系，ORM 框架在运行是就能&lt;strong>参照映射文件的信息将对象持久化到数据库中&lt;/strong>&lt;/p>
&lt;p>它的作用就是在关系型数据库和业务实体对象之间做&lt;strong>一层映射&lt;/strong>，这样在具体操作业务对象时，就不需要和复杂的 SQL 语句打交道，而只需简单操作对象的属性和方法&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://cdn.staticaly.com/gh/BanTanger/image-hosting@master/00.%E6%80%BB%E7%BB%93-assets/202303121549216.png" alt="在这里插入图片描述" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;h3 id="httpswwwbantangerfunpages5f5e77优缺点优缺点">&lt;a href="https://www.bantanger.fun/pages/5f5e77/#%e4%bc%98%e7%bc%ba%e7%82%b9" target="_blank" rel="noopener">#&lt;/a>优缺点&lt;/h3>
&lt;p>优点：&lt;/p>
&lt;ol>
&lt;li>隐藏数据访问细节，封闭的进行交互。&lt;/li>
&lt;li>构造固化数据结构简单。&lt;/li>
&lt;/ol>
&lt;p>缺点：&lt;/p>
&lt;ol>
&lt;li>自动化意味着映射和关联管理，代价是牺牲性能（现在 ORM 采用各种方法减轻这块，LazyLoad Cache）&lt;/li>
&lt;li>面对复杂查询，ORM 力不从心&lt;/li>
&lt;/ol>
&lt;h3 id="httpswwwbantangerfunpages5f5e77orm-框架和-mybatis-的区别orm-框架和-mybatis-的区别">&lt;a href="https://www.bantanger.fun/pages/5f5e77/#orm-%e6%a1%86%e6%9e%b6%e5%92%8c-mybatis-%e7%9a%84%e5%8c%ba%e5%88%ab" target="_blank" rel="noopener">#&lt;/a>ORM 框架和 MyBatis 的区别&lt;/h3>
&lt;p>ORM 框架：将数据库表一行对应一个类实例。对类的操作会影响到数据库&lt;/p>
&lt;p>MyBatis：将查询语句所得到的 ResultSet 映射成类，在使用数据库时需要写 SQL 语句，对类的修改不会影响到数据库&lt;/p>
&lt;p>参考:&lt;/p>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/486987053" target="_blank" rel="noopener">什么是 ORM，设计架构(opens new window)&lt;/a>&lt;/p>
&lt;h2 id="httpswwwbantangerfunpages5f5e77orm-框架设计orm-框架设计">&lt;a href="https://www.bantanger.fun/pages/5f5e77/#orm-%e6%a1%86%e6%9e%b6%e8%ae%be%e8%ae%a1" target="_blank" rel="noopener">#&lt;/a>ORM 框架设计&lt;/h2>
&lt;p>ORM 框架主要通过&lt;strong>参数映射、SQL 解析和执行，以及结果映射&lt;/strong>的方式对数据库进行操作&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://cdn.staticaly.com/gh/BanTanger/image-hosting@master/00.%E6%80%BB%E7%BB%93-assets/202303121620277.png" alt="image-20230312162050029" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>ORM 框架实现的核心类包括加载配置文件、解析 XML 文件、获取数据库 Session、操作数据库以及返回结果&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://cdn.staticaly.com/gh/BanTanger/image-hosting@master/00.%E6%80%BB%E7%BB%93-assets/202303121651695.png" alt="image-20230312165147079" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>SqlSession 时对数据库进行定义和处理的类，包括常用的方法，如 selectOne、selectList 等&lt;/li>
&lt;li>DefaultSqlSessionFactory 对数据库配置的开启绘画的工厂处理类，这里的工厂会操作 DefaultSqlSession&lt;/li>
&lt;li>SqlSessionFactoryBuilder 是对数据库进行操作的核心类，包括处理工厂、解析解析 和获取会话&lt;/li>
&lt;/ul>
&lt;h2 id="httpswwwbantangerfunpages5f5e77如果让你实现一个-mybatis-应该怎么设计如果让你实现一个-mybatis-应该怎么设计">&lt;a href="https://www.bantanger.fun/pages/5f5e77/#%e5%a6%82%e6%9e%9c%e8%ae%a9%e4%bd%a0%e5%ae%9e%e7%8e%b0%e4%b8%80%e4%b8%aa-mybatis-%e5%ba%94%e8%af%a5%e6%80%8e%e4%b9%88%e8%ae%be%e8%ae%a1" target="_blank" rel="noopener">#&lt;/a>如果让你实现一个 MyBatis ，应该怎么设计？&lt;/h2>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://cdn.staticaly.com/gh/BanTanger/image-hosting@master/00.%E6%80%BB%E7%BB%93-assets/202303211639742.png" alt="手写MyBatis-第 3 页.drawio" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p></description></item></channel></rss>