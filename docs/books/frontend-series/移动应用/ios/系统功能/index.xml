<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>系统功能 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/frontend-series/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8/ios/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD/</link><atom:link href="https://ng-tech.icu/books/frontend-series/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8/ios/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD/index.xml" rel="self" type="application/rss+xml"/><description>系统功能</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>系统功能</title><link>https://ng-tech.icu/books/frontend-series/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8/ios/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD/</link></image><item><title>HealthCheck</title><link>https://ng-tech.icu/books/frontend-series/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8/ios/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD/healthcheck/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/frontend-series/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8/ios/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD/healthcheck/</guid><description>&lt;h1 id="prerequisite预准备">Prerequisite(预准备)&lt;/h1>
&lt;h2 id="enable-healthkit">Enable HealthKit&lt;/h2>
&lt;p>如果希望在应用程序中使用 HealthKit，首先需要在生成证书的时候勾选 HealthKit 选项。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="http://jademind.com/wp-content/uploads/2014/11/healthkit_enable_capability.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;h2 id="check-availability检查-healthkit-可用性">Check availability(检查 HealthKit 可用性)&lt;/h2>
&lt;p>考虑到目前 HealthKit 仅仅可以在 iPhone 设备上使用，不能在 iPad 或者 iPod 中使用，所以在接入 HealthKit 代码之前最好检验下可用性：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSClassFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;HKHealthStore&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">HKHealthStore&lt;/span> &lt;span class="n">isHealthDataAvailable&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Add your HealthKit code here
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="request-authorization请求授权">Request authorization(请求授权)&lt;/h2>
&lt;p>由于 HealthKit 存储了大量的用户敏感信息，App 如果需要访问 HealthKit 中的数据，首先需要请求用户权限。权限分为读取与读写权限(苹果将读写权限称为 share)。请求权限还是比较简单的，可以直接使用&lt;a href="https://developer.apple.com/library/ios/DOCUMENTATION/HealthKit/Reference/HKHealthStore_Class/index.html#//apple_ref/occ/instm/HKHealthStore/requestAuthorizationToShareTypes:readTypes:completion:" target="_blank" rel="noopener">&lt;code>requestAuthorizationToShareTypes: readTypes: completion:&lt;/code>&lt;/a> 方法。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">HKHealthStore&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">healthStore&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">HKHealthStore&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">init&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Share body mass, height and body mass index
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSSet&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">shareObjectTypes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSSet&lt;/span> &lt;span class="nl">setWithObjects&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">HKObjectType&lt;/span> &lt;span class="nl">quantityTypeForIdentifier&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">HKQuantityTypeIdentifierBodyMass&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">HKObjectType&lt;/span> &lt;span class="nl">quantityTypeForIdentifier&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">HKQuantityTypeIdentifierHeight&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">HKObjectType&lt;/span> &lt;span class="nl">quantityTypeForIdentifier&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">HKQuantityTypeIdentifierBodyMassIndex&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Read date of birth, biological sex and step count
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSSet&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">readObjectTypes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSSet&lt;/span> &lt;span class="nl">setWithObjects&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">HKObjectType&lt;/span> &lt;span class="nl">characteristicTypeForIdentifier&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">HKCharacteristicTypeIdentifierDateOfBirth&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">HKObjectType&lt;/span> &lt;span class="nl">characteristicTypeForIdentifier&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">HKCharacteristicTypeIdentifierBiologicalSex&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">HKObjectType&lt;/span> &lt;span class="nl">quantityTypeForIdentifier&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">HKQuantityTypeIdentifierStepCount&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Request access
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">healthStore&lt;/span> &lt;span class="nl">requestAuthorizationToShareTypes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">shareObjectTypes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nl">readTypes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">readObjectTypes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nl">completion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">BOOL&lt;/span> &lt;span class="n">success&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NSError&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">success&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">YES&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Determine if it was an error or if the
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// user just canceld the authorization request
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如上代码会调用下图这样的权限请求界面：&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="http://jademind.com/wp-content/uploads/2014/11/healthkit_request_auth_dialog-575x1024.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>用户在该界面上可以选择接受或者拒绝某些对于读写健康数据的请求。在确定或者关闭请求界面之后，回调会被自动调用。&lt;/p>
&lt;h1 id="读写数据">读写数据&lt;/h1>
&lt;p>从 Health Store 中读写数据的方法比较直接，HKHealthStore 类是提供了很多便捷的方法读取基本的属性。不过如果需要以更多复杂的方式进行查询，可以使用相关的子类：HKQuery。&lt;/p>
&lt;h2 id="生理数据">生理数据&lt;/h2>
&lt;h3 id="性别与年龄">性别与年龄&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSError&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">HKBiologicalSexObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">bioSex&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">healthStore&lt;/span> &lt;span class="nl">biologicalSexWithError&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">switch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">bioSex&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">biologicalSex&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="nl">HKBiologicalSexNotSet&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// undefined
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="nl">HKBiologicalSexFemale&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="nl">HKBiologicalSexMale&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="体重">体重&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Some weight in gram
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">double&lt;/span> &lt;span class="n">weightInGram&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">83400.f&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Create an instance of HKQuantityType and
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// HKQuantity to specify the data type and value
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// you want to update
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSDate&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">now&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSDate&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">HKQuantityType&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">hkQuantityType&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">HKQuantityType&lt;/span> &lt;span class="nl">quantityTypeForIdentifier&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">HKQuantityTypeIdentifierBodyMass&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">HKQuantity&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">hkQuantity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">HKQuantity&lt;/span> &lt;span class="nl">quantityWithUnit&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">HKUnit&lt;/span> &lt;span class="n">gramUnit&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">doubleValue&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">weightInGram&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Create the concrete sample
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">HKQuantitySample&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">weightSample&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">HKQuantitySample&lt;/span> &lt;span class="nl">quantitySampleWithType&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">hkQuantityType&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nl">quantity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">hkQuantity&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nl">startDate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">now&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nl">endDate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Update the weight in the health store
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">healthStore&lt;/span> &lt;span class="nl">saveObject&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">weightSample&lt;/span> &lt;span class="nl">withCompletion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">BOOL&lt;/span> &lt;span class="n">success&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NSError&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ..
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运动数据">运动数据&lt;/h2>
&lt;p>运动数据查询时往往进行的是统计类型的查询，即查询某几个小时或者某几天的运动数据情况，此时最常用的工具类即是 HKStatisticsQuery。要使用该类，首先是调用&lt;code>initWithQuantityType:quantitySamplePredicate:options:completionHandler:&lt;/code>方法进行初始化，然后使用&lt;a href="https://developer.apple.com/library/prerelease/ios/documentation/HealthKit/Reference/HKHealthStore_Class/index.html#//apple_ref/occ/instm/HKHealthStore/executeQuery:" target="_blank" rel="noopener">executeQuery:&lt;/a>方法进行查询。&lt;/p>
&lt;h3 id="步数与卡路里">步数与卡路里&lt;/h3>
&lt;ul>
&lt;li>Objective-C&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">fetchTotalJoulesConsumedWithCompletionHandler:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NSError&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="nv">completionHandler&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSCalendar&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">calendar&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSCalendar&lt;/span> &lt;span class="n">currentCalendar&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSDate&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">now&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSDate&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSDateComponents&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">components&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">calendar&lt;/span> &lt;span class="nl">components&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSCalendarUnitYear&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">NSCalendarUnitMonth&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">NSCalendarUnitDay&lt;/span> &lt;span class="nl">fromDate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSDate&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">startDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">calendar&lt;/span> &lt;span class="nl">dateFromComponents&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">components&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSDate&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">endDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">calendar&lt;/span> &lt;span class="nl">dateByAddingUnit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSCalendarUnitDay&lt;/span> &lt;span class="nl">value&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="nl">toDate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">startDate&lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">HKQuantityType&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">sampleType&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">HKQuantityType&lt;/span> &lt;span class="nl">quantityTypeForIdentifier&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">HKQuantityTypeIdentifierDietaryEnergyConsumed&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSPredicate&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">predicate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">HKQuery&lt;/span> &lt;span class="nl">predicateForSamplesWithStartDate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">startDate&lt;/span> &lt;span class="nl">endDate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">endDate&lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">HKQueryOptionStrictStartDate&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">HKStatisticsQuery&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">HKStatisticsQuery&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithQuantityType&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">sampleType&lt;/span> &lt;span class="nl">quantitySamplePredicate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">predicate&lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">HKStatisticsOptionCumulativeSum&lt;/span> &lt;span class="nl">completionHandler&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">HKStatisticsQuery&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">query&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">HKStatistics&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NSError&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">completionHandler&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">completionHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">double&lt;/span> &lt;span class="n">totalCalories&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sumQuantity&lt;/span> &lt;span class="nl">doubleValueForUnit&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">HKUnit&lt;/span> &lt;span class="n">jouleUnit&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">completionHandler&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">completionHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">totalCalories&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">healthStore&lt;/span> &lt;span class="nl">executeQuery&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">query&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Swift&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">fetchTotalJoulesConsumedWithCompletionHandler&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">completionHandler&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="nb">Double&lt;/span>&lt;span class="p">?,&lt;/span> &lt;span class="n">NSError&lt;/span>&lt;span class="p">?)-&amp;gt;())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">calendar&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">NSCalendar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">currentCalendar&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">now&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">NSDate&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">components&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">calendar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">components&lt;/span>&lt;span class="p">(.&lt;/span>&lt;span class="n">YearCalendarUnit&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">MonthCalendarUnit&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">DayCalendarUnit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fromDate&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">now&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">startDate&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">calendar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">dateFromComponents&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">components&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">endDate&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">calendar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">dateByAddingUnit&lt;/span>&lt;span class="p">(.&lt;/span>&lt;span class="n">DayCalendarUnit&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">toDate&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">startDate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">NSCalendarOptions&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">nil&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">sampleType&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">HKQuantityType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">quantityTypeForIdentifier&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">HKQuantityTypeIdentifierDietaryEnergyConsumed&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">predicate&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">HKQuery&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">predicateForSamplesWithStartDate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">startDate&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">endDate&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">endDate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">StrictStartDate&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">query&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">HKStatisticsQuery&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">quantityType&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">sampleType&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">quantitySamplePredicate&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">predicate&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">CumulativeSum&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">query&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">error&lt;/span> &lt;span class="k">in&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">completionHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nv">totalCalories&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mf">0.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="kd">let&lt;/span> &lt;span class="nv">quantity&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sumQuantity&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">unit&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">HKUnit&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">jouleUnit&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">totalCalories&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">quantity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">doubleValueForUnit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unit&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">completionHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">totalCalories&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">healthStore&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">executeQuery&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">query&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意，在根据时间来获取 HealthKit 的记录值时，往往存在着一个时区的问题。即 HealthKit 默认的是用的 UTC 时间来进行计数的，虽然它显示的是本地时间。而我们一般对时区进行本地化时，只是将 NSDate 的数值变化了，并不一定会修正它所在的时区，笔者用的方法所在时区还是 UTC。所以，可能需要先求出起始时间的 TimeInterval，然后统一用 UTC 时间计算：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl"> &lt;span class="n">startDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSDate&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithTimeIntervalSinceNow&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">-&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">endDate&lt;/span> &lt;span class="nl">timeIntervalSinceDate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">startDate&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">endDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSDate&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">init&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="carekithttpsgithubcomcarekit-applecarekit">&lt;a href="https://github.com/carekit-apple/CareKit" target="_blank" rel="noopener">CareKit&lt;/a>&lt;/h1>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://github.com/carekit-apple/CareKit/wiki/AddedBinaries.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p></description></item><item><title>数据存储</title><link>https://ng-tech.icu/books/frontend-series/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8/ios/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/frontend-series/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8/ios/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/</guid><description>&lt;h1 id="file文件型">File(文件型)&lt;/h1>
&lt;h2 id="filebrowser">FileBrowser&lt;/h2>
&lt;h3 id="swift-filebrowserhttpsgithubcommarmelroyfilebrowser">&lt;a href="https://github.com/marmelroy/FileBrowser" target="_blank" rel="noopener">Swift-FileBrowser&lt;/a>&lt;/h3>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://camo.githubusercontent.com/5ea19d119a5426eeca3edbe750c280617f804aa0/687474703a2f2f692e67697068792e636f6d2f336f3667615936794c516b686a696f6b35572e676966" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;h1 id="cache缓存型">Cache(缓存型)&lt;/h1>
&lt;h2 id="nsuserdefault">NSUserDefault&lt;/h2>
&lt;p>类似于 Android 中的 SharedPreference 以及 Web 的 LocalStorage，iOS 中也提供了便捷的可持久化的存储方案：NSUserDefault。NSUserDefault 更多的表现像个属性列表，可以看做 plist 文件的封装好的接口。NSUserDefaults 中主要可以存放以下六类接口：&lt;/p>
&lt;ul>
&lt;li>NSData&lt;/li>
&lt;li>NSString&lt;/li>
&lt;li>NSNumber&lt;/li>
&lt;li>NSDate&lt;/li>
&lt;li>NSArray&lt;/li>
&lt;li>NSDictionary&lt;/li>
&lt;/ul>
&lt;h3 id="writedata写入数据">WriteData(写入数据)&lt;/h3>
&lt;p>创建一个 user defaults 方法有多个，最简单得快速创建方法:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSUserDefaults&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">accountDefaults&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSUserDefaults&lt;/span> &lt;span class="n">standardUserDefaults&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//添加数据到 user defaults:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">accountDefaults&lt;/span> &lt;span class="nl">setObject&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">nameField&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="nl">forKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">UserDefaultNameKey&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以添加基本数据类型 int, float, bool 等，有相应得方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">accountDefaults&lt;/span> &lt;span class="nl">setBool&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">YES&lt;/span> &lt;span class="nl">forKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">UserDefaultBoolKey&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果是 Swift，用法如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nv">defaults&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">NSUserDefaults&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">standardUserDefaults&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">defaults&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setObject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Coding Explorer&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">forKey&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;userNameKey&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="readdata读取数据">ReadData(读取数据)&lt;/h3>
&lt;p>从 UserDefault 中读取数据，方式就像从一个全局的 Dictionary 中读取数据：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">accountDefaults&lt;/span> &lt;span class="nl">objectForKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NCUserDefaultNameKey&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">accountDefaults&lt;/span> &lt;span class="nl">boolForKey&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">UserDefaultBoolKey&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果是 Swift，读取方式如下所示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nv">defaults&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">NSUserDefaults&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">standardUserDefaults&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="kd">let&lt;/span> &lt;span class="nv">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">defaults&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">stringForKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;userNameKey&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="coredata">CoreData&lt;/h1>
&lt;h1 id="sqlite">SQLite&lt;/h1>
&lt;h2 id="fmdbhttpsgithubcomccgusfmdb">&lt;a href="https://github.com/ccgus/fmdb" target="_blank" rel="noopener">FMDB&lt;/a>&lt;/h2>
&lt;h2 id="sqliteswifthttpsgithubcomstephencelissqliteswift">&lt;a href="https://github.com/stephencelis/SQLite.swift" target="_blank" rel="noopener">SQLite.swift&lt;/a>&lt;/h2>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://github.com/stephencelis/SQLite.swift/raw/master/Documentation/Resources/playground@2x.png" alt="SQLite.playground Screen Shot" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;h1 id="realm">Realm&lt;/h1>
&lt;h3 id="primary-keys">Primary Keys&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">@interface&lt;/span> &lt;span class="nc">Dog&lt;/span> : &lt;span class="nc">RLMObject&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@property&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@property&lt;/span> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@property&lt;/span> &lt;span class="n">NSInteger&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@implementation&lt;/span> &lt;span class="nc">Dog&lt;/span> : &lt;span class="nc">RLMObject&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">primaryKey&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s">@&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">RLM_ARRAY_TYPE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Dog&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@interface&lt;/span> &lt;span class="nc">Owner&lt;/span> : &lt;span class="nc">RLMObject&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@property&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@property&lt;/span> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@property&lt;/span> &lt;span class="n">RLMArray&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Dog&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">dogs&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@implementation&lt;/span> &lt;span class="nc">Owner&lt;/span> : &lt;span class="nc">RLMObject&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">primaryKey&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s">@&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在插入数据时，如果发现主键中数据存在重复的则会抛出异常：&lt;/p>
&lt;pre tabindex="0">&lt;code>Owner *owner = [Owner createOrUpdateInDefaultRealmWithObject:@{
@&amp;#34;key&amp;#34;: @0,
@&amp;#34;name&amp;#34;: @&amp;#34;Tim&amp;#34;,
@&amp;#34;dogs&amp;#34;: @[
@{@&amp;#34;key&amp;#34;: @5, @&amp;#34;name&amp;#34;: @&amp;#34;Rex&amp;#34;, @&amp;#34;age&amp;#34;: @3}
]
}];
NSLog(@&amp;#34;Number of owners: %u&amp;#34;, (unsigned)[Owner allObjects].count);
NSLog(@&amp;#34;Number of dogs: %u&amp;#34;, (unsigned)owner.dogs.count);
for (Dog *dog in owner.dogs) {
NSLog(@&amp;#34;Dog %@&amp;#34;, dog);
}
&lt;/code>&lt;/pre></description></item><item><title>网络请求</title><link>https://ng-tech.icu/books/frontend-series/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8/ios/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/frontend-series/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8/ios/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</guid><description>&lt;h1 id="networkmanagement">NetworkManagement&lt;/h1>
&lt;h2 id="reachability可达性判断">Reachability(可达性判断)&lt;/h2>
&lt;h3 id="realreachabilityhttpsgithubcomdustturtlerealreachability">&lt;a href="https://github.com/dustturtle/RealReachability" target="_blank" rel="noopener">RealReachability&lt;/a>&lt;/h3>
&lt;p>To integrate RealReachability into your Xcode project using CocoaPods, specify it in your &lt;code>Podfile&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>source &amp;#39;https://github.com/CocoaPods/Specs.git&amp;#39;
platform :ios, &amp;#39;6.0&amp;#39;
pod &amp;#39;RealReachability&amp;#39;, &amp;#39;~&amp;gt; 1.1.1&amp;#39;
&lt;/code>&lt;/pre>&lt;p>Then, run the following command:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ pod install
&lt;/code>&lt;/pre>&lt;h4 id="start-to-notify">Start to notify&lt;/h4>
&lt;pre tabindex="0">&lt;code> [GLobalRealReachability startNotifier];
[[NSNotificationCenter defaultCenter] addObserver:self
selector:@selector(networkChanged:)
name:kRealReachabilityChangedNotification
object:nil];
&lt;/code>&lt;/pre>&lt;h4 id="httpsgithubcomdustturtlerealreachabilityobserver-like-belowobserver-like-below">&lt;a href="https://github.com/dustturtle/RealReachability#observer-like-below" target="_blank" rel="noopener">&lt;/a>Observer like below&lt;/h4>
&lt;pre tabindex="0">&lt;code>- (void)networkChanged:(NSNotification *)notification
{
RealReachability *reachability = (RealReachability *)notification.object;
ReachabilityStatus status = [reachability currentReachabilityStatus];
NSLog(@&amp;#34;currentStatus:%@&amp;#34;,@(status));
}
&lt;/code>&lt;/pre>&lt;h4 id="httpsgithubcomdustturtlerealreachabilitytrigger-realtime-reachability-like-belowtrigger-realtime-reachability-like-below">&lt;a href="https://github.com/dustturtle/RealReachability#trigger-realtime-reachability-like-below" target="_blank" rel="noopener">&lt;/a>Trigger realtime Reachability like below&lt;/h4>
&lt;pre tabindex="0">&lt;code>[GLobalRealReachability reachabilityWithBlock:^(ReachabilityStatus status) {
switch (status)
{
case RealStatusNotReachable:
{
// case NotReachable handler
break;
}
case RealStatusViaWiFi:
{
// case WiFi handler
break;
}
case RealStatusViaWWAN:
{
// case WWAN handler
break;
}
default:
break;
}
}];
&lt;/code>&lt;/pre>&lt;h4 id="httpsgithubcomdustturtlerealreachabilityquery-currentstatusquery-currentstatus">&lt;a href="https://github.com/dustturtle/RealReachability#query-currentstatus" target="_blank" rel="noopener">&lt;/a>Query currentStatus&lt;/h4>
&lt;pre tabindex="0">&lt;code>ReachabilityStatus status = [reachability currentReachabilityStatus];
&lt;/code>&lt;/pre>&lt;h1 id="http-client">HTTP Client&lt;/h1>
&lt;h2 id="alamofire">Alamofire&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Alamofire/Alamofire" target="_blank" rel="noopener">Alamofire Github 主页&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="http-stubs">HTTP Stubs&lt;/h1>
&lt;h2 id="ohhttpstubshttpsgithubcomalisoftwareohhttpstubs">&lt;a href="https://github.com/AliSoftware/OHHTTPStubs/" target="_blank" rel="noopener">OHHTTPStubs&lt;/a>&lt;/h2>
&lt;h3 id="basic-example">Basic example&lt;/h3>
&lt;h4 id="httpsgithubcomalisoftwareohhttpstubsin-objective-cin-objective-c">&lt;a href="https://github.com/AliSoftware/OHHTTPStubs/#in-objective-c" target="_blank" rel="noopener">&lt;/a>In Objective-C&lt;/h4>
&lt;pre tabindex="0">&lt;code>[OHHTTPStubs stubRequestsPassingTest:^BOOL(NSURLRequest *request) {
return [request.URL.host isEqualToString:@&amp;#34;mywebservice.com&amp;#34;];
} withStubResponse:^OHHTTPStubsResponse*(NSURLRequest *request) {
// Stub it with our &amp;#34;wsresponse.json&amp;#34; stub file (which is in same bundle as self)
NSString* fixture = OHPathForFile(@&amp;#34;wsresponse.json&amp;#34;, self.class);
return [OHHTTPStubsResponse responseWithFileAtPath:fixture
statusCode:200 headers:@{@&amp;#34;Content-Type&amp;#34;:@&amp;#34;application/json&amp;#34;}];
}];
&lt;/code>&lt;/pre>&lt;h4 id="httpsgithubcomalisoftwareohhttpstubsin-swiftin-swift">&lt;a href="https://github.com/AliSoftware/OHHTTPStubs/#in-swift" target="_blank" rel="noopener">&lt;/a>In Swift&lt;/h4>
&lt;p>This example is using the Swift helpers found in &lt;code>OHHTTPStubsSwift.swift&lt;/code> provided by the &lt;code>OHHTTPStubs/Swift&lt;/code> subspec&lt;/p>
&lt;pre tabindex="0">&lt;code>stub(isHost(&amp;#34;mywebservice.com&amp;#34;)) { _ in
// Stub it with our &amp;#34;wsresponse.json&amp;#34; stub file (which is in same bundle as self)
let stubPath = OHPathForFile(&amp;#34;wsresponse.json&amp;#34;, self.dynamicType)
return fixture(stubPath!, headers: [&amp;#34;Content-Type&amp;#34;:&amp;#34;application/json&amp;#34;])
}
&lt;/code>&lt;/pre></description></item><item><title>系统进程</title><link>https://ng-tech.icu/books/frontend-series/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8/ios/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/frontend-series/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8/ios/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E7%A8%8B/</guid><description>&lt;h1 id="aop切面编程">AOP(切面编程)&lt;/h1>
&lt;h2 id="aspectshttpsgithubcomsteipeteaspects">&lt;a href="https://github.com/steipete/Aspects" target="_blank" rel="noopener">Aspects&lt;/a>&lt;/h2>
&lt;h1 id="multiplethread">MultipleThread&lt;/h1>
&lt;h2 id="thread">Thread&lt;/h2>
&lt;h3 id="pthreads">Pthreads&lt;/h3>
&lt;p>POSIX 线程(POSIX threads)，简称 Pthreads，是线程的 POSIX 标准。该标准定义了创建和操纵线程的一整套 API。在类 Unix 操作系统(Unix、Linux、Mac OS X 等)中，都使用 Pthreads 作为操作系统的线程。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">touchesBegan:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSSet&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">touches&lt;/span> &lt;span class="nf">withEvent:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIEvent&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">event&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pthread_t&lt;/span> &lt;span class="kr">thread&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//创建一个线程并自动执行
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">pthread_create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="kr">thread&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nf">start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="nsthread">NSThread&lt;/h3>
&lt;p>这套方案是经过苹果封装后的，并且完全面向对象的。所以你可以直接操控线程对象，非常直观和方便。但是，它的生命周期还是需要我们手动管理，所以这套方案也是偶尔用用，比如 [NSThread currentThread]，它可以获取当前线程类，你就可以知道当前线程的各种属性，用于调试十分方便。下面来看看它的一些用法。&lt;/p>
&lt;ul>
&lt;li>先创建线程类，再启动&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>OBJECTIVE-C&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="err">`&lt;/span> &lt;span class="err">``&lt;/span>&lt;span class="c1">// 创建`` ``NSThread *thread = [[NSThread alloc] initWithTarget:self selector:@selector(run:) object:nil];`` ``// 启动`` ``[thread start];`
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>SWIFT&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="p">`&lt;/span> &lt;span class="p">``&lt;/span>&lt;span class="c1">//创建`` ``let thread = NSThread(target: self, selector: ``&amp;#34;run:&amp;#34;``, object: nil)`` ``//启动`` ``thread.start()`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>创建并自动启动&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>OBJECTIVE-C&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="err">`&lt;/span> &lt;span class="err">``&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="nl">detachNewThreadSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="k">@selector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nl">run&lt;/span>&lt;span class="p">:)&lt;/span> &lt;span class="nl">toTarget&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="nl">withObject&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>SWIFT&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="p">`&lt;/span> &lt;span class="p">``&lt;/span>&lt;span class="n">NSThread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">detachNewThreadSelector&lt;/span>&lt;span class="p">(``&lt;/span>&lt;span class="s">&amp;#34;run:&amp;#34;&lt;/span>&lt;span class="p">``,&lt;/span> &lt;span class="n">toTarget&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">withObject&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">)`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="常见方法">常见方法&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//取消线程
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">cancel&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//启动线程
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">start&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//判断某个线程的状态的属性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">@property&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">readonly&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">getter&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">isExecuting&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">BOOL&lt;/span> &lt;span class="n">executing&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@property&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">readonly&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">getter&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">isFinished&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">BOOL&lt;/span> &lt;span class="n">finished&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@property&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">readonly&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">getter&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">isCancelled&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">BOOL&lt;/span> &lt;span class="n">cancelled&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//设置和获取线程名字
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">setName:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//获取当前线程信息
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">currentThread&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//获取主线程信息
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">mainThread&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//使当前线程暂停一段时间，或者暂停到某个时刻
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">sleepForTimeInterval:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSTimeInterval&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">time&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">sleepUntilDate:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSDate&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">date&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="线程同步">线程同步&lt;/h4>
&lt;h4 id="线程跳转">线程跳转&lt;/h4>
&lt;p>我们都知道在其他线程操作完成后必须到主线程更新 UI。所以，我们来看看有哪些方法可以回到主线程。&lt;/p>
&lt;h2 id="asynchronous">Asynchronous&lt;/h2>
&lt;h3 id="promisekit">PromiseKit&lt;/h3>
&lt;h1 id="concurrence">Concurrence&lt;/h1>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MjAwODM4MA==&amp;amp;mid=402877688&amp;amp;idx=1&amp;amp;sn=1e499ddb3ce9505e2515e279aea58aa0&amp;amp;scene=23&amp;amp;srcid=0312Qns1x9BTAzFPXGimoqx2#rd" target="_blank" rel="noopener">iOS 开发中设计并发任务技术与注意事项 &lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="gcd">GCD&lt;/h2>
&lt;p>Grand Central Dispatch，听名字就霸气。它是苹果为多核的并行运算提出的解决方案，所以会自动合理地利用更多的 CPU 内核(比如双核、四核)，最重要的是它会自动管理线程的生命周期(创建线程、调度任务、销毁线程)，完全不需要我们管理。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="http://cc.cocimg.com/api/uploads/20150729/1438138129828276.png" alt="blob.png" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;h3 id="队列获取与创建">队列获取与创建&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>主队列：特殊的串行队列&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>这是一个特殊的 串行队列。什么是主队列，大家都知道吧，它用于刷新 UI，任何需要刷新 UI 的工作都要在主队列执行，所以一般耗时的任务都要放到别的线程执行。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//OBJECTIVE-C&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dispatch_queue_t&lt;/span> &lt;span class="n">queue&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">dispatch_get_main_queue&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//SWIFT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">queue&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">dispatch_get_main_queue&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>全局并行队列&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>这应该是唯一一个并行队列，只要是并行任务一般都加入到这个队列。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//OBJECTIVE-C&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dispatch_queue_t&lt;/span> &lt;span class="n">queue&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">dispatch_get_global_queue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//SWIFT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">queue&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">dispatch_get_global_queue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>自建队列&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>自己可以创建 串行队列, 也可以创建 并行队列。看下面的代码(代码已更新)，它有两个参数，第一个上面已经说了，第二个才是最重要的。第二个参数用来表示创建的队列是串行的还是并行的，传入 DISPATCH_QUEUE_SERIAL 或 NULL 表示创建串行队列。传入 DISPATCH_QUEUE_CONCURRENT 表示创建并行队列。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//OBJECTIVE-C&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dispatch_queue_t&lt;/span> &lt;span class="n">queue&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">dispatch_queue_create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tk.bourne.testQueue&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//SWIFT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">queue&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">dispatch_queue_create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tk.bourne.testQueue&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="任务">任务&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>同步任务&lt;/strong>：不会新开线程&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//OJC&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dispatch_sync&lt;/span>&lt;span class="p">(,&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//code here&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(@&lt;/span>&lt;span class="s">&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//Swift&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dispatch_sync&lt;/span>&lt;span class="p">(,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="nb">Void&lt;/span> &lt;span class="k">in&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//code here&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSThread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">currentThread&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>异步任务：会新开线程&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//OJC&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dispatch_sync&lt;/span>&lt;span class="p">(,&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//code here&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(@&lt;/span>&lt;span class="s">&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//Swift&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dispatch_sync&lt;/span>&lt;span class="p">(,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="nb">Void&lt;/span> &lt;span class="k">in&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//code here&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSThread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">currentThread&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="asynchttpsgithubcomduemunkasyncgcd-的语法糖">&lt;a href="https://github.com/duemunk/Async" target="_blank" rel="noopener">Async&lt;/a>:GCD 的语法糖&lt;/h3>
&lt;p>Cocoa 官方提供的这一套 Callback 方式的 GCD 的写法还是有些恶心，有人对其进行了一些封装，使得 GCD 的使用更加的方便，可以参考&lt;a href="https://github.com/duemunk/Async/tree/feature/Swift_2.1" target="_blank" rel="noopener">Async&lt;/a>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Async&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">background&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;This is run on the background queue&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}.&lt;/span>&lt;span class="n">main&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;This is run on the main queue, after the previous block&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 CocoaPods 中使用:&lt;/p>
&lt;pre tabindex="0">&lt;code>use_frameworks!
pod &amp;#34;AsyncSwift&amp;#34;
&lt;/code>&lt;/pre>&lt;p>即可以引入
(1)Supports the modern queue classes:&lt;/p>
&lt;pre tabindex="0">&lt;code>Async.main {}
Async.userInteractive {}
Async.userInitiated {}
Async.utility {}
Async.background {}
&lt;/code>&lt;/pre>&lt;p>(2)Chain as many blocks as you want:&lt;/p>
&lt;pre tabindex="0">&lt;code>Async.userInitiated {
// 1
}.main {
// 2
}.background {
// 3
}.main {
// 4
}
&lt;/code>&lt;/pre>&lt;p>(3)Store reference for later chaining:&lt;/p>
&lt;pre tabindex="0">&lt;code>let backgroundBlock = Async.background {
print(&amp;#34;This is run on the background queue&amp;#34;)
}
// Run other code here...
// Chain to reference
backgroundBlock.main {
print(&amp;#34;This is run on the \(qos_class_self().description) (expected \(qos_class_main().description)), after the previous block&amp;#34;)
}
&lt;/code>&lt;/pre>&lt;p>(4)Custom queues:&lt;/p>
&lt;pre tabindex="0">&lt;code>let customQueue = dispatch_queue_create(&amp;#34;CustomQueueLabel&amp;#34;, DISPATCH_QUEUE_CONCURRENT)
let otherCustomQueue = dispatch_queue_create(&amp;#34;OtherCustomQueueLabel&amp;#34;, DISPATCH_QUEUE_CONCURRENT)
Async.customQueue(customQueue) {
print(&amp;#34;Custom queue&amp;#34;)
}.customQueue(otherCustomQueue) {
print(&amp;#34;Other custom queue&amp;#34;)
}
&lt;/code>&lt;/pre>&lt;p>(5)Dispatch block after delay:&lt;/p>
&lt;pre tabindex="0">&lt;code>let seconds = 0.5
Async.main(after: seconds) {
print(&amp;#34;Is called after 0.5 seconds&amp;#34;)
}.background(after: 0.4) {
print(&amp;#34;At least 0.4 seconds after previous block, and 0.9 after Async code is called&amp;#34;)
}
&lt;/code>&lt;/pre>&lt;p>(6)Cancel blocks that aren&amp;rsquo;t already dispatched:&lt;/p>
&lt;pre tabindex="0">&lt;code>// Cancel blocks not yet dispatched
let block1 = Async.background {
// Heavy work
for i in 0...1000 {
print(&amp;#34;A \(i)&amp;#34;)
}
}
let block2 = block1.background {
print(&amp;#34;B – shouldn&amp;#39;t be reached, since cancelled&amp;#34;)
}
Async.main {
// Cancel async to allow block1 to begin
block1.cancel() // First block is _not_ cancelled
block2.cancel() // Second block _is_ cancelled
}
&lt;/code>&lt;/pre>&lt;p>(7)Wait for block to finish – an ease way to continue on current queue after background task:&lt;/p>
&lt;pre tabindex="0">&lt;code>let block = Async.background {
// Do stuff
}
// Do other stuff
block.wait()
&lt;/code>&lt;/pre>&lt;h4 id="asyncgroup">AsyncGroup&lt;/h4>
&lt;pre tabindex="0">&lt;code>Multiple dispatch blocks with GCD:
let group = AsyncGroup()
group.background {
// Run on background queue
}
group.utility {
// Run on utility queue, in parallel to the previous block
}
group.wait()
All modern queue classes:
group.main {}
group.userInteractive {}
group.userInitiated {}
group.utility {}
group.background {}
Custom queues:
let customQueue = dispatch_queue_create(&amp;#34;Label&amp;#34;, DISPATCH_QUEUE_CONCURRENT)
group.customQueue(customQueue) {}
Wait for group to finish:
let group = AsyncGroup()
group.background {
// Do stuff
}
group.background {
// Do other stuff in parallel
}
// Wait for both to finish
group.wait()
// Do rest of stuff
Custom asynchronous operations:
let group = AsyncGroup()
group.enter()
dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0)) {
// Do stuff
group.leave()
}
group.enter()
dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0)) {
// Do other stuff in parallel
group.leave()
}
// Wait for both to finish
group.wait()
// Do rest of stuff
&lt;/code>&lt;/pre>&lt;h3 id="队列组">队列组&lt;/h3>
&lt;p>队列组可以将很多队列添加到一个组里，这样做的好处是，当这个组里所有的任务都执行完了，队列组会通过一个方法通知我们。下面是使用方法，这是一个很实用的功能。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//1.创建队列组
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">dispatch_group_t&lt;/span> &lt;span class="n">group&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dispatch_group_create&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//2.创建队列
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">dispatch_queue_t&lt;/span> &lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dispatch_get_global_queue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//3.多次使用队列组的方法执行任务, 只有异步方法
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//3.1.执行3次循环
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">dispatch_group_async&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">group&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSInteger&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;group-01 - %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//3.2.主队列执行8次循环
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">dispatch_group_async&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">group&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dispatch_get_main_queue&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSInteger&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;group-02 - %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//3.3.执行5次循环
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">dispatch_group_async&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">group&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSInteger&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;group-03 - %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//4.都完成后会自动通知
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">dispatch_group_notify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">group&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dispatch_get_main_queue&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;完成 - %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nsoperation">NSOperation&lt;/h2>
&lt;p>GCD 是基于 c 的底层 api，NSOperation 属于 object-c 类。ios 首先引入的是 NSOperation，IOS4 之后引入了 GCD 和 NSOperationQueue 并且其内部是用 gcd 实现的。相对于 GCD：&lt;/p>
&lt;p>1，NSOperation 拥有更多的函数可用，具体查看 api。&lt;/p>
&lt;p>2，在 NSOperationQueue 中，可以建立各个 NSOperation 之间的依赖关系。&lt;/p>
&lt;p>3，有 kvo，可以监测 operation 是否正在执行(isExecuted)、是否结束(isFinished)，是否取消(isCanceld)。&lt;/p>
&lt;p>4，NSOperationQueue 可以方便的管理并发、NSOperation 之间的优先级。&lt;/p>
&lt;p>NSOperation 只是一个抽象类，所以不能封装任务。但它有 2 个子类用于封装任务。分别是：NSInvocationOperation 和 NSBlockOperation。创建一个 Operation 后，需要调用 start 方法来启动任务，它会 默认在当前队列同步执行。当然你也可以在中途取消一个任务，只需要调用其 cancel 方法即可。不过因为 NSInvocationOperation 不是类型安全的，其在 Swift 中已经被弃用。&lt;/p>
&lt;h4 id="创建任务">创建任务&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//1.创建NSBlockOperation对象
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">NSBlockOperation&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">operation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSBlockOperation&lt;/span> &lt;span class="nl">blockOperationWithBlock&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//2.开始任务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">operation&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之前说过这样的任务，默认会在当前线程执行。但是 NSBlockOperation 还有一个方法：addExecutionBlock:，通过这个方法可以给 Operation 添加多个执行 Block。这样 Operation 中的任务 会并发执行，它会 在主线程和其它的多个线程 执行这些任务，注意下面的打印结果：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//1.创建NSBlockOperation对象
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">NSBlockOperation&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">operation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSBlockOperation&lt;/span> &lt;span class="nl">blockOperationWithBlock&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//添加多个Block
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSInteger&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">operation&lt;/span> &lt;span class="nl">addExecutionBlock&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;第%ld次：%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//2.开始任务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">operation&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打印结果：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2015&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">28&lt;/span> &lt;span class="mi">17&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">16.585&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">17527&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">4095467&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">第&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="err">次&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2015&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">28&lt;/span> &lt;span class="mi">17&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">16.585&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">17527&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">4095666&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">第&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="err">次&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">``&lt;/span>&lt;span class="n">null&lt;/span>&lt;span class="err">``&lt;/span>&lt;span class="p">)}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2015&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">28&lt;/span> &lt;span class="mi">17&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">16.585&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">17527&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">4095665&lt;/span>&lt;span class="p">]{&lt;/span>&lt;span class="n">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">``&lt;/span>&lt;span class="n">null&lt;/span>&lt;span class="err">``&lt;/span>&lt;span class="p">)}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2015&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">28&lt;/span> &lt;span class="mi">17&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">16.585&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">17527&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">4095662&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">第&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="err">次&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">``&lt;/span>&lt;span class="n">null&lt;/span>&lt;span class="err">``&lt;/span>&lt;span class="p">)}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2015&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">28&lt;/span> &lt;span class="mi">17&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">16.586&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">17527&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">4095666&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">第&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="err">次&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">``&lt;/span>&lt;span class="n">null&lt;/span>&lt;span class="err">``&lt;/span>&lt;span class="p">)}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2015&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">28&lt;/span> &lt;span class="mi">17&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">16.586&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">17527&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">4095467&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">第&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="err">次&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="创建队列">创建队列&lt;/h4>
&lt;p>看过上面的内容就知道，我们可以调用一个 NSOperation 对象的 start() 方法来启动这个任务，但是这样做他们默认是 同步执行 的。就算是 addExecutionBlock 方法，也会在 当前线程和其他线程 中执行，也就是说还是会占用当前线程。这是就要用到队列 NSOperationQueue 了。而且，按类型来说的话一共有两种类型：主队列、其他队列。只要添加到队列，会自动调用任务的 start() 方法。&lt;/p>
&lt;ul>
&lt;li>主线程&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//OBJECTIVE-C
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSOperationQueue&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSOperationQueue&lt;/span> &lt;span class="n">mainQueue&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//SWIFT
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">let&lt;/span> &lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NSOperationQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">mainQueue&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>其他队列&lt;/li>
&lt;/ul>
&lt;p>因为主队列比较特殊，所以会单独有一个类方法来获得主队列。那么通过初始化产生的队列就是其他队列了，因为只有这两种队列，除了主队列，其他队列就不需要名字了。注意：其他队列的任务会在其他线程并行执行。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//1.创建一个其他队列
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSOperationQueue&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSOperationQueue&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">init&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//2.创建NSBlockOperation对象
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSBlockOperation&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">operation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSBlockOperation&lt;/span> &lt;span class="nl">blockOperationWithBlock&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//3.添加多个Block
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSInteger&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">operation&lt;/span> &lt;span class="nl">addExecutionBlock&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;第%ld次：%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//4.队列添加任务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">queue&lt;/span> &lt;span class="nl">addOperation&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">operation&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="任务依赖">任务依赖&lt;/h4>
&lt;p>NSOperation 有一个非常实用的功能，那就是添加依赖。比如有 3 个任务：A: 从服务器上下载一张图片，B：给这张图片加个水印，C：把图片返回给服务器。这时就可以用到依赖了:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objective-c" data-lang="objective-c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//1.任务一：下载图片
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSBlockOperation&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">operation1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSBlockOperation&lt;/span> &lt;span class="nl">blockOperationWithBlock&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;下载图片 - %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="nl">sleepForTimeInterval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">1.0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//2.任务二：打水印
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSBlockOperation&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">operation2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSBlockOperation&lt;/span> &lt;span class="nl">blockOperationWithBlock&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;打水印 - %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="nl">sleepForTimeInterval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">1.0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//3.任务三：上传图片
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSBlockOperation&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">operation3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSBlockOperation&lt;/span> &lt;span class="nl">blockOperationWithBlock&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;上传图片 - %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="n">currentThread&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">NSThread&lt;/span> &lt;span class="nl">sleepForTimeInterval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">1.0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//4.设置依赖
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">operation2&lt;/span> &lt;span class="nl">addDependency&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">operation1&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="c1">//任务二依赖任务一
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">operation3&lt;/span> &lt;span class="nl">addDependency&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">operation2&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="c1">//任务三依赖任务二
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//5.创建队列并加入任务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSOperationQueue&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSOperationQueue&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">init&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">queue&lt;/span> &lt;span class="nl">addOperations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="l">@[&lt;/span>&lt;span class="n">operation3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">operation2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">operation1&lt;/span>&lt;span class="l">]&lt;/span> &lt;span class="nl">waitUntilFinished&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">NO&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>