<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>性能分析 | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/mysql-series/2.%E8%A1%A8%E4%B8%8E%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</link>
      <atom:link href="https://ng-tech.icu/books/mysql-series/2.%E8%A1%A8%E4%B8%8E%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    <description>性能分析</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>性能分析</title>
      <link>https://ng-tech.icu/books/mysql-series/2.%E8%A1%A8%E4%B8%8E%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</link>
    </image>
    
    <item>
      <title>explain</title>
      <link>https://ng-tech.icu/books/mysql-series/2.%E8%A1%A8%E4%B8%8E%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/explain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/mysql-series/2.%E8%A1%A8%E4%B8%8E%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/explain/</guid>
      <description>&lt;h1 id=&#34;explain&#34;&gt;Explain&lt;/h1&gt;
&lt;p&gt;MySQL 提供了一个 EXPLAIN 命令, 它可以对 SELECT 语句进行分析, 并输出 SELECT 执行的详细信息, 以供开发人员针对性优化.EXPLAIN 命令用法十分简单, 在 SELECT 语句前加上 explain 就可以了, 例如:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ORDER_EXPENSE_SUMMARY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STATUS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;CHECKED&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EXPENSE_BILL_NO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;BF_20191112_20191118_PAY_1&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ORDER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GMT_CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DESC&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;id :表示 SQL 执行的顺序的标识,SQL 从大到小的执行。示例中 1 表示执行的第一条 SQL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;select_type :表示 select 语句的子类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;type :表示访问类型，显示出该查询是通过全表扫描、索引查询等方式查找数据的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;possible_keys :显示查询可能使用了哪些索引，表示该索引可以进行高效地查找，但是列出来的索引对于后续 优化过程可能是没有用的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;key : 表示 MySQL 实际决定使用的键（索引）。如果没有选择索引，键是 NULL。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;key_len : 表示 key_len 列显示 MySQL 决定使用的键长度。使用的索引的长度。在不损失精确性的情况下，长度越短越好。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ref :表示使用哪个列或查询参数 被用来做索引的查询条件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rows :表示 MySQL 认为它执行查询时必须检查的行数。这是一个预估值，值越少说明查询效率越高。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extra :表示 MySQL 查询优化器执行查询的过程中对查询计划的重要补充信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中 type、key、rows、Extra 是需要重点关注的字段。例如 type 为 ALL 表示全表扫描，那考虑是不是需要增加索引。key 为 null 那么是不是索引缺失或者没有命中，Extra 里有 Using filesort，那么说明查询的原始结果会在内存里面做排序，效率比较低。&lt;/p&gt;
&lt;h1 id=&#34;索引分析&#34;&gt;索引分析&lt;/h1&gt;
&lt;h1 id=&#34;索引查询&#34;&gt;索引查询&lt;/h1&gt;
&lt;p&gt;联合索引中，索引字段的数据必须是有序的，才能实现这种类型的查找，才能利用到索引。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;--- UNIQUE KEY `unique_product_in_category` (`name`,`category`) USING BTREE,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;--- key 为 unique_name_in_category
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;product&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;产品一&amp;#39;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;；&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--- key 为 null
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;product&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;category&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;类目一&amp;#39;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;；&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SYSTEM，CONST 的特例，当表上只有一条元组匹配&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CONST，WHERE 条件筛选后表上至多有一条元组匹配时，比如 WHERE ID = 2（ID 是主键，值为 2 的要么有一条要么没有）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EQ_REF，参与连接运算的表是内表（在代码实现的算法中，两表连接时作为循环中的内循环遍历的对象，这样的表称为内表）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于索引（连接字段上存在唯一索引或者主键索引，且操作符必须是“=”谓词，索引值不能为 NULL）做扫描，使得对外表的一条元组，内表只有唯一一条元组与之对应。&lt;/p&gt;
&lt;p&gt;（4）REF
可以用于单表扫描或者连接。参与连接运算的表，是内表。&lt;/p&gt;
&lt;p&gt;基于索引（连接字段上的索引是非唯一索引，操作符必须是“=”谓词，连接字段值不可为 NULL）做扫描，使得对外表的一条元组，内表可有若干条元组与之对应。&lt;/p&gt;
&lt;p&gt;（5）REF_OR_NULL
类似 REF，只是搜索条件包括：连接字段的值可以为 NULL 的情况，比如 where col = 2 or col is null&lt;/p&gt;
&lt;p&gt;（6）RANGE
范围扫描，基于索引做范围扫描，为诸如 BETWEEN，IN，&amp;gt;=，LIKE 类操作提供支持&lt;/p&gt;
&lt;p&gt;（7）INDEX_SCAN
索引做扫描，是基于索引在索引的叶子节点上找满足条件的数据（不需要访问数据文件）&lt;/p&gt;
&lt;p&gt;（8）ALL
全表扫描或者范围扫描：不使用索引，顺序扫描，直接读取表上的数据（访问数据文件）&lt;/p&gt;
&lt;p&gt;（9）UNIQUE_SUBQUERY
在子查询中，基于唯一索引进行扫描，类似于 EQ_REF&lt;/p&gt;
&lt;p&gt;（10）INDEX_SUBQUERY
在子查询中，基于除唯一索引之外的索引进行扫描&lt;/p&gt;
&lt;p&gt;（11）INDEX_MERGE
多重范围扫描。两表连接的每个表的连接字段上均有索引存在且索引有序，结果合并在一起。适用于作集合的并、交操作。&lt;/p&gt;
&lt;p&gt;（12）FT
FULL TEXT，全文检索&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
