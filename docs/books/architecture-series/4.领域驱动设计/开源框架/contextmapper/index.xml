<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ContextMapper | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/architecture-series/4.%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1/%E5%BC%80%E6%BA%90%E6%A1%86%E6%9E%B6/contextmapper/</link><atom:link href="https://ng-tech.icu/books/architecture-series/4.%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1/%E5%BC%80%E6%BA%90%E6%A1%86%E6%9E%B6/contextmapper/index.xml" rel="self" type="application/rss+xml"/><description>ContextMapper</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>ContextMapper</title><link>https://ng-tech.icu/books/architecture-series/4.%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1/%E5%BC%80%E6%BA%90%E6%A1%86%E6%9E%B6/contextmapper/</link></image><item><title>会员系统 DSL 描述</title><link>https://ng-tech.icu/books/architecture-series/4.%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1/%E5%BC%80%E6%BA%90%E6%A1%86%E6%9E%B6/contextmapper/%E4%BC%9A%E5%91%98%E7%B3%BB%E7%BB%9F-dsl-%E6%8F%8F%E8%BF%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/architecture-series/4.%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1/%E5%BC%80%E6%BA%90%E6%A1%86%E6%9E%B6/contextmapper/%E4%BC%9A%E5%91%98%E7%B3%BB%E7%BB%9F-dsl-%E6%8F%8F%E8%BF%B0/</guid><description>&lt;h1 id="会员系统-dsl-描述">会员系统 DSL 描述&lt;/h1>
&lt;p>如花是一名架构师，对 DDD 也非常熟悉，而且有过几个项目的 DDD 实践，最近他加入会员线，负责完成对会员系统的改造，更好地配合公司的微服务化的设计思路。会员线之前就是三个应用：会员中心对外提供的大量的 REST API 服务；会员注册和登录应用；会员中心，处理会员登录后如修改个人密码、基本信息、SNS 第三方绑定和支付方式绑定等。&lt;/p>
&lt;p>如花加入会员团队后，和大家沟通了基于 DDD + MicroServices 的架构思想，大家都表示同意，但是如何落实到具体的架构设计和文档上，大家就犯难啦。&lt;/p>
&lt;h1 id="从-subdomain-开始">从 SubDomain 开始&lt;/h1>
&lt;p>如花开始 DDD 的第一步，也就是 Subdomain 的划分；如花首先将会员先划分为几个 Sub Domain，如处理账号相关的 Account，处理会员打标的 UserTag，处理支付方式的 PaymentProfile，处理社交平台集成的 SnsProfile，还有一个其他 Profiles，这里我们不涉及 Generic 和 Supporting Doman 的规划，主要从业务核心 Domain 出发。一个同学用 PPT 阐述了划分结构和出发点，如下：&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://s1.ax1x.com/2020/09/13/w0OPW4.md.png" alt="会员 Sub Domain" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>UML 图如下：&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://s1.ax1x.com/2020/09/13/w0O41J.png" alt="会员 Sub Domain UML" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>DDD 的第一步：SubDomain 的划分和展现，就有不同的理解方式，如何描述、如何图形化展现，都有不少的分歧。回到问题的出发点，我们就想划分一下 SubDomain，那么是不是下述的 DSL 代码也可以：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Domain&lt;/span> &lt;span class="nx">User&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">domainVisionStatement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;User domain to manage account, tags, profiles and payment profile.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Subdomain&lt;/span> &lt;span class="nx">AccountDomain&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">CORE_DOMAIN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">domainVisionStatement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Account domain to save sensitive data and authentication&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Subdomain&lt;/span> &lt;span class="nx">UserTagDomain&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">GENERIC_SUBDOMAIN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">domainVisionStatement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;UserTag domain manage user&amp;#39;s KV and Boolean tag&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Subdomain&lt;/span> &lt;span class="nx">PaymentProfileDomain&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">CORE_DOMAIN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">domainVisionStatement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;User payment profile domain to manage credit/debit card, Alipay payment information&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Subdomain&lt;/span> &lt;span class="nx">SnsProfileDomain&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">CORE_DOMAIN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">domainVisionStatement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;User Sns profile domain to manage user Sns profile for Weibo, Wechat, Facebook and Twitter.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Subdomain&lt;/span> &lt;span class="nx">ProfilesDomain&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">CORE_DOMAIN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">domainVisionStatement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;User profiles domain to manage user basic profile, interest profile etc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>虽然目前我们还不知道对应的 DSL 代码语法，但是我们已经知道 Domain 的名称、domain 类型以及 domain 的愿景陈述(visionStatement)，至于后期以何种方式展现系统 Domain，如表格、图形等，这个可以考虑基于现在的数据进行展现。其中的 UserTagDomain 类型为 GENERIC_SUBDOMAIN，这个表示打标是通用性 Domain，如我们后期可以和商品、图片或者视频团队合作，大家可以一起共建打标系统。&lt;/p>
&lt;p>注意，Subdomain 不只是简单包括 type 和 domainVisionStatement，同时你可以添加 Entity 和 Service，其目的主要是突出核心特性并方便你对 Domain 的理解，如 Account 中添加 resetPassword 和 authBySmsCode，相信大多数人都知道这是什么含义。但是注意不要将其他对象添加到 Subdomain，如 VO, Repository, Domain Event 等，这些都是辅助开发的，应该用在 BoundedContext 中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Subdomain&lt;/span> &lt;span class="nx">AccountDomain&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">CORE_DOMAIN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">domainVisionStatement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Account domain to save sensitive data and authentication&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Entity&lt;/span> &lt;span class="nx">Account&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">long&lt;/span> &lt;span class="nx">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="nx">nick&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="nx">mobile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="nx">email&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="nx">name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="nx">salt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="nx">passwd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">int&lt;/span> &lt;span class="nx">status&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Date&lt;/span> &lt;span class="nx">createdAt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Date&lt;/span> &lt;span class="nx">updatedAt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Service&lt;/span> &lt;span class="nx">AccountService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">void&lt;/span> &lt;span class="nx">updatePassword&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kr">long&lt;/span> &lt;span class="nx">accountId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">String&lt;/span> &lt;span class="nx">oldPassword&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">String&lt;/span> &lt;span class="nx">newPassword&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">void&lt;/span> &lt;span class="nx">resetPassword&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kr">long&lt;/span> &lt;span class="nx">acountId&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">boolean&lt;/span> &lt;span class="nx">authByEmail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">String&lt;/span> &lt;span class="nx">email&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">String&lt;/span> &lt;span class="nx">password&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">boolean&lt;/span> &lt;span class="nx">authBySmsCode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">String&lt;/span> &lt;span class="nx">mobile&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">String&lt;/span> &lt;span class="nx">code&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="context-map">Context Map&lt;/h1>
&lt;p>ContextMap 主要是描述各个 Domain 中各个 BoundedContext 间的关联关系，你可以理解为 BoundedContext 的拓扑地图。这里我们先不详细介绍 BoundedContext，你现在只需要理解为实现 Domain 的载体，如你编写的 HSF 服务应用、一个处理客户请求的 Web 应用或者手机 App，也可以是你租用的一个外部 SaaS 系统等。举一个例子，你的系统中有一个 blog 的 SubDomain，你可以自行开发，也可以架设一个 WordPress，或者用 Medium 实现 Blog。回到微服务的场景，如何划分微服务应用？SubDomain 对应的是业务或者虚拟的领域，而 BoundedContext 则是具体支持 SubDomain 的微服务应用，当然一个 SubDomain 可能对应多个微服务应用。&lt;/p>
&lt;p>既然是描述各个 BoundedContext 关系，必然会涉及到关联关系，如 DDD 推荐的 Partnership([P]&amp;lt;-&amp;gt;[P])、Shared Kernel([SK]&amp;lt;-&amp;gt;[SK])、Customer/Supplier([C]&amp;lt;-[S])、Conformist(D,CF]&amp;lt;-[U,OHS,PL])、Open Host Service、Anticorruption Layer([D,ACL]&amp;lt;-[U,OHS,PL])、Published Language 等，详细的介绍大家可以参考 DDD 图书。这些对应关系都有对应的缩写，就是括号内的表述方法。这里给出关联关系 Cheat Sheet 说明图：&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://s1.ax1x.com/2020/09/13/w0XrCD.md.png" alt="Context Map CheatSheet" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">ContextMap&lt;/span> &lt;span class="nx">UserContextMap&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">SYSTEM_LANDSCAPE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">TO_BE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">contains&lt;/span> &lt;span class="nx">AccountContext&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">contains&lt;/span> &lt;span class="nx">UserTagContext&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">contains&lt;/span> &lt;span class="nx">PaymentProfileContext&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">contains&lt;/span> &lt;span class="nx">SnsProfileContext&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">contains&lt;/span> &lt;span class="nx">ProfilesContext&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">contains&lt;/span> &lt;span class="nx">UserLoginContext&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">contains&lt;/span> &lt;span class="nx">UserRegistrationContext&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">UserLoginContext&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nx">AccountContext&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">implementationTechnology&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;RSocket&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">exposedAggregates&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">AccountFacadeAggregate&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ProfilesContext&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nx">UserTagContext&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">implementationTechnology&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;RSocket&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">exposedAggregates&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">UserTags&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">UserRegistrationContext&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nx">UserTagContext&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">implementationTechnology&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;RSocket&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">exposedAggregates&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">UserTags&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">UserRegistrationContext&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">D&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">U&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">S&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nx">SnsProfileContext&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">implementationTechnology&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;RSocket&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>大家可以看到 Map 图中包含的各个 BoundedContext 名称，然后描述了它们之间的关系。在关联关系描述中，涉及到对应的描述。前面我们说明 BoundedContext 为 Domain 的具体系统和应用的承载，所以涉及到对应的技术实现。如 HTTP REST API、RPC、Pub/Sub 等，如 blog 系统为 Medium 的话，那么 implementationTechnology = ”REST API&amp;quot;。还有 exposedAggregates，表示暴露的聚合信息，如 class 对象和字段，服务接口等，方便通讯双方做对接，这个我们会在 BoundedContext 中进行介绍。&lt;/p>
&lt;h1 id="boundedcontext">BoundedContext&lt;/h1>
&lt;p>在 ContextMap 中我们描述了它们之间的关联关系，接下来我们要进行 BoundedContext 的详细定义。BoundedContext 包含的内容相信大多数同学都知道，如 Entity，ValueObject，Aggregate，Service，Repository、DomainEvent 等，这个大家应该都比较熟悉。这里我们给出一个 ContextMapper 对 BoundedContext 的代码，如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">BoundedContext&lt;/span> &lt;span class="nx">AccountContext&lt;/span> &lt;span class="kr">implements&lt;/span> &lt;span class="nx">AccountDomain&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">APPLICATION&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">domainVisionStatement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Managing account basic data&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">implementationTechnology&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Kotlin, Spring Boot, MySQL, Memcached&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">responsibilities&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Account&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Authentication&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Aggregate&lt;/span> &lt;span class="nx">AccountFacadeAggregate&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ValueObject&lt;/span> &lt;span class="nx">AccountDTO&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">long&lt;/span> &lt;span class="nx">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="nx">nick&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="nx">name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">int&lt;/span> &lt;span class="nx">status&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Date&lt;/span> &lt;span class="nx">createdAt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">def&lt;/span> &lt;span class="nx">toJson&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* AccountFacade as Application Service */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Service&lt;/span> &lt;span class="nx">AccountFacade&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="nx">AccountDTO&lt;/span> &lt;span class="nx">findById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Integer&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Aggregate&lt;/span> &lt;span class="nx">Accounts&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Entity&lt;/span> &lt;span class="nx">Account&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">long&lt;/span> &lt;span class="nx">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="nx">nick&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="nx">mobile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="nx">email&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="nx">name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="nx">salt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">String&lt;/span> &lt;span class="nx">passwd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">int&lt;/span> &lt;span class="nx">status&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Date&lt;/span> &lt;span class="nx">createdAt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Date&lt;/span> &lt;span class="nx">updatedAt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里对 BoundedContext 再说明一下：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>BoundedContext 的名称，这个不用说啦，这个和 ContextMap 中名称一致。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implements AccountDomain：表示要实现哪一个 SubDomain，我们都知道一个 Subdomain 可能会包含多个 BoundedContext，这些 BoundedContext 配合起来完成 Subdomain 的业务需求。ContextMap 还提供 refines，来表示 BoundedContext 要实现一些 user case，官方文档有对应的说明。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>BoundedContext 的属性字段：type 表示类型，如 APPLICATION、SYSTEM 等。domainVisionStatement 描述一下 BoundedContext 的职责。implementationTechnology 表示具体的技术，前面我们说到 BoundedContext 已经涉及具体的应用和系统等，所以要说明对应的技术方案实现，核心的部分描述一下就可以。responsibilities 表示 BoundedContext 的职责列表，这里只需要关键字就可以，如 Account 要负责安全验证等。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>AccountFacadeAggregate: 表示提供给外部调用的聚合，这里 DTO 的对象定义、服务接口的定义等。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Aggregate Accounts：这个表示 BoundedContext 内部的聚合，如 entity、value object、service 等。这里说明一下，DDD 中的那个 Aggregate 是 entity，value object 的聚合对象，而 ContextMapper 中的 Aggregate 表示为一些资源的集合，如 Service 集合等。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>BoundedContext 的更多信息，可以参考 sculptor 的文档，根据实际的情况可以添加对应的部分，如 DomainEvent、Repository 等。&lt;/p>
&lt;h1 id="其它特性">其它特性&lt;/h1>
&lt;h2 id="userstory">UserStory&lt;/h2>
&lt;p>这个 DSL 比较明确的，主要是三元素：作为 “aaa&amp;quot;，我希望能&amp;quot;xxx&amp;quot;，我希望能”yyyy&amp;quot;，以便 &amp;ldquo;zzz&amp;rdquo;，也是符合 UserStory 的典型三要素：角色、活动和商业价值。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">UserStory&lt;/span> &lt;span class="nx">Customers&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">As&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="s2">&amp;#34;Login User&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">I&lt;/span> &lt;span class="nx">want&lt;/span> &lt;span class="nx">to&lt;/span> &lt;span class="nx">update&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="s2">&amp;#34;Avatar&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">I&lt;/span> &lt;span class="nx">want&lt;/span> &lt;span class="nx">to&lt;/span> &lt;span class="nx">update&lt;/span> &lt;span class="nx">an&lt;/span> &lt;span class="s2">&amp;#34;Address&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">so&lt;/span> &lt;span class="nx">that&lt;/span> &lt;span class="s2">&amp;#34;I can manage the personal data.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usecase">UseCase&lt;/h2>
&lt;p>Use Case 是描述需求的一种方式，在 UML 图就有对应的 UseCase 图，核心就是 actor，交互动作和商业价值，对应的 DSL 代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">UseCase&lt;/span> &lt;span class="nx">UC1_Example&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">actor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Insurance Employee&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">interactions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">create&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="s2">&amp;#34;Customer&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">update&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="s2">&amp;#34;Customer&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;offer&amp;#34;&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="s2">&amp;#34;Contract&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">benefit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;I am able to manage the customers data and offer them insurance contracts.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 Aggregate 聚合中，你可以设置 useCases 属性来描述对应的 UseCase，如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Aggregate&lt;/span> &lt;span class="nx">Contract&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">useCases&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">UC1_Example&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">UC2_Example&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>