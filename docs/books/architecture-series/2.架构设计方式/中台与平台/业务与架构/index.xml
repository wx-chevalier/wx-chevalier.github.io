<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>业务与架构 | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/architecture-series/2.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%96%B9%E5%BC%8F/%E4%B8%AD%E5%8F%B0%E4%B8%8E%E5%B9%B3%E5%8F%B0/%E4%B8%9A%E5%8A%A1%E4%B8%8E%E6%9E%B6%E6%9E%84/</link>
      <atom:link href="https://ng-tech.icu/books/architecture-series/2.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%96%B9%E5%BC%8F/%E4%B8%AD%E5%8F%B0%E4%B8%8E%E5%B9%B3%E5%8F%B0/%E4%B8%9A%E5%8A%A1%E4%B8%8E%E6%9E%B6%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <description>业务与架构</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>业务与架构</title>
      <link>https://ng-tech.icu/books/architecture-series/2.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%96%B9%E5%BC%8F/%E4%B8%AD%E5%8F%B0%E4%B8%8E%E5%B9%B3%E5%8F%B0/%E4%B8%9A%E5%8A%A1%E4%B8%8E%E6%9E%B6%E6%9E%84/</link>
    </image>
    
    <item>
      <title>业务定义</title>
      <link>https://ng-tech.icu/books/architecture-series/2.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%96%B9%E5%BC%8F/%E4%B8%AD%E5%8F%B0%E4%B8%8E%E5%B9%B3%E5%8F%B0/%E4%B8%9A%E5%8A%A1%E4%B8%8E%E6%9E%B6%E6%9E%84/%E4%B8%9A%E5%8A%A1%E5%AE%9A%E4%B9%89/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/architecture-series/2.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%96%B9%E5%BC%8F/%E4%B8%AD%E5%8F%B0%E4%B8%8E%E5%B9%B3%E5%8F%B0/%E4%B8%9A%E5%8A%A1%E4%B8%8E%E6%9E%B6%E6%9E%84/%E4%B8%9A%E5%8A%A1%E5%AE%9A%E4%B9%89/</guid>
      <description>&lt;h1 id=&#34;业务定义&#34;&gt;业务定义&lt;/h1&gt;
&lt;p&gt;本节主要讨论，什么是业务？应该如何去划分业务？业务描述的对象既有可能指个人也有可能指企业，它更多的指的是行业的工作，而从中台的角度来看，特指企业组织以达成企业利益目标为目的，所组织的一系列活动称为业务。&lt;/p&gt;
&lt;p&gt;在软件系统层面，我们必然要针对这些业务给出标识，以便于我们在软件系统中知道每一次的系统请求和操作是属于哪一个业务的，所有针对业务的这些标识，我们称之为业务身份。按照前面对业务的概念和特征的定义，我们可以明确，业务身份应当包含的内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;团队与组织机构；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;业务的识别条件，譬如类目，可能是商品标或者是买家特征、渠道信息等等；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有了业务身份之后，我们就在软件系统中就有了业务逻辑隔离的依据。因为不同的业务，都会有自己独有的业务特征，这些特征会导致业务在流程、规则上有不同的要求。在传统的开发中，我们会通过 &lt;code&gt;if...else...&lt;/code&gt; 来实现不同业务逻辑的划分，这也就会导致复杂业务间的鲁棒性较低。在此之上，我们也会认知到，业务本身也是分类型的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;水平业务：如果一个业务需要依赖其它业务所包含的商品，并且，需要结合其它业务规则才能完成完整的经营活动，称为水平业务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;垂直业务：反之，如果能够独立的提供商品的，就称之为垂直业务。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;垂直业务和水平业务之间是可以进行业务规则叠加的，在业务规则产生冲突的情况下，需要业务确认优先级。而垂直业务和垂直业务之间是不能叠加的。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>业务模型</title>
      <link>https://ng-tech.icu/books/architecture-series/2.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%96%B9%E5%BC%8F/%E4%B8%AD%E5%8F%B0%E4%B8%8E%E5%B9%B3%E5%8F%B0/%E4%B8%9A%E5%8A%A1%E4%B8%8E%E6%9E%B6%E6%9E%84/%E4%B8%9A%E5%8A%A1%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/architecture-series/2.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%96%B9%E5%BC%8F/%E4%B8%AD%E5%8F%B0%E4%B8%8E%E5%B9%B3%E5%8F%B0/%E4%B8%9A%E5%8A%A1%E4%B8%8E%E6%9E%B6%E6%9E%84/%E4%B8%9A%E5%8A%A1%E6%A8%A1%E5%9E%8B/</guid>
      <description>&lt;h1 id=&#34;业务模型&#34;&gt;业务模型&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>业务挑战</title>
      <link>https://ng-tech.icu/books/architecture-series/2.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%96%B9%E5%BC%8F/%E4%B8%AD%E5%8F%B0%E4%B8%8E%E5%B9%B3%E5%8F%B0/%E4%B8%9A%E5%8A%A1%E4%B8%8E%E6%9E%B6%E6%9E%84/%E4%B8%9A%E5%8A%A1%E6%8C%91%E6%88%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/architecture-series/2.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%96%B9%E5%BC%8F/%E4%B8%AD%E5%8F%B0%E4%B8%8E%E5%B9%B3%E5%8F%B0/%E4%B8%9A%E5%8A%A1%E4%B8%8E%E6%9E%B6%E6%9E%84/%E4%B8%9A%E5%8A%A1%E6%8C%91%E6%88%98/</guid>
      <description>&lt;h1 id=&#34;业务挑战&#34;&gt;业务挑战&lt;/h1&gt;
&lt;p&gt;在很多的互联网领域中，会根据领域服务来建设分布式架构；而随着业务领域的不断交叉，业务生命周期的不断延长，从招商、选品、供应链、仓储、营销/导购、下单、履约、物流、售后等，其业务链路长、业务逻辑上游对下游又有影响。在这业务主线的链路上，又建设了众多系统进行支撑，比如商品平台、购物车系统、下单系统、履约系统、优惠系统、物流系统、供应链系统等，围绕这些核心系统，还有数不清的辅助系统/服务。&lt;/p&gt;
&lt;p&gt;业务型平台在面对业务数量和类型的不断增加，在支持效率和成本上都受到挑战，单靠平台侧的人员无法独立解决好这个问题，需要和业务团队的同学更好的协同才有可能。在&lt;a href=&#34;https://ng-tech.icu/books/MicroService-Series/#/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;微服务与云原生&lt;/a&gt; 篇中，我们讨论过某个交付的系统是受该组织的内部结构极大的影响；那么在每一次跨团队的对焦、分析、协作中，也存在着很多的痛点。&lt;/p&gt;
&lt;h1 id=&#34;业务与平台耦合性高&#34;&gt;业务与平台耦合性高&lt;/h1&gt;
&lt;p&gt;业务本身会分成“垂直”和“水平”两个维度。在一次业务交互过程中，其业务复杂度就在于业务“垂直”维度与“水平”维度产生的叠加，并由叠加而产生的业务规则上的冲突。针对业务叠加的处理，各系统基本上还是基于 SPI 扩展机制，这些 SPI 缺少按照业务维度进行组织与隔离。在业务种类少，不同业务在逻辑叠加度小的情况下还是可以在很大程度上解决业务可定制化、多样化的问题。但随着各类业务越来越多时，就会导致各类业务在同一个扩展点上的叠加效应越来越突出。其中最薄弱的点就是 SPI 接口中是否需要执行的过滤方法（filter）的编写。一旦过滤方法写得不好，就可能会造成不该执行的逻辑被执行了，或者把后续本该执行的逻辑给跳过了。&lt;/p&gt;
&lt;p&gt;在共享的各个平台中，提供给业务方可扩展的 SPI 多达几百个。一个业务的最终逻辑是否正确，就需要该业务确保这几百个 SPI 决策树中每个节点注册的位置正确，过滤方法中的过滤条件正确，同时执行逻辑也必须确。不仅如此，本业务注册的 SPI 都正确了，还需要其他的业务注册的 SPI 也都是正确的，这最终导致了业务与业务之间高度耦合。这种耦合，又进一步导致了各业务方之间、业务方与平台之间的大量联调、集成与回归等配合工作，无法做到自助式的业务设计、开发与交付&lt;/p&gt;
&lt;h1 id=&#34;协同效率低口径难以统一&#34;&gt;协同效率低，口径难以统一&lt;/h1&gt;
&lt;p&gt;跨团队协作时候，往往缺少业务全链路视角的需求管理机制，协同效率低。往往需求的描述非常简单，或者存在着大量的重复建设的需求。并且需求传递效率低，需要反复沟通。&lt;/p&gt;
&lt;p&gt;而从技术同学的角度来看，因为业务与平台耦合性高，因此技术同学也很难给出准确的排期，从而导致双方的预期值有一定差异，对于业务的支持也就难以及时到位。&lt;/p&gt;
&lt;h1 id=&#34;缺少可复用的业务资产&#34;&gt;缺少可复用的业务资产&lt;/h1&gt;
&lt;p&gt;一个企业的 IT 体系建设是否成熟，业界是有一些指导框架来进行评估的，比如 TOGAF 框架。在该信息系统建设框架中，有一个很重要的系统成熟度评估项目：Enterprise Continumm（企业统一体）。这里面的关键是企业需要建立：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;架构统一体（Architecture Continuum）：该统一体能从特定架构中提取出可复用的组件到仓库中（Reposity），为后续的类似业务的重用（Gerneralization for future re-use）。在具体应用中，可以从组件仓库中选择可复用的组件并进行与实际应用场景适配（Adaptation for use）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解决方案统一体（Solutions Continuum）：与架构统一体类似，在面对不同的市场，需要能从可复用的解决方案库中选择并快速复制。对于新兴市场的交付，也能提取成可复用的解决方案到资产库中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;中台接入门槛高&#34;&gt;中台接入门槛高&lt;/h1&gt;
&lt;p&gt;对于大型的业务平台而言，其链路流程往往较长，整个迭代周期也会愈发缓慢。而很多的新业务需要的是快速试错，这就需要我们提供精简的、能够快速转向的中台能力。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>中台架构</title>
      <link>https://ng-tech.icu/books/architecture-series/2.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%96%B9%E5%BC%8F/%E4%B8%AD%E5%8F%B0%E4%B8%8E%E5%B9%B3%E5%8F%B0/%E4%B8%9A%E5%8A%A1%E4%B8%8E%E6%9E%B6%E6%9E%84/%E4%B8%AD%E5%8F%B0%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/architecture-series/2.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%96%B9%E5%BC%8F/%E4%B8%AD%E5%8F%B0%E4%B8%8E%E5%B9%B3%E5%8F%B0/%E4%B8%9A%E5%8A%A1%E4%B8%8E%E6%9E%B6%E6%9E%84/%E4%B8%AD%E5%8F%B0%E6%9E%B6%E6%9E%84/</guid>
      <description>&lt;h1 id=&#34;中台架构&#34;&gt;中台架构&lt;/h1&gt;
</description>
    </item>
    
  </channel>
</rss>
