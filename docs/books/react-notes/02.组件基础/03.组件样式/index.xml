<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>03.组件样式 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/react-notes/02.%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/03.%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F/</link><atom:link href="https://ng-tech.icu/books/react-notes/02.%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/03.%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F/index.xml" rel="self" type="application/rss+xml"/><description>03.组件样式</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>03.组件样式</title><link>https://ng-tech.icu/books/react-notes/02.%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/03.%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F/</link></image><item><title>CSS-in-JS</title><link>https://ng-tech.icu/books/react-notes/02.%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/03.%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F/css-in-js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/react-notes/02.%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/03.%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F/css-in-js/</guid><description/></item><item><title>样式定义与引入</title><link>https://ng-tech.icu/books/react-notes/02.%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/03.%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F/%E6%A0%B7%E5%BC%8F%E5%AE%9A%E4%B9%89%E4%B8%8E%E5%BC%95%E5%85%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/react-notes/02.%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/03.%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F/%E6%A0%B7%E5%BC%8F%E5%AE%9A%E4%B9%89%E4%B8%8E%E5%BC%95%E5%85%A5/</guid><description>&lt;h1 id="样式定义与引入">样式定义与引入&lt;/h1>
&lt;h1 id="css-样式">CSS 样式&lt;/h1>
&lt;h1 id="引入-css-文件">引入 CSS 文件&lt;/h1>
&lt;h1 id="动态样式类名">动态样式类名&lt;/h1>
&lt;h1 id="scss">SCSS&lt;/h1>
&lt;h1 id="style">Style&lt;/h1>
&lt;h2 id="inline-style行内样式">Inline Style:行内样式&lt;/h2>
&lt;p>在 React 中，如果要使用行内元素，不可以直接使用 style=&amp;quot;”这种方式，可以有：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">React&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">from&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">style&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span>&lt;span class="nx">backgroundColor&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="s1">&amp;#39;#EEE&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">React&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createClass&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span>&lt;span class="nx">render&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">    &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">      &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">style&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">      &lt;/span>&lt;span class="c1">//或者&amp;lt;div style={{backgroundColor: &amp;#39;#EEE&amp;#39;}}&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">        &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">Hello&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">world&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/h1&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">      &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">    &lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看出，React 的 style 属性接收的也是一个 JavaScript 对象。&lt;/p>
&lt;h2 id="styled-component">Styled Component&lt;/h2>
&lt;h1 id="class">Class&lt;/h1>
&lt;p>你可以根据这个策略为每个组件创建 CSS  文件，可以让组件名和 CSS  中的 class  使用一个命名空间，来避免一个组件中的一些 class  干扰到另外一些组件的 class。&lt;/p>
&lt;p>&lt;em>app/components/MyComponent.css&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">MyComponent-wrapper&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">  &lt;/span>&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#eee&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>app/components/MyComponent.jsx&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="s2">&amp;#34;./MyComponent.css&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;react&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createClass&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">render&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span> &lt;span class="nx">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;MyComponent-wrapper&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">        &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">Hello&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">world&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/h1&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">      &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>## Multiple Class&lt;/p>
&lt;p>上文中提及的利用 className 方式赋值，如果在存在多个类名的情况下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">render&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span>&lt;span class="kd">var&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">cx&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">React&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addons&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classSet&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span>&lt;span class="kd">var&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">cx&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">    &lt;/span>&lt;span class="s1">&amp;#39;message&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">    &lt;/span>&lt;span class="s1">&amp;#39;message-important&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isImportant&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">    &lt;/span>&lt;span class="s1">&amp;#39;message-read&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isRead&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span>&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span>&lt;span class="c1">// same final string, but much cleaner
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">  &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">Great&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">I&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">ll&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">be&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nx">there&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里的 classSet 只是起到了一个帮助进行类名合成的功能，React 官方已经弃用了，改为了&lt;a href="https://github.com/JedWatson/classnames" target="_blank" rel="noopener">这个&lt;/a>。&lt;/p>
&lt;h1 id="scss-1">SCSS&lt;/h1></description></item></channel></rss>