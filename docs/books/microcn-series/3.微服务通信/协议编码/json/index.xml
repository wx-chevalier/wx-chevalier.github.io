<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Json | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/microcn-series/3.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/%E5%8D%8F%E8%AE%AE%E7%BC%96%E7%A0%81/json/</link>
      <atom:link href="https://ng-tech.icu/books/microcn-series/3.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/%E5%8D%8F%E8%AE%AE%E7%BC%96%E7%A0%81/json/index.xml" rel="self" type="application/rss+xml" />
    <description>Json</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>Json</title>
      <link>https://ng-tech.icu/books/microcn-series/3.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/%E5%8D%8F%E8%AE%AE%E7%BC%96%E7%A0%81/json/</link>
    </image>
    
    <item>
      <title>JSONSchema</title>
      <link>https://ng-tech.icu/books/microcn-series/3.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/%E5%8D%8F%E8%AE%AE%E7%BC%96%E7%A0%81/json/jsonschema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/microcn-series/3.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/%E5%8D%8F%E8%AE%AE%E7%BC%96%E7%A0%81/json/jsonschema/</guid>
      <description>&lt;h1 id=&#34;jsonschema&#34;&gt;JSONSchema&lt;/h1&gt;
&lt;p&gt;JSON Schema 用以标注和验证 JSON 文档的元数据的文档，可以类比于 XML Schema。相对于 JSON Schema，一个 JSON 文档就是 JSON Schema 的一个 instance。&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://s2.ax1x.com/2019/09/02/nP1GSs.png&#34; alt=&#34;JSON Schema 概念&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如下是简单的 JSON Schema 的定义：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;$schema&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://json-schema.org/draft-07/schema#&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;$id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://example.com/product.schema.json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Product&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;A product in the catalog&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;object&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://json-schema.org/latest/json-schema-core.html#rfc.section.7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;$schema&lt;/code&gt;&lt;/a&gt; 关键字指出此模式是根据标准的特定草案编写的，出于各种原因（主要是版本控制）使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://json-schema.org/latest/json-schema-core.html#rfc.section.8.2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;$id&lt;/code&gt;&lt;/a&gt; 关键字定义架构的 URI，以及解析架构中其他 URI 引用所依据的基本 URI。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://json-schema.org/latest/json-schema-validation.html#rfc.section.10.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;title&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;http://json-schema.org/latest/json-schema-validation.html#rfc.section.10.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/a&gt; 关键字仅是描述性的。它们不会对要验证的数据增加约束，用这两个关键字说明了 Schema 的意图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://json-schema.org/latest/json-schema-validation.html#rfc.section.6.1.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; 关键字定义了对我们的 JSON 数据的第一个约束，在这种情况下，它必须是 JSON 对象。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;links&#34;&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://json-schema.org/learn/getting-started-step-by-step.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://json-schema.org/learn/getting-started-step-by-step.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>二进制编码</title>
      <link>https://ng-tech.icu/books/microcn-series/3.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/%E5%8D%8F%E8%AE%AE%E7%BC%96%E7%A0%81/json/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%BC%96%E7%A0%81/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/microcn-series/3.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/%E5%8D%8F%E8%AE%AE%E7%BC%96%E7%A0%81/json/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%BC%96%E7%A0%81/</guid>
      <description>&lt;h1 id=&#34;二进制编码&#34;&gt;二进制编码&lt;/h1&gt;
&lt;p&gt;对于仅在组织内部使用的数据，使用最小公分母编码格式的压力较小。例如，可以选择更紧凑或更快的解析格式。虽然对小数据集来说，收益可以忽略不计，但一旦达到 TB 级别，数据格式的选择就会产生巨大的影响。&lt;/p&gt;
&lt;p&gt;JSON 比 XML 简洁，但与二进制格式一比，还是太占地方。这一事实导致大量二进制编码版本 JSON &amp;amp; XML 的出现，JSON（MessagePack，BSON，BJSON，UBJSON，BISON 和 Smile 等）（例如 WBXML 和 Fast Infoset）。这些格式已经被各种各样的领域所采用，但是没有一个像 JSON 和 XML 的文本版本那样被广泛采用。&lt;/p&gt;
&lt;p&gt;这些格式中的一些扩展了一组数据类型（例如，区分整数和浮点数，或者增加对二进制字符串的支持），另一方面，它们没有盖面 JSON / XML 的数据模型。特别是由于它们没有规定模式，所以它们需要在编码数据中包含所有的对象字段名称。也就是说，在下例中的 JSON 文档的二进制编码中，需要在某处包含字符串 userName，favoriteNumber 和 interest。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;userName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Martin&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;favoriteNumber&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1337&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;interests&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;daydreaming&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hacking&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们来看一个 MessagePack 的例子，它是一个 JSON 的二进制编码。下图显示了如果使用 MessagePack 对上例中的 JSON 文档进行编码，则得到的字节序列。前几个字节如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一个字节&lt;code&gt;0x83&lt;/code&gt;表示接下来是&lt;strong&gt;3&lt;/strong&gt;个字段（低四位= &lt;code&gt;0x03&lt;/code&gt;）的&lt;strong&gt;对象 object&lt;/strong&gt;（高四位= &lt;code&gt;0x80&lt;/code&gt;）（如果想知道如果一个对象有 15 个以上的字段会发生什么情况，字段的数量塞不进 4 个 bit 里，那么它会用另一个不同的类型标识符，字段的数量被编码两个或四个字节）。&lt;/li&gt;
&lt;li&gt;第二个字节&lt;code&gt;0xa8&lt;/code&gt;表示接下来是&lt;strong&gt;8&lt;/strong&gt;字节长的字符串（最高四位= 0x08）。&lt;/li&gt;
&lt;li&gt;接下来八个字节是 ASCII 字符串形式的字段名称&lt;code&gt;userName&lt;/code&gt;。由于之前已经指明长度，不需要任何标记来标识字符串的结束位置（或者任何转义）。&lt;/li&gt;
&lt;li&gt;接下来的七个字节对前缀为&lt;code&gt;0xa6&lt;/code&gt;的六个字母的字符串值&lt;code&gt;Martin&lt;/code&gt;进行编码，依此类推。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二进制编码长度为 66 个字节，仅略小于文本 JSON 编码所取的 81 个字节（删除了空白）。所有的 JSON 的二进制编码在这方面是相似的。空间节省了一丁点（以及解析加速）是否能弥补可读性的损失，谁也说不准。&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://s2.ax1x.com/2020/02/06/1yWWAs.md.png&#34; alt=&#34;使用MessagePack编码的记录&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
