<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Electron | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/web-series/4.%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91/electron/</link><atom:link href="https://ng-tech.icu/books/web-series/4.%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91/electron/index.xml" rel="self" type="application/rss+xml"/><description>Electron</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Electron</title><link>https://ng-tech.icu/books/web-series/4.%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91/electron/</link></image><item><title>截图与视频</title><link>https://ng-tech.icu/books/web-series/4.%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91/electron/%E6%88%AA%E5%9B%BE%E4%B8%8E%E8%A7%86%E9%A2%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/web-series/4.%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91/electron/%E6%88%AA%E5%9B%BE%E4%B8%8E%E8%A7%86%E9%A2%91/</guid><description>&lt;h1 id="截图与视频">截图与视频&lt;/h1>
&lt;h1 id="截图">截图&lt;/h1>
&lt;p>最简单的截图就是直接使用 getSources，但是 desktopCapturer.getSources 会导致整个程序挂起，挂起时间与屏幕分辨率、屏幕数量和电脑性能有关。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">desktopCapturer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getSources&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">types&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;screen&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">thumbnailSize&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">width&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">scaleFactor&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">height&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">scaleFactor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">sources&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">timeEnd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;capture&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">imgSrc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">sources&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">thumbnail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toDataURL&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">capture&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">CaptureRenderer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">$canvas&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">$bg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">imgSrc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">scaleFactor&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>替代的方法是可以使用 getUserMedia：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">handleStream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">stream&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">style&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">cursor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">oldCursor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">style&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">opacity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Create hidden video tag
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">let&lt;/span> &lt;span class="nx">video&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;video&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">video&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">style&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">cssText&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;position:absolute;top:-10000px;left:-10000px;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Event connected to stream
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">loaded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">video&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onloadedmetadata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">loaded&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">loaded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Set video ORIGINAL height (screenshot)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">video&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">style&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">video&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">videoHeight&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;px&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// videoHeight
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">video&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">style&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">video&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">videoWidth&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;px&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// videoWidth
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Create canvas
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">let&lt;/span> &lt;span class="nx">canvas&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;canvas&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">canvas&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">video&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">videoWidth&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">canvas&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">video&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">videoHeight&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">ctx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">canvas&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;2d&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Draw video on canvas
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">drawImage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">video&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">canvas&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">canvas&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">callback&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Save screenshot to png - base64
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">callback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">canvas&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toDataURL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;image/png&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// console.log(&amp;#39;Need callback!&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Remove hidden video tag
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">video&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">remove&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">stream&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getTracks&lt;/span>&lt;span class="p">()[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">stop&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// nothing
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">video&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">srcObject&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">stream&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">appendChild&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">video&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// mac 和 windows 获取 chromeMediaSourceId 的方式不同
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;os&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">platform&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s2">&amp;#34;win32&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;electron&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">desktopCapturer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getSources&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">types&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;screen&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">thumbnailSize&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">sources&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">selectSource&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">sources&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">filter&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">source&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">display_id&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">curScreen&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">navigator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getUserMedia&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">audio&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">video&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">mandatory&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">chromeMediaSource&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;desktop&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">chromeMediaSourceId&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">selectSource&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">minWidth&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1280&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">minHeight&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">720&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">maxWidth&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">8000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">maxHeight&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">8000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">handleStream&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">handleError&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">navigator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getUserMedia&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">audio&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">video&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">mandatory&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">chromeMediaSource&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;desktop&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">chromeMediaSourceId&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`screen:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">curScreen&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">minWidth&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1280&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">minHeight&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">720&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">maxWidth&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">8000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">maxHeight&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">8000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">handleStream&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">handleError&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="多屏幕支持">多屏幕支持&lt;/h2>
&lt;p>由于全屏情况，窗口只能占据一个屏幕，所以多屏截图只能用多个截屏窗口来处理了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">captureScreen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">args&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">captureWins&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">screen&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;electron&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">displays&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">screen&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getAllDisplays&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 循环创建截屏窗口
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">captureWins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">displays&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">display&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">captureWin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">BrowserWindow&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// window 使用 fullscreen, mac 设置为 undefined, 不可为 false
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fullscreen&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">platform&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s2">&amp;#34;win32&amp;#34;&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="kc">undefined&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">x&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">y&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">transparent&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">frame&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">movable&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">resizable&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">enableLargerThanScreen&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hasShadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">captureWin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setAlwaysOnTop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;screen-saver&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">captureWin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setFullScreenable&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">captureWin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">loadFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">__dirname&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;capture.html&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 调试用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// captureWin.openDevTools()
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 一个窗口关闭则关闭所有窗口
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">captureWin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;closed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">captureWins&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">captureWin&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">index&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">captureWins&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">splice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">captureWins&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">win&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">win&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">close&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">captureWin&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后每个窗口截取当前屏幕的画面进行操作，获取当前屏幕可以下面的方法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 因为窗口是全屏的, 所以可以直接用 x, y 来对比
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">getCurrentScreen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">currentWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getBounds&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">screen&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">getAllDisplays&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">d&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">d&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">x&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">d&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">y&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">y&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="mac-下截取全屏窗口">MAC 下截取全屏窗口&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">captureWin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">BrowserWindow&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// window 使用 fullscreen, mac 设置为 undefined, 不可为 false
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fullscreen&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">platform&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s2">&amp;#34;win32&amp;#34;&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="kc">undefined&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">x&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">y&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">transparent&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">frame&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">movable&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">resizable&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">enableLargerThanScreen&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hasShadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">show&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 黑魔法...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hide&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">captureWin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setAlwaysOnTop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;screen-saver&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">captureWin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setVisibleOnAllWorkspaces&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">captureWin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setFullScreenable&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">captureWin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">show&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">show&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">captureWin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setVisibleOnAllWorkspaces&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>开发基础</title><link>https://ng-tech.icu/books/web-series/4.%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91/electron/%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/web-series/4.%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91/electron/%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/</guid><description>&lt;h1 id="electron-环境搭建与开发基础">Electron 环境搭建与开发基础&lt;/h1>
&lt;p>It&amp;rsquo;s just a global trend in every aspect of our economy, to externalize the costs.
Saving dev time at the expense of resources is a tried and true strategy that has worked throughout history and will continue to work into the future.&lt;/p>
&lt;p>Electron 可以让你使用纯 JavaScript  调用丰富的原生  APIs  来创造桌面应用。你可以把它看作是专注于桌面应用而不是 Web  服务器的 io.js  的一个变体。这不意味着  Electron  是绑定了  GUI  库的  JavaScript。相反，Electron  使用 Web  页面作为它的  GUI，所以你能把它看作成一个被  JavaScript  控制的，精简版的  Chromium  浏览器。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://cdn-images-1.medium.com/max/800/1*ZPIrLl5Xwrp_aT6PvNRy7w.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>The desktop app is a host for some number of guest pages. The guest pages are like browser tabs pointed at slack.com, which we call the webapp. Although the webapp is on its own quest for modernity, this post is about the Electron container around it.&lt;/p>
&lt;p>Support for notifications across all platforms — even Windows 7
Support for spell-check and language detection
App, tray, taskbar, and context menus
Support for deep-linking, launch on login, taskbar and dock badging
Installers for all platforms — mainly Windows&lt;/p>
&lt;p>## Process(进程)&lt;/p>
&lt;h3 id="主进程">主进程&lt;/h3>
&lt;p>在  Electron  里，运行  &lt;code>package.json&lt;/code>  里  &lt;code>main&lt;/code>  脚本的进程被称为&lt;strong>主进程&lt;/strong>。在主进程运行的脚本可以以创建  web  页面的形式展示  GUI。&lt;/p>
&lt;h3 id="渲染进程">渲染进程&lt;/h3>
&lt;p>由于  Electron  使用  Chromium  来展示页面，所以  Chromium  的多进程结构也被充分利用。每个  Electron  的页面都在运行着自己的进程，这样的进程我们称之为&lt;strong>渲染进程&lt;/strong>。在一般浏览器中，网页通常会在沙盒环境下运行，并且不允许访问原生资源。然而，Electron  用户拥有在网页中调用  io.js  的  APIs  的能力，可以与底层操作系统直接交互。&lt;/p>
&lt;h3 id="主进程与渲染进程的区别">主进程与渲染进程的区别&lt;/h3>
&lt;p>主进程使用  BroswerWindow  实例创建网页。每个  BroswerWindow  实例都在自己的渲染进程里运行着一个网页。当一个  BroswerWindow  实例被销毁后，相应的渲染进程也会被终止。主进程管理所有页面和与之对应的渲染进程。每个渲染进程都是相互独立的，并且只关心他们自己的网页。由于在网页里管理原生  GUI  资源是非常危险而且容易造成资源泄露，所以在网页面调用  GUI  相关的  APIs  是不被允许的。如果你想在网页里使用  GUI  操作，其对应的渲染进程必须与主进程进行通讯，请求主进程进行相关的  GUI  操作。在  Electron，我们提供用于在主进程与渲染进程之间通讯的  &lt;a href="https://github.com/atom/electron/blob/master/docs-translations/zh-CN/api/ipc-renderer.md" target="_blank" rel="noopener">ipc&lt;/a>  模块。并且也有一个远程进程调用风格的通讯模块  &lt;a href="https://github.com/atom/electron/blob/master/docs-translations/zh-CN/api/remote.md" target="_blank" rel="noopener">remote&lt;/a>。&lt;/p>
&lt;p># Quick Start&lt;/p>
&lt;p>## Installation&lt;/p>
&lt;p>- electron-prebuild&lt;/p>
&lt;pre tabindex="0">&lt;code>npm install -g electron-prebuilt
&lt;/code>&lt;/pre>&lt;p>如果你已经用  &lt;code>npm&lt;/code>  全局安装了  &lt;code>electron-prebuilt&lt;/code>，你只需要按照如下方式直接运行你的应用：&lt;/p>
&lt;pre tabindex="0">&lt;code>electron .
&lt;/code>&lt;/pre>&lt;p>如果你是局部安装，那运行：&lt;/p>
&lt;pre tabindex="0">&lt;code>./node_modules/.bin/electron .
&lt;/code>&lt;/pre>&lt;p>-  手工下载  Electron  二进制文件&lt;/p>
&lt;p>如果你手工下载了  Electron  的二进制文件，你也可以直接使用其中的二进制文件直接运行你的应用。&lt;/p>
&lt;p>(1)Windows&lt;/p>
&lt;pre tabindex="0">&lt;code>$ .\electron\electron.exe your-app\
&lt;/code>&lt;/pre>&lt;p>(2)Linux&lt;/p>
&lt;pre tabindex="0">&lt;code>$ ./electron/electron your-app/
&lt;/code>&lt;/pre>&lt;p>(3)OS X&lt;/p>
&lt;pre tabindex="0">&lt;code>$ ./Electron.app/Contents/MacOS/Electron your-app/
&lt;/code>&lt;/pre>&lt;p>&lt;code>Electron.app&lt;/code>  里面是  Electron  发布包，你可以在&lt;a href="https://github.com/atom/electron/releases" target="_blank" rel="noopener">这里&lt;/a>下载到。&lt;/p>
&lt;p>### Webpack&lt;/p>
&lt;h3 id="devtoolshttpsgithubcomelectrondevtron">&lt;a href="https://github.com/electron/devtron" target="_blank" rel="noopener">DevTools&lt;/a>&lt;/h3>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://cloud.githubusercontent.com/assets/378023/15036521/e3e7cd06-12ca-11e6-8054-ed0455015f05.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-npm" data-lang="npm">require(&amp;#39;devtron&amp;#39;).install()
&lt;/code>&lt;/pre>&lt;p>## HelloWorld&lt;/p>
&lt;p>大体上，一个  Electron  应用的目录结构如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>your-app/
├── package.json //通用的node项目的声明文件
├── main.js //主进程渲染文件
├── renderer.js //渲染进程文件
└── index.html //主入口文件
&lt;/code>&lt;/pre>&lt;p>&lt;code>package.json&lt;/code>的格式和  Node  的完全一致，并且那个被  &lt;code>main&lt;/code>  字段声明的脚本文件是你的应用的启动脚本，它运行在主进程上。你应用里的  &lt;code>package.json&lt;/code>  看起来应该像：&lt;/p>
&lt;pre tabindex="0">&lt;code>{
  &amp;#34;name&amp;#34;    : &amp;#34;your-app&amp;#34;,
  &amp;#34;version&amp;#34; : &amp;#34;0.1.0&amp;#34;,
  &amp;#34;main&amp;#34;    : &amp;#34;main.js&amp;#34;
}
&lt;/code>&lt;/pre>&lt;p>&lt;strong>注意&lt;/strong>：如果  &lt;code>main&lt;/code>  字段没有在  &lt;code>package.json&lt;/code>  声明，Electron 会优先加载  &lt;code>index.js&lt;/code>。&lt;/p>
&lt;h3 id="主进程-1">主进程&lt;/h3>
&lt;p>&lt;code>main.js&lt;/code>  应该用于创建窗口和处理系统时间，一个典型的例子如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Created by apple on 16/6/3.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">electron&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;electron&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 用于控制应用生命周期
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">app&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">electron&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 用于创建本地窗口
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">BrowserWindow&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">electron&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//为Window对象创建一个全局的引用,否则可能被JavaScript的垃圾回收机制自动回收
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">win&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @function 创建窗口
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">createWindow&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 创建类似于浏览器的窗口
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">win&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">BrowserWindow&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">800&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">600&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 加载应用入口文件,本文件为测试文件,因此加载的是测试
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">win&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">loadURL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`file://&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">__dirname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">/dist/app.html`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 启动调试工具,如果是开发环境下则不需要开启
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">win&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">webContents&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">openDevTools&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 设置窗口关闭事件
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">win&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;closed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//因为上面是设置了一个全局引用,因此这里需要对该对象解除引用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//如果你的应用支持打开多窗口,可以把所有的引用存入一个数组中,然后在这里动态删除
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">win&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 在基本环境准备好之后的回调
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ready&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">createWindow&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 所有窗口都关闭之后的回调
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;window-all-closed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//在OSX中经常是用户虽然关闭了主窗口,但是仍然希望使用Menu Bar,因此这里不进行强行关闭
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// On OS X it is common for applications and their menu bar
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// to stay active until the user quits explicitly with Cmd + Q
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">platform&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="s2">&amp;#34;darwin&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">quit&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 应用被重新激活之后的回调
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;activate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 在Dock中的Menu Bar被点击之后重新激活应用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">win&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">createWindow&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="入口文件">入口文件&lt;/h3>
&lt;p>最后，你想展示的  &lt;code>index.html&lt;/code> ：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Hello World!&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Hello World!&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- All of the Node.js APIs are available in this renderer process. --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> We are using node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">versions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">node&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ,     Chromium
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">versions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">chrome&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ,     and Electron
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">versions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">electron&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// You can also require other files to run in this process
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;./renderer.js&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="渲染进程-1">渲染进程&lt;/h3>
&lt;p>实际上，在 Electron 项目中，关于 Hot-Reload 等等配置都和笔者在&lt;a href="https://segmentfault.com/a/1190000005122575" target="_blank" rel="noopener">我的 Webpack 套装&lt;/a>中提及的一系列配置方案。关于这方面的具体实践可以参考笔者&lt;a href="https://segmentfault.com/a/1190000005640243" target="_blank" rel="noopener">ElectronOCR&lt;/a>这个实战项目。&lt;/p></description></item><item><title>内存调优</title><link>https://ng-tech.icu/books/web-series/4.%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91/electron/%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/web-series/4.%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91/electron/%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/</guid><description>&lt;h1 id="electron-内存调优">Electron 内存调优&lt;/h1>
&lt;h1 id="links">Links&lt;/h1>
&lt;ul>
&lt;li>DEBUGGING ELECTRON MEMORY USAGE &lt;a href="http://seenaburns.com/debugging-electron-memory-usage/" target="_blank" rel="noopener">http://seenaburns.com/debugging-electron-memory-usage/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>事件处理</title><link>https://ng-tech.icu/books/web-series/4.%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91/electron/%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/web-series/4.%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91/electron/%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/</guid><description>&lt;p># Event&lt;/p>
&lt;p>## Online/Offline Detection&lt;/p>
&lt;p>使用标准  HTML5 APIs  可以实现在线和离线事件的探测，就像以下例子：&lt;/p>
&lt;p>&lt;em>main.js&lt;/em>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-js " data-lang="js ">var app = require(&amp;#34;app&amp;#34;);
var BrowserWindow = require(&amp;#34;browser-window&amp;#34;);
var onlineStatusWindow;
app.on(&amp;#34;ready&amp;#34;, function() {
onlineStatusWindow = new BrowserWindow({ width: 0, height: 0, show: false });
onlineStatusWindow.loadUrl(&amp;#34;file://&amp;#34; + __dirname + &amp;#34;/online-status.html&amp;#34;);
});
&lt;/code>&lt;/pre>&lt;p>&lt;em>online-status.html&lt;/em>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- html" data-lang=" html">&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;script&amp;gt;
      var alertOnlineStatus = function() {
        window.alert(navigator.onLine ? &amp;#39;online&amp;#39; : &amp;#39;offline&amp;#39;);
      };
      window.addEventListener(&amp;#39;online&amp;#39;,  alertOnlineStatus);
      window.addEventListener(&amp;#39;offline&amp;#39;,  alertOnlineStatus);
      alertOnlineStatus();
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;p>也会有人想要在主进程也有回应这些事件的实例。然后主进程没有  &lt;code>navigator&lt;/code>  对象因此不能直接探测在线还是离线。使用  Electron  的进程间通讯工具，事件就可以在主进程被使，就像下面的例子：&lt;/p>
&lt;p>&lt;em>main.js&lt;/em>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">var app = require(&amp;#39;app&amp;#39;);
var ipc = require(&amp;#39;ipc&amp;#39;);
var BrowserWindow = require(&amp;#39;browser-window&amp;#39;);
var onlineStatusWindow;
app.on(&amp;#39;ready&amp;#39;, function() {
  onlineStatusWindow = new BrowserWindow({ width: 0, height: 0, show: false });
  onlineStatusWindow.loadUrl(&amp;#39;file://&amp;#39; + __dirname + &amp;#39;/online-status.html&amp;#39;);
});
ipc.on(&amp;#39;online-status-changed&amp;#39;, function(event, status) {
  console.log(status);
});
&lt;/code>&lt;/pre>&lt;p>&lt;em>online-status.html&lt;/em>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;script&amp;gt;
      var ipc = require(&amp;#39;ipc&amp;#39;);
      var updateOnlineStatus = function() {
        ipc.send(&amp;#39;online-status-changed&amp;#39;, navigator.onLine ? &amp;#39;online&amp;#39; : &amp;#39;offline&amp;#39;);
      };
      window.addEventListener(&amp;#39;online&amp;#39;,  updateOnlineStatus);
      window.addEventListener(&amp;#39;offline&amp;#39;,  updateOnlineStatus);
      updateOnlineStatus();
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;p># SysProc&lt;/p>
&lt;p>## IPC&lt;/p>
&lt;p>在主进程使用&lt;code>ipc&lt;/code>模块时,&lt;code>ipc&lt;/code>负责捕获从渲染进程(网页)发送的同步或者是异步消息.&lt;/p>
&lt;p>发送消息&lt;/p>
&lt;p>主进程也可以向渲染进程发送信息,具体可以看&lt;a href="https://wangdashuaihenshuai.gitbooks.io/electron-zh-document/content/api/web-contents.md#webcontentssendchannel-args" target="_blank" rel="noopener">WebContents.send&lt;/a>.&lt;/p>
&lt;p>-  当发送消息的时候,事件名字为&amp;rsquo;channel&amp;rsquo;.
-  回复一个同步消息的时候,你需要使用&lt;code>event.returnValue&lt;/code>
-  回复一个异步消息的时候,使用&lt;code>event.sender.send(...)&lt;/code>&lt;/p>
&lt;p>下面是一个主进程和渲染进程的通信例子.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">// 在主进程中.
var ipc = require(&amp;#39;ipc&amp;#39;);
ipc.on(&amp;#39;asynchronous-message&amp;#39;, function(event, arg) {
  console.log(arg);  // 打印 &amp;#34;ping&amp;#34;
  event.sender.send(&amp;#39;asynchronous-reply&amp;#39;, &amp;#39;pong&amp;#39;);
});
ipc.on(&amp;#39;synchronous-message&amp;#39;, function(event, arg) {
  console.log(arg);  // 打印 &amp;#34;ping&amp;#34;
  event.returnValue = &amp;#39;pong&amp;#39;;
});
// 在渲染进程(网页).
var ipc = require(&amp;#39;ipc&amp;#39;);
console.log(ipc.sendSync(&amp;#39;synchronous-message&amp;#39;, &amp;#39;ping&amp;#39;)); // 打印 &amp;#34;pong&amp;#34;
ipc.on(&amp;#39;asynchronous-reply&amp;#39;, function(arg) {
  console.log(arg); // 打印 &amp;#34;pong&amp;#34;
});
ipc.send(&amp;#39;asynchronous-message&amp;#39;, &amp;#39;ping&amp;#39;);
&lt;/code>&lt;/pre>&lt;p>监听消息&lt;/p>
&lt;p>&lt;code>ipc&lt;/code>模块有下列几种方法来监听事件.&lt;/p>
&lt;p>&lt;code>ipc.on(channel, callback)&lt;/code>&lt;/p>
&lt;p>- &lt;code>channel&lt;/code> -  事件名称.
- &lt;code>callback&lt;/code> -  回调函数.&lt;/p>
&lt;p>当事件发生的时候,会传入&lt;code>callback&lt;/code> &lt;code>event&lt;/code>和&lt;code>arg&lt;/code>参数.&lt;/p>
&lt;p>IPC  事件&lt;/p>
&lt;p>传入&lt;code>callback&lt;/code>的&lt;code>event&lt;/code>对象含有下列方法.&lt;/p>
&lt;p>- &lt;code>Event.returnValue&lt;/code>&lt;/p>
&lt;p>在同步消息中,设置这个值将会被返回.&lt;/p>
&lt;p>&lt;code>Event.sender&lt;/code>&lt;/p>
&lt;p>返回一个可以发送消息的&lt;code>WebContents&lt;/code>.&lt;/p>
&lt;p>&lt;code>Event.sender.send(channel[.arg1][,arg2][,...])&lt;/code>&lt;/p>
&lt;p>- &lt;code>channel&lt;/code> -  事件名称.
- &lt;code>arg&lt;/code> (选用)&lt;/p>
&lt;p>这个可以发送一个可带参数的异步消息回渲染进程.&lt;/p>
&lt;p>## Shell&lt;/p>
&lt;p>&lt;code>shell&lt;/code>  模块提供了集成其他桌面客户端的关联功能.&lt;/p>
&lt;p>在用户默认浏览器中打开 URL 的示例:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">var shell = require(&amp;#39;shell&amp;#39;);
shell.openExternal(&amp;#39;https://github.com&amp;#39;);
&lt;/code>&lt;/pre>&lt;p>Methods&lt;/p>
&lt;p>&lt;code>shell&lt;/code>  模块包含以下函数:&lt;/p>
&lt;p>&lt;code>shell.showItemInFolder(fullPath)&lt;/code>&lt;/p>
&lt;p>- &lt;code>fullPath&lt;/code> String&lt;/p>
&lt;p>打开文件所在文件夹,一般情况下还会选中它.&lt;/p>
&lt;p>&lt;code>shell.openItem(fullPath)&lt;/code>&lt;/p>
&lt;p>- &lt;code>fullPath&lt;/code> String&lt;/p>
&lt;p>以默认打开方式打开文件.&lt;/p>
&lt;p>&lt;code>shell.openExternal(url)&lt;/code>&lt;/p>
&lt;p>- &lt;code>url&lt;/code> String&lt;/p>
&lt;p>以系统默认设置打开外部协议.(例如,mailto: somebody@somewhere.io 会打开用户默认的邮件客户端)&lt;/p>
&lt;p>&lt;code>shell.moveItemToTrash(fullPath)&lt;/code>&lt;/p>
&lt;p>- &lt;code>fullPath&lt;/code> String&lt;/p>
&lt;p>删除指定路径文件,并返回此操作的状态值(boolean 类型).&lt;/p>
&lt;p>&lt;code>shell.beep()&lt;/code>&lt;/p>
&lt;p>播放  beep  声音.&lt;/p>
&lt;p># Extension&lt;/p>
&lt;p>## &lt;a href="https://github.com/jiahaog/nativefier" target="_blank" rel="noopener">nativefier&lt;/a>:Wrap any web page natively&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://raw.githubusercontent.com/jiahaog/nativefier/master/screenshots/Dock%20Screenshot.png" alt="Dock Screenshot" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>You want to make a native wrapper for Google Maps (or any web page).&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">$ nativefier maps.google.com
&lt;/code>&lt;/pre>&lt;p>You&amp;rsquo;re done.&lt;/p>
&lt;p>- Introduction&lt;/p>
&lt;p>Nativefier is a command line tool that allows you to easily create a desktop application for any web site with succinct and minimal configuration. Apps are wrapped by &lt;a href="http://electron.atom.io" target="_blank" rel="noopener">Electron&lt;/a> in an OS executable (&lt;code>.app&lt;/code>, &lt;code>.exe&lt;/code>, etc.) for use on Windows, OSX and Linux.&lt;/p>
&lt;p>I did this because I was tired of having to &lt;code>⌘-tab&lt;/code> or &lt;code>alt-tab&lt;/code> to my browser and then search through the numerous open tabs when I was using &lt;a href="http://messenger.com" target="_blank" rel="noopener">Facebook Messenger&lt;/a> or &lt;a href="http://web.whatsapp.com" target="_blank" rel="noopener">Whatsapp Web&lt;/a>.&lt;/p>
&lt;p>View the changelog &lt;a href="https://github.com/jiahaog/nativefier/blob/master/History.md" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;p>- Installation&lt;/p>
&lt;p>With &lt;a href="https://nodejs.org/" target="_blank" rel="noopener">Node.js&lt;/a> installed,&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" "># for use from the command line
$ npm install nativefier -g
&lt;/code>&lt;/pre>&lt;p>- Usage&lt;/p>
&lt;p>Creating a native desktop app for &lt;a href="http://medium.com" target="_blank" rel="noopener">medium.com&lt;/a>:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">$ nativefier &amp;#34;http://medium.com&amp;#34;
&lt;/code>&lt;/pre>&lt;p>Nativefier will intelligently attempt to determine the app name, your OS and processor architecture, among other options. If desired, the app name or other options can be overwritten by specifying the &lt;code>--app-name &amp;quot;Medium&amp;quot;&lt;/code> as part of the command line options, as such.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">$ nativefier --app-name &amp;#34;Some Awesome App&amp;#34; &amp;#34;http://medium.com&amp;#34;
&lt;/code>&lt;/pre>&lt;p>&lt;strong>For Windows Users:&lt;/strong> Take note that the application menu is automatically hidden by default, you can press &lt;code>alt&lt;/code> on your keyboard to access it.&lt;/p>
&lt;p>- Options&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">$ nativefier [options] &amp;lt;targetUrl&amp;gt; [dest]
&lt;/code>&lt;/pre>&lt;p>Command line options are listed below.&lt;/p>
&lt;p>Target Url&lt;/p>
&lt;p>The url to point the application at.&lt;/p>
&lt;p>[dest]&lt;/p>
&lt;p>Specifies the destination directory to build the app to, defaults to the current working directory.&lt;/p>
&lt;p>Help&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">-h, --help
&lt;/code>&lt;/pre>&lt;p>Prints the usage information.&lt;/p>
&lt;p>[app-name]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">-n, --app-name &amp;lt;value&amp;gt;
&lt;/code>&lt;/pre>&lt;p>The name of the application, which will affect strings in titles and the icon.&lt;/p>
&lt;p>[platform]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">-p, --platform &amp;lt;value&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Automatically determined based on the current OS. Can be overwritten by specifying either &lt;code>linux&lt;/code>, &lt;code>win32&lt;/code>, or &lt;code>darwin&lt;/code>.&lt;/p>
&lt;p>[arch]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">-a, --arch &amp;lt;value&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Processor architecture, automatically determined based on the current OS. Can be overwritten by specifying either &lt;code>ia32&lt;/code> or &lt;code>x64&lt;/code>.&lt;/p>
&lt;p>[electron-version]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">-e, --electron-version &amp;lt;value&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Electron version without the &lt;code>v&lt;/code>, see &lt;a href="https://github.com/atom/electron/releases" target="_blank" rel="noopener">https://github.com/atom/electron/releases&lt;/a>.&lt;/p>
&lt;p>[overwrite]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">-o, --overwrite
&lt;/code>&lt;/pre>&lt;p>Specifies if the destination directory should be overwritten.&lt;/p>
&lt;p>[conceal]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">-c, --conceal
&lt;/code>&lt;/pre>&lt;p>Specifies if the source code within the nativefied app should be packaged into an archive, defaults to false, &lt;a href="http://electron.atom.io/docs/v0.36.0/tutorial/application-packaging/" target="_blank" rel="noopener">read more&lt;/a>.&lt;/p>
&lt;p>[icon]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">-i, --icon &amp;lt;path&amp;gt;
&lt;/code>&lt;/pre>&lt;p>On OSX, the icon parameter should be a path to an &lt;code>.icns&lt;/code> file. &lt;a href="https://iconverticons.com/online/" target="_blank" rel="noopener">iConvertIcons&lt;/a> can be used to convert &lt;code>.pngs&lt;/code>, though it can be quite cumbersome.&lt;/p>
&lt;p>To retrieve the &lt;code>.icns&lt;/code> file from the downloaded file, extract it first and press File &amp;gt; Get Info. Then select the icon in the top left corner of the info window and press &lt;code>⌘-C&lt;/code>. Open Preview and press File &amp;gt; New from clipboard and save the &lt;code>.icns&lt;/code> file. It took me a while to figure out how to do that and question why a &lt;code>.icns&lt;/code> file was not simply provided in the downloaded archive.&lt;/p>
&lt;p>[badge]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">-b, --badge
&lt;/code>&lt;/pre>&lt;p>On OSX, it is desired for the App dock icon to show a badge on the receipt of a desktop notification.&lt;/p>
&lt;p>There is no known way to intercept and set an event listener for a desktop notification triggered by the [&lt;code>](https://github.com/atom/electron/blob/master/docs/api/web-view-tag.md), the current workaround is to listen for `document.title` changes within the &lt;/code>. Typical web apps like Facebook Messenger will change the &lt;code>document.title&lt;/code> to &amp;ldquo;John sent a message&amp;hellip;&amp;rdquo; on the receipt of a desktop notification, and this is what we will listen for to trigger the app badge on the dock.&lt;/p>
&lt;p>However, this would cause issues when the command line argument &lt;code>target&lt;/code> is set to a external page which is not a single page app, because clicking on hyperlinks and switching pages would naturally change the &lt;code>document.title&lt;/code>. Hence, &lt;code>--badge&lt;/code> is an optional command argument that can be set by the user if the side effect of this workaround is understood.&lt;/p>
&lt;p>[counter]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">--counter
&lt;/code>&lt;/pre>&lt;p>Use a counter that persists even with window focus for the application badge for sites that use an &amp;ldquo;(X)&amp;rdquo; format counter in the page title (i.e. Gmail).  Same limitations as the badge option (above).&lt;/p>
&lt;p>[width]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">--width &amp;lt;value&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Width of the packaged application, defaults to &lt;code>1280px&lt;/code>.&lt;/p>
&lt;p>[height]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">--height &amp;lt;value&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Height of the packaged application, defaults to &lt;code>800px&lt;/code>.&lt;/p>
&lt;p>[show-menu-bar]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">-m, --show-menu-bar
&lt;/code>&lt;/pre>&lt;p>Specifies if the menu bar should be shown.&lt;/p>
&lt;p>[user-agent]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">-u, --user-agent &amp;lt;value&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Set the user agent to run the created app with.&lt;/p>
&lt;p>[honest]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">--honest
&lt;/code>&lt;/pre>&lt;p>By default, nativefier uses a preset user agent string for your OS and masquerades as a regular Google Chrome browser, so that sites like WhatsApp Web will not say that the current browser is unsupported.&lt;/p>
&lt;p>If this flag is passed, it will not override the user agent.&lt;/p>
&lt;p>[insecure]&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">--insecure
&lt;/code>&lt;/pre>&lt;p>Forces the packaged app to ignore certificate errors.&lt;/p></description></item><item><title>应用发布</title><link>https://ng-tech.icu/books/web-series/4.%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91/electron/%E5%BA%94%E7%94%A8%E5%8F%91%E5%B8%83/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/web-series/4.%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91/electron/%E5%BA%94%E7%94%A8%E5%8F%91%E5%B8%83/</guid><description>&lt;h1 id="electron-应用发布">Electron 应用发布&lt;/h1>
&lt;p>## Release&lt;/p>
&lt;h2 id="using-native-node-modules">Using Native Node Modules&lt;/h2>
&lt;p>The native Node modules are supported by Electron, but since Electron is using a different V8 version from official Node, you have to manually specify the location of Electron&amp;rsquo;s headers when building native modules.&lt;/p>
&lt;p>Native modules might break when Node starts using a new version of V8. To make sure the module you&amp;rsquo;re interested in will work with Electron, you should check if it supports the internal Node version used by Electron. You can check what version of Node is used in Electron by looking it up in the releases page or by using process.version (see Quick Start for example).
Consider using NAN for your own modules, since it makes it easier to support multiple versions of Node. It&amp;rsquo;s also helpful for porting old modules to newer versions of Node so they can work with Electron.&lt;/p>
&lt;h3 id="the-easy-way">The Easy Way&lt;/h3>
&lt;p>The most straightforward way to rebuild native modules is via the &lt;a href="https://github.com/paulcbetts/electron-rebuild" target="_blank" rel="noopener">&lt;code>electron-rebuild&lt;/code>&lt;/a> package, which handles the manual steps of downloading headers and building native modules:&lt;/p>
&lt;pre tabindex="0">&lt;code>npm install --save-dev electron-rebuild
# Every time you run &amp;#34;npm install&amp;#34;, run this
./node_modules/.bin/electron-rebuild
# On Windows if you have trouble, try:
.\node_modules\.bin\electron-rebuild.cmd
&lt;/code>&lt;/pre>&lt;h3 id="httpsgithubcomelectronelectronblobmasterdocstutorialusing-native-node-modulesmdthe-npm-waythe-npm-way">&lt;a href="https://github.com/electron/electron/blob/master/docs/tutorial/using-native-node-modules.md#the-npm-way" target="_blank" rel="noopener">&lt;/a>The npm Way&lt;/h3>
&lt;p>You can also use &lt;code>npm&lt;/code> to install modules. The steps are exactly the same with Node modules, except that you need to setup some environment variables:&lt;/p>
&lt;pre tabindex="0">&lt;code>export npm_config_disturl=https://atom.io/download/atom-shell
export npm_config_target=0.33.1
export npm_config_arch=x64
export npm_config_runtime=electron
HOME=~/.electron-gyp npm install module-name
&lt;/code>&lt;/pre>&lt;h3 id="httpsgithubcomelectronelectronblobmasterdocstutorialusing-native-node-modulesmdthe-node-gyp-waythe-node-gyp-way">&lt;a href="https://github.com/electron/electron/blob/master/docs/tutorial/using-native-node-modules.md#the-node-gyp-way" target="_blank" rel="noopener">&lt;/a>The node-gyp Way&lt;/h3>
&lt;p>To build Node modules with headers of Electron, you need to tell &lt;code>node-gyp&lt;/code> where to download headers and which version to use:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cd /path-to-module/
$ HOME=~/.electron-gyp node-gyp rebuild --target=0.29.1 --arch=x64 --dist-url=https://atom.io/download/atom-shell
&lt;/code>&lt;/pre>&lt;p>The &lt;code>HOME=~/.electron-gyp&lt;/code> changes where to find development headers. The &lt;code>--target=0.29.1&lt;/code> is version of Electron. The &lt;code>--dist-url=...&lt;/code> specifies where to download the headers. The &lt;code>--arch=x64&lt;/code> says the module is built for 64bit system.&lt;/p>
&lt;p>### Executable File&lt;/p>
&lt;p>为了使用 Electron 部署你的应用程序，你存放应用程序的文件夹需要叫做  &lt;code>app&lt;/code>  并且需要放在  Electron  的资源文件夹下(在  OS X  中是指  &lt;code>Electron.app/Contents/Resources/&lt;/code>，在  Linux  和  Windows  中是指  &lt;code>resources/&lt;/code>)  就像这样：&lt;/p>
&lt;p>在  OS X  中:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">electron/Electron.app/Contents/Resources/app/
├── package.json
├── main.js
└── index.html
&lt;/code>&lt;/pre>&lt;p>在  Windows  和  Linux  中:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">electron/resources/app
├── package.json
├── main.js
└── index.html
&lt;/code>&lt;/pre>&lt;p>然后运行  &lt;code>Electron.app&lt;/code> (或者  Linux  中的  &lt;code>electron&lt;/code>，Windows  中的  &lt;code>electron.exe&lt;/code>),  接着  Electron  就会以你的应用程序的方式启动。&lt;code>electron&lt;/code>  文件夹将被部署并可以分发给最终的使用者。&lt;/p>
&lt;p>### Package&lt;/p>
&lt;p>除了通过拷贝所有的资源文件来分发你的应用程序之外，你可以可以通过打包你的应用程序为一个  &lt;a href="https://github.com/atom/asar" target="_blank" rel="noopener">asar&lt;/a>  库文件以避免暴露你的源代码。&lt;/p>
&lt;p>为了使用一个  &lt;code>asar&lt;/code>  库文件代替  &lt;code>app&lt;/code>  文件夹，你需要修改这个库文件的名字为  &lt;code>app.asar&lt;/code> ，  然后将其放到  Electron  的资源文件夹下，然后  Electron  就会试图读取这个库文件并从中启动。  如下所示：&lt;/p>
&lt;p>在  OS X  中:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">electron/Electron.app/Contents/Resources/
└── app.asar
&lt;/code>&lt;/pre>&lt;p>在  Windows  和  Linux  中:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language- " data-lang=" ">electron/resources/
└── app.asar
&lt;/code>&lt;/pre>&lt;p>更多的细节请见  &lt;a href="https://github.com/atom/electron/blob/master/docs-translations/zh-CN/tutorial/application-packaging.md" target="_blank" rel="noopener">Application packaging&lt;/a>.&lt;/p>
&lt;h3 id="electron-packagerhttpsgithubcomelectron-userlandelectron-packager根据不同平台打包成app-或者exe">&lt;a href="https://github.com/electron-userland/electron-packager" target="_blank" rel="noopener">Electron Packager&lt;/a>:根据不同平台打包成.app 或者.exe&lt;/h3>
&lt;p>Electron Packager is known to run on the following &lt;strong>host&lt;/strong> platforms:&lt;/p>
&lt;ul>
&lt;li>Windows (32/64 bit)&lt;/li>
&lt;li>OS X&lt;/li>
&lt;li>Linux (x86/x86_64)&lt;/li>
&lt;/ul>
&lt;p>It generates executables/bundles for the following &lt;strong>target&lt;/strong> platforms:&lt;/p>
&lt;ul>
&lt;li>Windows (also known as &lt;code>win32&lt;/code>, for both 32/64 bit)&lt;/li>
&lt;li>OS X (also known as &lt;code>darwin&lt;/code>) / &lt;a href="http://electron.atom.io/docs/v0.36.0/tutorial/mac-app-store-submission-guide/" target="_blank" rel="noopener">Mac App Store&lt;/a> (also known as &lt;code>mas&lt;/code>)*&lt;/li>
&lt;li>Linux (for both x86/x86_64)&lt;/li>
&lt;/ul>
&lt;p>Running electron-packager from the command line has this basic form:&lt;/p>
&lt;pre tabindex="0">&lt;code>electron-packager &amp;lt;sourcedir&amp;gt; &amp;lt;appname&amp;gt; --platform=&amp;lt;platform&amp;gt; --arch=&amp;lt;arch&amp;gt; [optional flags...]
&lt;/code>&lt;/pre>&lt;p>This will:&lt;/p>
&lt;ul>
&lt;li>Find or download the correct release of Electron&lt;/li>
&lt;li>Use that version of Electron to create a app in &lt;code>/--&lt;/code> &lt;em>(this can be customized via an optional flag)&lt;/em>&lt;/li>
&lt;/ul></description></item></channel></rss>