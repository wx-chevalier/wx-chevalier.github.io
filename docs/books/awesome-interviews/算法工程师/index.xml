<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>算法工程师 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-interviews/%E7%AE%97%E6%B3%95%E5%B7%A5%E7%A8%8B%E5%B8%88/</link><atom:link href="https://ng-tech.icu/books/awesome-interviews/%E7%AE%97%E6%B3%95%E5%B7%A5%E7%A8%8B%E5%B8%88/index.xml" rel="self" type="application/rss+xml"/><description>算法工程师</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>算法工程师</title><link>https://ng-tech.icu/books/awesome-interviews/%E7%AE%97%E6%B3%95%E5%B7%A5%E7%A8%8B%E5%B8%88/</link></image><item><title>机器学习面试题</title><link>https://ng-tech.icu/books/awesome-interviews/%E7%AE%97%E6%B3%95%E5%B7%A5%E7%A8%8B%E5%B8%88/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-interviews/%E7%AE%97%E6%B3%95%E5%B7%A5%E7%A8%8B%E5%B8%88/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>&lt;blockquote>
&lt;p>参考答案请查阅《&lt;a href="https://github.com/wx-chevalier/MachineLearning-Notes?q=" target="_blank" rel="noopener">MachineLearning-Notes&lt;/a>》&lt;/p>
&lt;/blockquote>
&lt;h2 id="supervised-machine-learning">Supervised machine learning&lt;/h2>
&lt;p>&lt;strong>What is supervised machine learning? 👶&lt;/strong>&lt;/p>
&lt;p>A case when we have both features (the matrix X) and the labels (the vector y)&lt;/p>
&lt;br/>
&lt;h2 id="linear-regression">Linear regression&lt;/h2>
&lt;p>&lt;strong>What is regression? Which models can you use to solve a regression problem? 👶&lt;/strong>&lt;/p>
&lt;p>Regression is a part of supervised ML. Regression models investigate the relationship between a dependent (target) and independent variable (s) (predictor).
Here are some common regression models:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Linear Regression&lt;/em> establishes a linear relationship between target and predictor (s). It predicts a numeric value and has a shape of a straight line.&lt;/li>
&lt;li>&lt;em>Logistic Regression&lt;/em> solves classification problem when target is categorical. It searches for the probability of an event, predicts a value from 0 to 1.&lt;/li>
&lt;li>&lt;em>Polynomial Regression&lt;/em> has a regression equation with the power of independent variable more than 1. It is a curve that fits into the data points.&lt;/li>
&lt;li>&lt;em>Ridge Regression&lt;/em> helps when predictors are highly correlated (multicollinearity problem). It penalizes the squares of regression coefficients but doesn’t allow to reach zeros (uses l2 regularization).&lt;/li>
&lt;li>&lt;em>Lasso Regression&lt;/em> penalizes the absolute values of regression coefficients and allow reach absolute zero for some coefficient (allow feature selection).&lt;/li>
&lt;/ul>
&lt;br/>
&lt;p>&lt;strong>What is linear regression? When do we use it? 👶&lt;/strong>&lt;/p>
&lt;p>Linear regression is a model that assumes a linear relationship between the input variables (X) and the single output variable (y).&lt;/p>
&lt;p>With a simple equation:&lt;/p>
&lt;pre tabindex="0">&lt;code>y = B0 + B1*x1 + ... + Bn * xN
&lt;/code>&lt;/pre>&lt;p>B is regression coefficients, x values are the independent (explanatory) variables and y is dependent variable.&lt;/p>
&lt;p>The case of one explanatory variable is called simple linear regression. For more than one explanatory variable, the process is called multiple linear regression.&lt;/p>
&lt;p>Simple linear regression:&lt;/p>
&lt;pre tabindex="0">&lt;code>y = B0 + B1*x1
&lt;/code>&lt;/pre>&lt;p>Multiple linear regression:&lt;/p>
&lt;pre tabindex="0">&lt;code>y = B0 + B1*x1 + ... + Bn * xN
&lt;/code>&lt;/pre>&lt;br/>
&lt;p>&lt;strong>What’s the normal distribution? Why do we care about it? 👶&lt;/strong>&lt;/p>
&lt;p>The normal distribution is a continuous probability distribution whose probability density function takes the following formula:
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://mathworld.wolfram.com/images/equations/NormalDistribution/NumberedEquation1.gif" alt="formula" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>where μ is the mean and σ is the standard deviation of the distribution.&lt;/p>
&lt;p>The normal distribution derives its importance from the &lt;strong>Central Limit Theorem&lt;/strong>, which states that if we draw a large enough number of samples, their mean will follow a normal distribution regardless of the initial distribution of the sample, i.e &lt;strong>the distribution of the mean of the samples is normal&lt;/strong>. It is important that each sample is independent from the other.&lt;/p>
&lt;p>This is powerful because it helps us study processes whose population distribution is unknown to us.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do we check if a variable follows the normal distribution? ‍⭐️&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Plot a histogram out of the sampled data. If you can fit the bell-shaped &amp;ldquo;normal&amp;rdquo; curve to the histogram, then the hypothesis that the underlying random variable follows the normal distribution can not be rejected.&lt;/li>
&lt;li>Check Skewness and Kurtosis of the sampled data. Zero-skewness and zero-kurtosis are typical for a normal distribution, so the farther away from 0, the more non-normal the distribution.&lt;/li>
&lt;li>Use Kolmogorov-Smirnov or/and Shapiro-Wilk tests for normality. They take into account both Skewness and Kurtosis simultaneously.&lt;/li>
&lt;li>Check for Quantile-Quantile plot. It is a scatterplot created by plotting two sets of quantiles against one another. Normal Q-Q plot place the data points in a roughly straight line.&lt;/li>
&lt;/ol>
&lt;br/>
&lt;p>&lt;strong>What if we want to build a model for predicting prices? Are prices distributed normally? Do we need to do any pre-processing for prices? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are the methods for solving linear regression do you know? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is gradient descent? How does it work? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Gradient descent is an algorithm that uses calculus concept of gradient to try and reach local or global minima. It works by taking the negative of the gradient in a point of a given function, and updating that point repeatedly using the calculated negative gradient, until the algorithm reaches a local or global minimum, which will cause future iterations of the algorithm to return values that are equal or too close to the current point. It is widely used in machine learning applications.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is the normal equation? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Normal equations are equations obtained by setting equal to zero the partial derivatives of the sum of squared errors (least squares); normal equations allow one to estimate the parameters of a multiple linear regression.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is SGD  —  stochastic gradient descent? What’s the difference with the usual gradient descent? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Which metrics for evaluating regression models do you know? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are MSE and RMSE? 👶&lt;/strong>&lt;/p>
&lt;p>MSE stands for &lt;strong>M&lt;/strong>ean &lt;strong>S&lt;/strong>quare &lt;strong>E&lt;/strong>rror while RMSE stands for &lt;strong>R&lt;/strong>oot &lt;strong>M&lt;/strong>ean &lt;strong>S&lt;/strong>quare &lt;strong>E&lt;/strong>rror. They are metrics with which we can evaluate models.&lt;/p>
&lt;br/>
&lt;h2 id="validation">Validation&lt;/h2>
&lt;p>&lt;strong>What is overfitting? 👶&lt;/strong>&lt;/p>
&lt;p>When your model perform very well on your training set but can&amp;rsquo;t generalize the test set, because it adjusted a lot to the training set.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How to validate your models? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Why do we need to split our data into three parts: train, validation, and test? 👶&lt;/strong>&lt;/p>
&lt;p>The training set is used to fit the model, i.e. to train the model with the data. The validation set is then used to provide an unbiased evaluation of a model while fine-tuning hyperparameters. This improves the generalization of the model. Finally, a test data set which the model has never &amp;ldquo;seen&amp;rdquo; before should be used for the final evaluation of the model. This allows for an unbiased evaluation of the model. The evaluation should never be performed on the same data that is used for training. Otherwise the model performance would not be representative.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Can you explain how cross-validation works? 👶&lt;/strong>&lt;/p>
&lt;p>Cross-validation is the process to separate your total training set into two subsets: training and validation set, and evaluate your model to choose the hyperparameters. But you do this process iteratively, selecting differents training and validation set, in order to reduce the bias that you would have by selecting only one validation set.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is K-fold cross-validation? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do we choose K in K-fold cross-validation? What’s your favorite K? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;h2 id="classification">Classification&lt;/h2>
&lt;p>&lt;strong>What is classification? Which models would you use to solve a classification problem? 👶&lt;/strong>&lt;/p>
&lt;p>Classification problems are problems in which our prediction space is discrete, i.e. there is a finite number of values the output variable can be. Some models which can be used to solve classification problems are: logistic regression, decision tree, random forests, multi-layer perceptron, one-vs-all, amongst others.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is logistic regression? When do we need to use it? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Is logistic regression a linear model? Why? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is sigmoid? What does it do? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do we evaluate classification models? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is accuracy? 👶&lt;/strong>&lt;/p>
&lt;p>Accuracy is a metric for evaluating classification models. It is calculated by dividing the number of correct predictions by the number of total predictions.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Is accuracy always a good metric? 👶&lt;/strong>&lt;/p>
&lt;p>Accuracy is not a good performance metric when there is imbalance in the dataset. For example, in binary classification with 95% of A class and 5% of B class, prediction accuracy can be 95%. In case of imbalance dataset, we need to choose Precision, recall, or F1 Score depending on the problem we are trying to solve.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is the confusion table? What are the cells in this table? 👶&lt;/strong>&lt;/p>
&lt;p>Confusion table (or confusion matrix) shows how many True positives (TP), True Negative (TN), False Positive (FP) and False Negative (FN) model has made.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:center">Actual&lt;/th>
&lt;th style="text-align:center">Actual&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">Positive (1)&lt;/td>
&lt;td style="text-align:center">Negative (0)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Predicted&lt;/td>
&lt;td style="text-align:center">Positive (1)&lt;/td>
&lt;td style="text-align:center">TP&lt;/td>
&lt;td style="text-align:center">FP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Predicted&lt;/td>
&lt;td style="text-align:center">Negative (0)&lt;/td>
&lt;td style="text-align:center">FN&lt;/td>
&lt;td style="text-align:center">TN&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>True Positives (TP): When the actual class of the observation is 1 (True) and the prediction is 1 (True)&lt;/li>
&lt;li>True Negative (TN): When the actual class of the observation is 0 (False) and the prediction is 0 (False)&lt;/li>
&lt;li>False Positive (FP): When the actual class of the observation is 0 (False) and the prediction is 1 (True)&lt;/li>
&lt;li>False Negative (FN): When the actual class of the observation is 1 (True) and the prediction is 0 (False)&lt;/li>
&lt;/ul>
&lt;p>Most of the performance metrics for classification models are based on the values of the confusion matrix.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are precision, recall, and F1-score? 👶&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Precision and recall are classification evaluation metrics:&lt;/li>
&lt;li>P = TP / (TP + FP) and R = TP / (TP + FN).&lt;/li>
&lt;li>Where TP is true positives, FP is false positives and FN is false negatives&lt;/li>
&lt;li>In both cases the score of 1 is the best: we get no false positives or false negatives and only true positives.&lt;/li>
&lt;li>F1 is a combination of both precision and recall in one score:&lt;/li>
&lt;li>F1 = 2 * PR / (P + R).&lt;/li>
&lt;li>Max F score is 1 and min is 0, with 1 being the best.&lt;/li>
&lt;/ul>
&lt;br/>
&lt;p>&lt;strong>Precision-recall trade-off ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is the ROC curve? When to use it? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is AUC (AU ROC)? When to use it? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How to interpret the AU ROC score? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is the PR (precision-recall) curve? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is the area under the PR curve? Is it a useful metric? ‍⭐️I&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>In which cases AU PR is better than AU ROC? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What do we do with categorical variables? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Why do we need one-hot encoding? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;h2 id="regularization">Regularization&lt;/h2>
&lt;p>&lt;strong>What happens to our linear regression model if we have three columns in our data: x, y, z  —  and z is a sum of x and y? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What happens to our linear regression model if the column z in the data is a sum of columns x and y and some random noise? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is regularization? Why do we need it? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Which regularization techniques do you know? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What kind of regularization techniques are applicable to linear models? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How does L2 regularization look like in a linear model? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do we select the right regularization parameters? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What’s the effect of L2 regularization on the weights of a linear model? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How L1 regularization looks like in a linear model? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What’s the difference between L2 and L1 regularization? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Can we have both L1 and L2 regularization components in a linear model? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What’s the interpretation of the bias term in linear models? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do we interpret weights in linear models? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>If the variables are normalized, we can interpret weights in linear models like the importance of this variable in the predicted result.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>If a weight for one variable is higher than for another  —  can we say that this variable is more important? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>When do we need to perform feature normalization for linear models? When it’s okay not to do it? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;h2 id="feature-selection">Feature selection&lt;/h2>
&lt;p>&lt;strong>What is feature selection? Why do we need it? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Is feature selection important for linear models? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Which feature selection techniques do you know? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Can we use L1 regularization for feature selection? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Can we use L2 regularization for feature selection? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;h2 id="decision-trees">Decision trees&lt;/h2>
&lt;p>&lt;strong>What are the decision trees? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do we train decision trees? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are the main parameters of the decision tree model? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do we handle categorical variables in decision trees? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are the benefits of a single decision tree compared to more complex models? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How can we know which features are more important for the decision tree model? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;h2 id="random-forest">Random forest&lt;/h2>
&lt;p>&lt;strong>What is random forest? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Why do we need randomization in random forest? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are the main parameters of the random forest model? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do we select the depth of the trees in random forest? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do we know how many trees we need in random forest? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Is it easy to parallelize training of a random forest model? How can we do it? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are the potential problems with many large trees? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What if instead of finding the best split, we randomly select a few splits and just select the best from them. Will it work? 🚀&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What happens when we have correlated features in our data? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;h2 id="gradient-boosting">Gradient boosting&lt;/h2>
&lt;p>&lt;strong>What is gradient boosting trees? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What’s the difference between random forest and gradient boosting? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Is it possible to parallelize training of a gradient boosting model? How to do it? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Feature importance in gradient boosting trees  —  what are possible options? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Are there any differences between continuous and discrete variables when it comes to feature importance of gradient boosting models? 🚀&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are the main parameters in the gradient boosting model? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do you approach tuning parameters in XGBoost or LightGBM? 🚀&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do you select the number of trees in the gradient boosting model? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;h2 id="parameter-tuning">Parameter tuning&lt;/h2>
&lt;p>&lt;strong>Which parameter tuning strategies (in general) do you know? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What’s the difference between grid search parameter tuning strategy and random search? When to use one or another? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;h2 id="neural-networks">Neural networks&lt;/h2>
&lt;p>&lt;strong>What kind of problems neural nets can solve? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How does a usual fully-connected feed-forward neural network work? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Why do we need activation functions? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are the problems with sigmoid as an activation function? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is ReLU? How is it better than sigmoid or tanh? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How we can initialize the weights of a neural network? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What if we set all the weights of a neural network to 0? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What regularization techniques for neural nets do you know? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is dropout? Why is it useful? How does it work? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;h2 id="optimization-in-neural-networks">Optimization in neural networks&lt;/h2>
&lt;p>&lt;strong>What is backpropagation? How does it work? Why do we need it? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Which optimization techniques for training neural nets do you know? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do we use SGD (stochastic gradient descent) for training a neural net? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What’s the learning rate? 👶&lt;/strong>&lt;/p>
&lt;p>The learning rate is an important hyperparameter that controls how quickly the model is adapted to the problem during the training. It can be seen as the &amp;ldquo;step width&amp;rdquo; during the parameter updates, i.e. how far the weights are moved into the direction of the minimum of our optimization problem.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What happens when the learning rate is too large? Too small? 👶&lt;/strong>&lt;/p>
&lt;p>A large learning rate can accelerate the training. However, it is possible that we &amp;ldquo;shoot&amp;rdquo; too far and miss the minimum of the function that we want to optimize, which will not result in the best solution. On the other hand, training with a small learning rate takes more time but it is possible to find a more precise minimum. The downside can be that the solution is stuck in a local minimum, and the weights won&amp;rsquo;t update even if it is not the best possible global solution.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How to set the learning rate? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is Adam? What’s the main difference between Adam and SGD? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>When would you use Adam and when SGD? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Do we want to have a constant learning rate or we better change it throughout training? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do we decide when to stop training a neural net? 👶&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is model checkpointing? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Can you tell us how you approach the model training process? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;h2 id="neural-networks-for-computer-vision">Neural networks for computer vision&lt;/h2>
&lt;p>&lt;strong>How we can use neural nets for computer vision? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What’s a convolutional layer? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Why do we actually need convolutions? Can’t we use fully-connected layers for that? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What’s pooling in CNN? Why do we need it? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How does max pooling work? Are there other pooling techniques? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Are CNNs resistant to rotations? What happens to the predictions of a CNN if an image is rotated? 🚀&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are augmentations? Why do we need them? 👶What kind of augmentations do you know? 👶How to choose which augmentations to use? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What kind of CNN architectures for classification do you know? 🚀&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is transfer learning? How does it work? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is object detection? Do you know any architectures for that? 🚀&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is object segmentation? Do you know any architectures for that? 🚀&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;h2 id="text-classification">Text classification&lt;/h2>
&lt;p>&lt;strong>How can we use machine learning for text classification? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is bag of words? How we can use it for text classification? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Bag of Words is a representation of text that describes the occurrence of words within a document. The order or structure of the words is not considered. For text classification, we look at the histogram of the words within the text and consider each word count as a feature.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are the advantages and disadvantages of bag of words? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Advantages:&lt;/p>
&lt;ol>
&lt;li>Simple to understand and implement.&lt;/li>
&lt;/ol>
&lt;p>Disadvantages:&lt;/p>
&lt;ol>
&lt;li>The vocabulary requires careful design, most specifically in order to manage the size, which impacts the sparsity of the document representations.&lt;/li>
&lt;li>Sparse representations are harder to model both for computational reasons (space and time complexity) and also for information reasons&lt;/li>
&lt;li>Discarding word order ignores the context, and in turn meaning of words in the document. Context and meaning can offer a lot to the model, that if modeled could tell the difference between the same words differently arranged (“this is interesting” vs “is this interesting”), synonyms (“old bike” vs “used bike”).&lt;/li>
&lt;/ol>
&lt;br/>
&lt;p>&lt;strong>What are N-grams? How can we use them? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>The function to tokenize into consecutive sequences of words is called n-grams. It can be used to find out N most co-occurring words (how often word X is followed by word Y) in a given sentence.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How large should be N for our bag of words when using N-grams? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is TF-IDF? How is it useful for text classification? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Term Frequency (TF) is a scoring of the frequency of the word in the current document. Inverse Document Frequency(IDF) is a scoring of how rare the word is across documents. It is used in scenario where highy recurring words may not contain as much informational content
as the domain specific words. For example, words like “the” that are frequent across all documents therefore need to be less weighted. The Tf-IDF score highlights words that are distinct (contain useful information) in a given document.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Which model would you use for text classification with bag of words features? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Would you prefer gradient boosting trees model or logistic regression when doing text classification with bag of words? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are word embeddings? Why are they useful? Do you know Word2Vec? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Do you know any other ways to get word embeddings? 🚀&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>If you have a sentence with multiple words, you may need to combine multiple word embeddings into one. How would you do it? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Would you prefer gradient boosting trees model or logistic regression when doing text classification with embeddings? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How can you use neural nets for text classification? 🚀&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How can we use CNN for text classification? 🚀&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;h2 id="clustering">Clustering&lt;/h2>
&lt;p>&lt;strong>What is unsupervised learning? 👶&lt;/strong>&lt;/p>
&lt;p>Unsupervised learning aims to detect paterns in data where no labels are given.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is clustering? When do we need it? 👶&lt;/strong>&lt;/p>
&lt;p>Clustering algorithms group objects such that similar feature points are put into the same groups (clusters) and dissimilar feature points are put into different clusters.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Do you know how K-means works? ‍⭐️&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Partition points into k subsets.&lt;/li>
&lt;li>Compute the seed points as the new centroids of the clusters of the current partitioning.&lt;/li>
&lt;li>Assign each point to the cluster with the nearest seed point.&lt;/li>
&lt;li>Go back to step 2 or stop when the assignment does not change.&lt;/li>
&lt;/ol>
&lt;br/>
&lt;p>&lt;strong>How to select K for K-means? ‍⭐️&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Domain knowledge, i.e. an expert knows the value of k&lt;/li>
&lt;li>Elbow method: compute the clusters for different values of k, for each k, calculate the total within-cluster sum of square, plot the sum according to the number of clusters and use the band as the number of clusters.&lt;/li>
&lt;li>Average silhouette method: compute the clusters for different values of k, for each k, calculate the average silhouette of observations, plot the silhouette according to the number of clusters and select the maximum as the number of clusters.&lt;/li>
&lt;/ul>
&lt;br/>
&lt;p>&lt;strong>What are the other clustering algorithms do you know? ‍⭐️&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>k-medoids: Takes the most central point instead of the mean value as the center of the cluster. This makes it more robust to noise.&lt;/li>
&lt;li>Agglomerative Hierarchical Clustering (AHC): hierarchical clusters combining the nearest clusters starting with each point as its own cluster.&lt;/li>
&lt;li>DIvisive ANAlysis Clustering (DIANA): hierarchical clustering starting with one cluster containing all points and splitting the clusters until each point describes its own cluster.&lt;/li>
&lt;li>Density-Based Spatial Clustering of Applications with Noise (DBSCAN): Cluster defined as maximum set of density-connected points.&lt;/li>
&lt;/ul>
&lt;br/>
&lt;p>&lt;strong>Do you know how DBScan works? ‍⭐️&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Two input parameters epsilon (neighborhood radius) and minPts (minimum number of points in an epsilon-neighborhood)&lt;/li>
&lt;li>Cluster defined as maximum set of density-connected points.&lt;/li>
&lt;li>Points p_j and p_i are density-connected w.r.t. epsilon and minPts if there is a point o such that both, i and j are density-reachable from o w.r.t. epsilon and minPts.&lt;/li>
&lt;li>p_j is density-reachable from p_i w.r.t. epsilon, minPts if there is a chain of points p_i -&amp;gt; p_i+1 -&amp;gt; p_i+x = p_j such that p_i+x is directly density-reachable from p_i+x-1.&lt;/li>
&lt;li>p_j is a directly density-reachable point of the neighborhood of p_i if dist(p_i,p_j) &amp;lt;= epsilon.&lt;/li>
&lt;/ul>
&lt;br/>
&lt;p>&lt;strong>When would you choose K-means and when DBScan? ‍⭐️&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>DBScan is more robust to noise.&lt;/li>
&lt;li>DBScan is better when the amount of clusters is difficult to guess.&lt;/li>
&lt;li>K-means has a lower complexity, i.e. it will be much faster, especially with a larger amount of points.&lt;/li>
&lt;/ul>
&lt;br/>
&lt;h2 id="dimensionality-reduction">Dimensionality reduction&lt;/h2>
&lt;p>&lt;strong>What is the curse of dimensionality? Why do we care about it? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Data in only one dimension is relatively tightly packed. Adding a dimension stretches the points across that dimension, pushing them further apart. Additional dimensions spread the data even further making high dimensional data extremely sparse. We care about it, because it is difficult to use machine learning in sparse spaces.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Do you know any dimensionality reduction techniques? ‍⭐️&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Singular Value Decomposition (SVD)&lt;/li>
&lt;li>Principal Component Analysis (PCA)&lt;/li>
&lt;li>Linear Discriminant Analysis (LDA)&lt;/li>
&lt;li>T-distributed Stochastic Neighbor Embedding (t-SNE)&lt;/li>
&lt;li>Autoencoders&lt;/li>
&lt;li>Fourier and Wavelet Transforms&lt;/li>
&lt;/ul>
&lt;br/>
&lt;p>&lt;strong>What’s singular value decomposition? How is it typically used for machine learning? ‍⭐️&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Singular Value Decomposition (SVD) is a general matrix decomposition method that factors a matrix X into three matrices L (left singular values), Σ (diagonal matrix) and R^T (right singular values).&lt;/li>
&lt;li>For machine learning, Principal Component Analysis (PCA) is typically used. It is a special type of SVD where the singular values correspond to the eigenvectors and the values of the diagonal matrix are the squares of the eigenvalues. We use these features as they are statistically descriptive.&lt;/li>
&lt;li>Having calculated the eigenvectors and eigenvalues, we can use the Kaiser-Guttman criterion, a scree plot or the proportion of explained variance to determine the principal components (i.e. the final dimensionality) that are useful for dimensionality reduction.&lt;/li>
&lt;/ul>
&lt;br/>
&lt;h2 id="ranking-and-search">Ranking and search&lt;/h2>
&lt;p>&lt;strong>What is the ranking problem? Which models can you use to solve them? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are good unsupervised baselines for text information retrieval? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How would you evaluate your ranking algorithms? Which offline metrics would you use? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is precision and recall at k? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is mean average precision at k? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How can we use machine learning for search? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How can we get training data for our ranking algorithms? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Can we formulate the search problem as a classification problem? How? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How can we use clicks data as the training data for ranking algorithms? 🚀&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Do you know how to use gradient boosting trees for ranking? 🚀&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How do you do an online evaluation of a new ranking algorithm? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/>
&lt;h2 id="recommender-systems">Recommender systems&lt;/h2>
&lt;p>&lt;strong>What is a recommender system? 👶&lt;/strong>&lt;/p>
&lt;p>Recommender systems are software tools and techniques that provide suggestions for items that are most likely of interest to a particular user.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are good baselines when building a recommender system? ‍⭐️&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>A good recommer system should give relevant and personalized information.&lt;/li>
&lt;li>It should not recommend items the user knows well or finds easily.&lt;/li>
&lt;li>It should make diverse suggestions.&lt;/li>
&lt;li>A user should explore new items.&lt;/li>
&lt;/ul>
&lt;br/>
&lt;p>&lt;strong>What is collaborative filtering? ‍⭐️&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Collaborative filtering is the most prominent approach to generate recommendations.&lt;/li>
&lt;li>It uses the wisdom of the crowd, i.e. it gives recommendations based on the experience of others.&lt;/li>
&lt;li>A recommendation is calculated as the average of other experiences.&lt;/li>
&lt;li>Say we want to give a score that indicates how much user u will like an item i. Then we can calculate it with the experience of N other users U as r_ui = 1/N * sum(v in U) r_vi.&lt;/li>
&lt;li>In order to rate similar experiences with a higher weight, we can introduce a similarity between users that we use as a multiplier for each rating.&lt;/li>
&lt;li>Also, as users have an individual profile, one user may have an average rating much larger than another user, so we use normalization techniques (e.g. centering or Z-score normalization) to remove the users&amp;rsquo; biases.&lt;/li>
&lt;li>Collaborative filtering does only need a rating matrix as input and improves over time. However, it does not work well on sparse data, does not work for cold starts (see below) and usually tends to overfit.&lt;/li>
&lt;/ul>
&lt;br/>
&lt;p>&lt;strong>How we can incorporate implicit feedback (clicks, etc) into our recommender systems? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>In comparison to explicit feedback, implicit feedback datasets lack negative examples. For example, explicit feedback can be a positive or a negative rating, but implicit feedback may be the number of purchases or clicks. One popular approach to solve this problem is named weighted alternating least squares (wALS) [Hu, Y., Koren, Y., &amp;amp; Volinsky, C. (2008, December). Collaborative filtering for implicit feedback datasets. In Data Mining, 2008. ICDM'08. Eighth IEEE International Conference on (pp. 263-272). IEEE.]. Instead of modeling the rating matrix directly, the numbers (e.g. amount of clicks) describe the strength in observations of user actions. The model tries to find latent factors that can be used to predict the expected preference of a user for an item.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What is the cold start problem? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Collaborative filterung incorporates crowd knowledge to give recommendations for certain items. Say we want to recommend how much a user will like an item, we then will calculate the score using the recommendations of other users for this certain item. We can distinguish between two different ways of a cold start problem now. First, if there is a new item that has not been rated yet, we cannot give any recommendation. Also, when there is a new user, we cannot calculate a similarity to any other user.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Possible approaches to solving the cold start problem? ‍⭐️🚀&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Content-based filtering incorporates features about items to calculate a similarity between them. In this way, we can recommend items that have a high similarity to items that a user liked already. In this way, we are not dependant on the ratings of other users for a given item anymore and solve the cold start problem for new items.&lt;/li>
&lt;li>Demographic filtering incorporates user profiles to calculate a similarity between them and solves the cold start problem for new users.&lt;/li>
&lt;/ul>
&lt;br/>
&lt;h2 id="time-series">Time series&lt;/h2>
&lt;p>&lt;strong>What is a time series? 👶&lt;/strong>&lt;/p>
&lt;p>A time series is a set of observations ordered in time usually collected at regular intervals.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>How is time series different from the usual regression problem? 👶&lt;/strong>&lt;/p>
&lt;p>The principle behind causal forecasting is that the value that has to be predicted is dependant on the input features (causal factors). In time series forecasting, the to be predicted value is expected to follow a certain pattern over time.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>Which models do you know for solving time series problems? ‍⭐️&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Simple Exponential Smoothing: approximate the time series with an exponentional function&lt;/li>
&lt;li>Trend-Corrected Exponential Smoothing (Holt‘s Method): exponential smoothing that also models the trend&lt;/li>
&lt;li>Trend- and Seasonality-Corrected Exponential Smoothing (Holt-Winter‘s Method): exponential smoothing that also models trend and seasonality&lt;/li>
&lt;li>Time Series Decomposition: decomposed a time series into the four components trend, seasonal variation, cycling varation and irregular component&lt;/li>
&lt;li>Autoregressive models: similar to multiple linear regression, except that the dependent variable y_t depends on its own previous values rather than other independent variables.&lt;/li>
&lt;li>Deep learning approaches (RNN, LSTM, etc.)&lt;/li>
&lt;/ul>
&lt;br/>
&lt;p>&lt;strong>If there’s a trend in our series, how we can remove it? And why would we want to do it? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>We can explicitly model the trend (and/or seasonality) with approaches such as Holt&amp;rsquo;s Method or Holt-Winter&amp;rsquo;s Method. We want to explicitly model the trend to reach the stationarity property for the data. Many time series approaches require stationarity. Without stationarity,the interpretation of the results of these analyses is problematic [Manuca, Radu &amp;amp; Savit, Robert. (1996). Stationarity and nonstationarity in time series analysis. Physica D: Nonlinear Phenomena. 99. 134-161. 10.1016/S0167-2789(96)00139-X. ].&lt;/p>
&lt;br/>
&lt;p>&lt;strong>You have a series with only one variable “y” measured at time t. How do predict “y” at time t+1? Which approaches would you use? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>We want to look at the correlation between different observations of y. This measure of correlation is called autocorrelation. Autoregressive models are multiple regression models where the time-lag series of the original time series are treated like multiple independent variables.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>You have a series with a variable “y” and a set of features. How do you predict “y” at t+1? Which approaches would you use? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Given the assumption that the set of features gives a meaningful causation to y, a causal forecasting approach such as linear regression or multiple nonlinear regression might be useful. In case there is a lot of data and the explanability of the results is not a high priority, we can also consider deep learning approaches.&lt;/p>
&lt;br/>
&lt;p>&lt;strong>What are the problems with using trees for solving time series problems? ‍⭐️&lt;/strong>&lt;/p>
&lt;p>Answer here&lt;/p>
&lt;br/></description></item><item><title>数理统计面试题</title><link>https://ng-tech.icu/books/awesome-interviews/%E7%AE%97%E6%B3%95%E5%B7%A5%E7%A8%8B%E5%B8%88/%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-interviews/%E7%AE%97%E6%B3%95%E5%B7%A5%E7%A8%8B%E5%B8%88/%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>&lt;blockquote>
&lt;p>参考答案请查阅《&lt;a href="https://github.com/wx-chevalier/Mathematics-Notes?q=" target="_blank" rel="noopener">Mathematics-Notes&lt;/a>》&lt;/p>
&lt;/blockquote>
&lt;h1 id="数理统计面试题">数理统计面试题&lt;/h1></description></item></channel></rss>