<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术之外 | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/index.xml" rel="self" type="application/rss+xml" />
    <description>技术之外</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>技术之外</title>
      <link>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/</link>
    </image>
    
    <item>
      <title>技术人的进阶</title>
      <link>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E6%8A%80%E6%9C%AF%E4%BA%BA%E7%9A%84%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E6%8A%80%E6%9C%AF%E4%BA%BA%E7%9A%84%E8%BF%9B%E9%98%B6/</guid>
      <description>&lt;h1 id=&#34;技术人员的几重门&#34;&gt;技术人员的几重门&lt;/h1&gt;
&lt;p&gt;“邓宁-克鲁格效应”告诉我们求知这条路是很难的。一知半解的时候你根本不知道自己不知道，还以为已经很懂了。你必须先经历一次自信心的低谷，才有可能走上真正的求学之路。有人把这条路总结成一条曲线 ——&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://assets.ng-tech.icu/item/20230417213934.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;研发工程师&#34;&gt;研发工程师&lt;/h1&gt;
&lt;h1 id=&#34;高级程序员&#34;&gt;高级程序员&lt;/h1&gt;
&lt;p&gt;如果你是一个刚刚创业的公司，公司没有专职产品经理和项目经理，你就是公司的产品经理，你如果对你现在的开发员能力不满，那么你只需要的是一个高级程序员。&lt;/p&gt;
&lt;p&gt;你定义功能、你做计划推进和管理，他可以带 1-2 个副手把你规划的功能实现了，他是主力干活者，有技术难题也是他来亲自攻克解决。&lt;/p&gt;
&lt;p&gt;所以，一个高级程序员，他的职责很清晰：&lt;/p&gt;
&lt;p&gt;1、负责核心复杂功能的实现方案设计、编码实现&lt;/p&gt;
&lt;p&gt;2、负责疑难 BUG 分析诊断、攻关解决&lt;/p&gt;
&lt;h1 id=&#34;团队协调者&#34;&gt;团队协调者&lt;/h1&gt;
&lt;p&gt;公司再长大些。如果你就有一个研发团队(含产品/开发/测试)，你就一套主产品，而且你的研发团队小于 15 人，那么你需要的就是一个研发 Leader。&lt;/p&gt;
&lt;p&gt;因为你已经有了 1-2 个高级程序员，核心难题攻克和核心功能研发进度与质量保证，已经可以靠他们自身能力解决掉了。那么你需要研发 Leader 干什么。&lt;/p&gt;
&lt;p&gt;研发 Leader 的职责是：&lt;/p&gt;
&lt;p&gt;1、团队任务管理：开发工作量评估、开发任务分配&lt;/p&gt;
&lt;p&gt;2、团队生产质量提升：代码审核、开发风险识别/报告/协调解决&lt;/p&gt;
&lt;p&gt;3、团队生产力提升：代码模板研发与推广、最佳实践规范总结与推广、自动化研发生产工具研发与推广&lt;/p&gt;
&lt;p&gt;4、团队专业力提升：招聘面试、新人指导、领导复盘总结改进&lt;/p&gt;
&lt;h1 id=&#34;技术总监&#34;&gt;技术总监&lt;/h1&gt;
&lt;p&gt;如果你的研发团队超过 20 人了，而且有多套主打产品线了，你可能已经有了多个研发 Leader 了，那么你需要一个技术总监。&lt;/p&gt;
&lt;p&gt;技术总监的职责：&lt;/p&gt;
&lt;p&gt;1、组建平台研发部，搭建公共技术平台，方便上面各条产品线开发。&lt;/p&gt;
&lt;p&gt;2、通过技术平台、通过高一层的职权，管理和协调各个产品线组。现在每个产品线都应该有合格的研发 Leader 和高级程序员了。&lt;/p&gt;
&lt;h1 id=&#34;核心架构师&#34;&gt;核心架构师&lt;/h1&gt;
&lt;p&gt;因为你已经有了技术总监了，所以技术平台不错了。技术平台和各条产品线的协调互动，也是技术总监管着。&lt;/p&gt;
&lt;p&gt;因为你已经有了各个产品线的高级程序员，他们在靠个人能力维持着核心功能模块的开发进度和代码质量。&lt;/p&gt;
&lt;p&gt;因为你已经有了研发 Leader，所以代码模板研发与推广、最佳实践规范总结与推广，这些事都已经在日常按份内职责开展了。&lt;/p&gt;
&lt;p&gt;那么，啥时候需要首席架构师啊。&lt;/p&gt;
&lt;p&gt;也就是说，需要分离管理族和专业族了。你会发现，这个阶段你的研发团队已经超过 100 来人了，需要有人专注来做架构规划、设计、日常维护。不能让研发总监和研发 Leader 又做管理又做技术一股脑都扔给他们，你就等着总结果产出。这是不对的。&lt;/p&gt;
&lt;p&gt;需要从技术总监和研发 Leader 身上剥离职责了。让技术总监和研发 Leader 偏项目管理(管理族)，把各个模块之间的架构设计工作，独立出一个岗位，就是架构师，来负责。&lt;/p&gt;
&lt;p&gt;每个产品线都有架构师，在技术平台部门也有技术平台的架构师。那么，技术平台和业务产品线的架构互动，就是首席架构师在衔接了。让技术平台架构能够和产品业务系统的架构互相促进和支撑，就是首席架构师的份内之事。&lt;/p&gt;
&lt;p&gt;架构师的职责是：&lt;/p&gt;
&lt;p&gt;1、架构分析：从功能性需求中识别出需要增加的非功能性需求，好满足性能、可扩展、解耦/集成、安全、可运维、高可用、易部署、易更新。并且识别完非功能型需求，还要做技术选型、技术架构风险识别、技术实现工作量评估&lt;/p&gt;
&lt;p&gt;2、架构设计与实现：非功能性模块的架构设计、接口设计、代码实现。所以需要的是有代码实现能力还要有架构思维的工程师，不需要画 PPT 的工程师&lt;/p&gt;
&lt;p&gt;3、业务架构设计与实现：需要对跨系统的接口进行识别、实现、维护，需要对能写成公共代码类库的进行分析、识别、接口设计、实现、变更维护。&lt;/p&gt;
&lt;p&gt;4、重构：架构师需要经常做 Bug 分析、非模板性和公共类库代码检查，以发现代码腐烂程度，以发现还有哪些代码没有做很好的架构与精心的代码设计。所以重构是经常性维护发生的，不是攒到某一刻动大手术，甚至推翻重做，那就不叫重构了。&lt;/p&gt;
&lt;h1 id=&#34;cto&#34;&gt;CTO&lt;/h1&gt;
&lt;p&gt;你把架构师团队组织建立完成，再往大长，你才需要真正意义上的 CTO 了。否则你一开始就招真正的 CTO，他也不满意，你的期望也不对。现在你的期望也对了，他的能力模型也正好和你的期望职能匹配了，你能给他的和他想要的也正好匹配了。&lt;/p&gt;
&lt;p&gt;有的公司有软件系统产品副总裁，也有软件系统技术副总裁，而且把软件系统技术副总裁叫 CTO，软件系统产品副总裁叫产品 VP。这就很怪异。&lt;/p&gt;
&lt;p&gt;真正的 CTO，是软件产品和技术是统一管理的。&lt;/p&gt;
&lt;p&gt;他做的事情，是商业、产品、技术、管理、团队相平衡的综合统管。&lt;/p&gt;
&lt;p&gt;CTO 的职责：&lt;/p&gt;
&lt;p&gt;1、业绩达成：洞察客户需求，捕捉商业机会，规划技术产品，通过技术产品领导业务增长，有清晰的战略规划、主攻方向，带领团队实现组织目标&lt;/p&gt;
&lt;p&gt;2、前沿与平台：到这个研发规模规模级别了，一定要有专门的团队做技术应用创新探索和前沿技术预研。而且要和技术平台团队、应用研发团队形成很好的联动作用，让创新原型试点能够很平滑的融入商业平台再让应用研发线规模化的使用起来。大量的前沿探索都死在了内部，做完试点就停滞了，这就需要 CTO 做好整体的衔接推动工作。&lt;/p&gt;
&lt;p&gt;3、研发过程管理：站在全局立场来端到端改进业务流程，为业务增长提供方便&lt;/p&gt;
&lt;p&gt;4、组织与人才建设：公司文化和价值观的传承；研发专业族团队梯队建制建设、研发管理族团队梯队建制建设；创建创新激发机制，激发研发人创新向前发展，激发黑马人脱颖而出&lt;/p&gt;
&lt;p&gt;一、技术视野良好，架构设计能力出色&lt;/p&gt;
&lt;p&gt;CTO 要有良好的技术视野，不需要各种技术都样样精通，但是必须要所有涉猎，有所了解，对各种技术领域的发展趋势，主流非主流技术的应用场景要非常了解。知道在什么场景应用什么技术，公司业务发展到什么规模应该预先做哪些技术储备。产品架构的设计要有足够的弹性，既能够保证当前开发的高效率，又能够对未来产品架构的演进留出扩展的余地。&lt;/p&gt;
&lt;p&gt;二、动手能力要强，学习能力出色&lt;/p&gt;
&lt;p&gt;CTO 并不需要自己亲自动手写代码，但是如有必要，自己可以随时动手参与第一线的编码工作，CTO 不能长期远离一线工作，自废武功，纸上谈兵。否则长此以往，会对技术的判断产生严重的失误。另外，CTO 也应该是一个学习能力非常出色的人，毕竟 IT 行业的技术更新换代速度非常快，如果没有快速学习能力，是没有资格做好 CTO 的。&lt;/p&gt;
&lt;p&gt;三、管理研发团队过硬，能建立团队研发文化&lt;/p&gt;
&lt;p&gt;CTO 的责任是负责整个公司的产品实现，所以 CTO 要善于管理研发团队，掌控好研发工作进度，能够在规划好的时间内，步步为营，好整以暇地完成公司产品的研发工作。&lt;/p&gt;
&lt;p&gt;此外 CTO 还要擅长培养研发梯队力量，建立研发团队内部具有向心力的，开放性的，交流学习型组织文化。让研发团队具备自我学习能力，自我培养能力，自我建设能力。这样的研发团队工作极度默契，战斗力极强，而且员工归属感很强，流失率很低。&lt;/p&gt;
&lt;p&gt;四、具备良好的产品意识，以及跨部门跨背景的沟通能力&lt;/p&gt;
&lt;p&gt;CTO 不仅要懂技术，还要对互联网产品有良好的感觉，从产品的逻辑性，可实现角度提出产品改进和完善的总体性设想。因为产品经理或者业务人员设想的产品，很可能是逻辑上不严密，存在实现矛盾的。&lt;/p&gt;
&lt;p&gt;此外 CTO 还需要极强的沟通能力，要能够和不同背景的人有良好的沟通能力，能够用对方的思维方式和话语体系来描述他不理解的专业问题。&lt;/p&gt;
&lt;p&gt;五、敢于对 CEO 说“不”&lt;/p&gt;
&lt;p&gt;只要不是技术出身的 CEO，必然对研发是门外汉，很可能对产品也是门外汉。因此，CEO 不是每个想法都靠谱的，CTO 有责任站在更加专业的角度去帮助 CEO 纠正，推演，完善想法。一个不敢对 CEO 说不的 CTO，这个公司肯定要走很长很长的弯路的。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>技术与管理</title>
      <link>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E6%8A%80%E6%9C%AF%E4%B8%8E%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E6%8A%80%E6%9C%AF%E4%B8%8E%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;h1 id=&#34;技术与管理&#34;&gt;技术与管理&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>交流与提问</title>
      <link>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E4%BA%A4%E6%B5%81%E4%B8%8E%E6%8F%90%E9%97%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E4%BA%A4%E6%B5%81%E4%B8%8E%E6%8F%90%E9%97%AE/</guid>
      <description>&lt;h1 id=&#34;交流与提问&#34;&gt;交流与提问&lt;/h1&gt;
&lt;p&gt;提问是一门技术。&lt;/p&gt;
&lt;p&gt;在英文中，至少有三个单词都可以译成“问题”，它们是：Question，Problem 和 Puzzle。那这三个词的区别是什么呢？
Question 往往是表述模糊的问题，比如，我怎么才能幸福啊？人生的道路该如何走？等等，这都是 question。这种问题，能被回答，但是，不能被解答。你发现没有，很多人只能问出这样的问题，但其实他并不知道他到底在问什么。
再来看英文中的第二个代表“问题”的词：Problem。这个词指的是可以明确界定下来的问题，所以它不仅可以被回答，还可以被解答。比如，公司今年利润下滑，怎么办？我体重超标了，怎么办？这种问题就好多了，可以解答了。但是这还不是最好的问题，因为答案会有很多种，问问题的人还是搞不清该怎么选择。
那什么才是最好的问题，那就是英文词 Puzzle。Puzzle 中的问题是非常清晰的，是被良好定义过的问题。比如，我们中小学时候做的数学题，就是这种 puzzle。
比如我们刚才提到的太空望远镜。如果你问的是，“如何设计一款太空望远镜”，这是个 question。聊聊就好了，你不可能得到一个靠谱的答案。如果你的问题改良成了，“如何解决太空望远镜的口径大小和运输可行性之间的矛盾”，这问题就好多了，你的 question 变成了一个 problem，变得可以被解决了。但可以再进一步收窄，“如何借鉴折纸的方法，设计一款太空望远镜的可折叠结构”，这就变成了一个 puzzle。这就像数学题一样，是最终可能把它解开的。
讲到这里，我们才可以理解为什么阿奇舒勒说：“创造力就是正确表述问题的技能。”
对，创造力，不是什么神秘的东西，它是一种信仰，它不相信在原来的矛盾里打转转能够解决问题。
创造力的起点，是正确表述问题，是看见矛盾，承认这个矛盾，然后到别处找到方案，解决它的过程。
有句话说得好：如果你的钥匙丢了，那它肯定不会在锁的旁边。
对，创新就是，看见那把锁，然后到别处去找到钥匙的过程。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>能力模型</title>
      <link>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E8%83%BD%E5%8A%9B%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E8%83%BD%E5%8A%9B%E6%A8%A1%E5%9E%8B/</guid>
      <description>&lt;h1 id=&#34;技术人员的能力模型&#34;&gt;技术人员的能力模型&lt;/h1&gt;
&lt;p&gt;能力模型主要是从业务、团队、技术三个维度进行划分。&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://assets.ng-tech.icu/item/20230418222052.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;踏上征途&#34;&gt;踏上征途&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;了解业务，参与团队，高质完成&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;业务&#34;&gt;业务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;能理解 PRD，认知业务概念，了解业务背景。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主动了解业务，积极参与业务评审。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;独立、高质量地完成既定任务（复杂模块或简单项目）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主动关注数据，通过数据了解现状。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;团队&#34;&gt;团队&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;有效沟通，能够和上下游进行积极、有效的沟通，合理安排工作优先级，高质完成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参与团队的基础设施建设，提交 ISSUE 和贡献代码，参与编写技术文档。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;积极进行技术分享。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术&#34;&gt;技术&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基础过硬，掌握专业基础知识与框架。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高质量、可维护，熟练使用类库解决业务问题，项目代码具有可维护性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;具备质量意识，掌握兼容性、性能等问题的解决方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;初窥门径&#34;&gt;初窥门径&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;深入业务，辅助团队，学以致用&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;业务-1&#34;&gt;业务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;深入了解业务规划，主动思考，有一定的业务见解，能够理解业务的主要规则和背后逻辑。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主导项目技术方案设计，解决项目的技术风险。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过数据定位并推动解决问题。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;团队-1&#34;&gt;团队&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;辅导新人，积极完善团队知识库，发掘技术专利。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提炼提高效率和改进质量的解决方案，并在团队中应用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高效协同，能够清晰表达自己的观点和方案，与他人达成共识；有 Owner 意识，能够有效识别、反馈、解决风险，保障项目落地，促进目标达成。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术-1&#34;&gt;技术&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;学以致用，能够主动、有计划的学习知识，结合当前业务现状灵活应用，探索并找出最优解决方案。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;知识全面，全面了解专业领域的知识体系。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;能提效、可复用，能通过开发或引入效率工具提升团队效率；能提炼可复用组件或模块，为组件库贡献高质量代码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;登堂入室&#34;&gt;登堂入室&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;影响业务，组织团队，领域专精&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;业务-2&#34;&gt;业务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参与业务规划，充分了解业务目标，发现业务痛点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主导业务的技术架构或解决领域核心技术难题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过数据发掘业务中的关键问题，并发起优化性项目。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可影响，能理解业务的市场竞争和客户诉求，能准确判断其业务价值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;团队-2&#34;&gt;团队&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;主导和推动团队基础设施建设，完善公司技术生态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组织或参与团队技术培训，推进团队技术文化建设。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;促进成功，能够推动上下游，形成合力，具备较强的项目管理能力，带领团队或项目完成目标。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术-2&#34;&gt;技术&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;深入研究，能够学习并借鉴行业经验，深入研究技术领域，解决现有领域难题或完善体系。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;领域规划，能够识别当前领域的核心问题，制定策略，找到突破点，推动落地并拿到结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;知识专精，精通至少一个领域的专业知识体系。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可扩展、可移植，能完成高扩展性、高复用性的程序设计；具备抽象能力，能根据场景特点抽象出领域通用的架构方案；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;融会贯通&#34;&gt;融会贯通&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;成就业务，引领团队，知识系统&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;业务-3&#34;&gt;业务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参与业务决策，对业务发展趋势进行一定的预判。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主导团队或领域的技术架构，取得一定的技术突破。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建立系统化数据体系，推进业务发展或体验升级。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;全局观，能对行业有全局性的分析和思考。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;团队-3&#34;&gt;团队&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;深度参与公司技术规范、标准与流程的指定，并推进落地。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;体系构建，能够系统化、结构化地学习，具备深度与广度，对领域进行抽象，建立或升级体系。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术-3&#34;&gt;技术&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;知识系统，掌握整体专业知识体系，了解上下游技术知识体系。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;系统性规划，能够定义团队或领域的问题，透过现象看本质，形成体系大图，通过体系攻坚、专项治理等方法拿到结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;体系化，能识别体系短板，推动体系升级；具备产品思维和技术运营能力，能主导技术的产品化和服务化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;知行合一&#34;&gt;知行合一&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;无中生有，变革团队，领域互通&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;业务-4&#34;&gt;业务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对行业或产业有一定的思考，促进业务变革。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引领专业技术发展，通过技术变革、架构升级促进业务突破。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;推动专业领域和上下游技术的融合与演进，发挥技术的整体价值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前瞻性，具备行业或产业洞察力，能准确判断发展趋势。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;团队-4&#34;&gt;团队&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为未来布局，吸引业内顶尖人才；推进公司技术体系整体发展，提升技术岗位价值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;伙伴关系，能够跳出当前位置，站在更高的视角，求同存异，促进合作，共同发展，实现共赢。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术-4&#34;&gt;技术&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;领域互通，熟悉上下游技术知识体系；了解新技术，能建立面向未来的技术体系。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;融会贯通，能够深入上下游技术，全链路思考，推动技术融合与演进。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前瞻性布局，能够准确判断未来趋势，结合业务长远战略规划，形成技术布局，取得突破。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>如何解决问题</title>
      <link>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;h1 id=&#34;如何解决问题&#34;&gt;如何解决问题&lt;/h1&gt;
&lt;h1 id=&#34;links&#34;&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/significantfrank/article/details/100526155&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://blog.csdn.net/significantfrank/article/details/100526155&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>团队协作</title>
      <link>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/</guid>
      <description>&lt;h1 id=&#34;团队协作&#34;&gt;团队协作&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>中年危机</title>
      <link>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E4%B8%AD%E5%B9%B4%E5%8D%B1%E6%9C%BA/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/roadmaps/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/%E4%B8%AD%E5%B9%B4%E5%8D%B1%E6%9C%BA/</guid>
      <description>&lt;h1 id=&#34;程序员的中年危机&#34;&gt;程序员的中年危机&lt;/h1&gt;
&lt;p&gt;路在何方？路在脚下呀。笔者此言意思是，不同人的选择肯定是不一样的。在过去十年的代码生涯中，感觉大部分码农对程序的态度，更多的是工作；即使在年轻的时候充满兴趣，随着时间的推移、业务的消磨，慢慢也就变成了平淡。笔者并不认为这样不好，毕竟工作的首要目的还是赚钱，而不是兴趣，但是不同的底座，也就决定了对未来路的选择不同。&lt;/p&gt;
&lt;p&gt;无论哪条路，我们都要能在岁月的长河中留下自己的痕迹，而不是日复一日地重复，这才是最大的危机。&lt;/p&gt;
&lt;h1 id=&#34;套路流&#34;&gt;套路流&lt;/h1&gt;
&lt;p&gt;成为合格的管理者/协调者，熟知大中型公司的套路，能够在不同的公司里找到自己的定位。这个流派应该是大部分人的选择，因为它不需要选择，典型的以不变应万变。但是有得就有失，当发生剧烈的行业、阶层变革时候，过去的套路往往会烟消云散，这也是很多人所谓中年危机的来源吧；成为了某个公司的专用人才、掌握了某些固有的套路。&lt;/p&gt;
&lt;p&gt;虽然有明显的缺陷，但也不意味着这个流派就一无是处；恰恰相反，这应该是每个人都要提醒自己注意的方向。所谓宏观战略，中观套路，微观体感，其实就是中观套路最容易形而上学；笔者自我感觉从阿里学到的最大的价值点就是它的黑话与套路，这种培养出来的职业基因可能会被淘汰，但会是未来创新基因培育的土壤。&lt;/p&gt;
&lt;p&gt;如果你既不喜欢技术，也不喜欢行业，倒不如多留心些套路，让岁月在你的身上能够沉淀些璀璨的东西，即使是拿来主义。&lt;/p&gt;
&lt;h1 id=&#34;技术流&#34;&gt;技术流&lt;/h1&gt;
&lt;p&gt;如果你是技术流，即对技术会保持终身的热爱，而不仅仅将其作为赚钱的工具，那笔者却是首先想提醒你，要小心了。技术即是你安身立命的依仗，也会是你成长的羁绊，限制你的人生格局；笔者的前两次创业都是因为太囿于技术，而遗憾告终。如果你是技术流，我反而想提醒你务必要具有产品，或者行业视野，对绝大部分人而言，要始终对业务、对产品心怀敬畏。&lt;/p&gt;
&lt;h1 id=&#34;行业流&#34;&gt;行业流&lt;/h1&gt;
&lt;p&gt;认准某个行业，在行业的成长中分享属于自己的红利。就像前几年的互联网，笔者从进入职场到现在，一直都在寻找能落地的行业方向。未来技术会越来越普及，编程将会成为人们的通用技能，而唯有不同的行业，才能诞生好的商业模式，诞生值得技术去培育的生存之基。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
