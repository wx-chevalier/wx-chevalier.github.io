<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>服务端开发与运维 | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/index.xml" rel="self" type="application/rss+xml" />
    <description>服务端开发与运维</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>服务端开发与运维</title>
      <link>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/</link>
    </image>
    
    <item>
      <title>Docker &amp; K8s 面试题</title>
      <link>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/docker-k8s-%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/docker-k8s-%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考答案请查阅《&lt;a href=&#34;https://github.com/wx-chevalier/Cloud-Series?q=&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud-Series&lt;/a&gt;》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;云计算与虚拟化&#34;&gt;云计算与虚拟化&lt;/h1&gt;
&lt;h1 id=&#34;容器与-docker&#34;&gt;容器与 Docker&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在容器部署模型中，应该使用多容器模型还是单容器中多进程模型？&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;kubernetes&#34;&gt;Kubernetes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为什么在 Kubernetes 我们不直接使用一个单独的容器（container），而是用 Pod 来封装一个或多个容器呢？为什么我们要运行多个容器呢？我们能将我们所有的应用程序都放到一个容器里面运行么？Kubernetes 的多个容器间应该如何通信？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pod，Deployment，Service 与 Ingress 分别在 K8s 集群中起到了怎样的作用？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Service 定义中的 port，targetPort 与 nodePort 各自的区别是什么？在 K8s 中应该如何实现服务发现？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于使用 nodePort 方式对外暴露的服务，其数据网络流向是什么样子的？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Go 面试题</title>
      <link>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/go-%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/go-%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考答案请查阅《&lt;a href=&#34;https://github.com/wx-chevalier/Go-Series?q=&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Go-Series&lt;/a&gt;》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;go-interview&#34;&gt;Go Interview&lt;/h1&gt;
&lt;h1 id=&#34;语法基础&#34;&gt;语法基础&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Go 包初始化过程中，如果在某个 init 函数内部启动了新的 goroutine，那么该 goroutine 会在何时被执行？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数据结构&#34;&gt;数据结构&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Go 中的数组是引用类型还是值类型？空数组的作用是什么？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go 如何在切片中间插入某个元素？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;并发编程&#34;&gt;并发编程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Goroutine 一定是并行的吗？Goroutine 的调用机制是怎样的？为何采用这样的调用机制？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何实现 Goroutine 的中断与安全退出？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go 中 sync.Map 容器是如何保证效率与安全性的？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;web-开发&#34;&gt;Web 开发&lt;/h1&gt;
&lt;h1 id=&#34;links&#34;&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://studygolang.com/articles/17796&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://studygolang.com/articles/17796&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Java 面试题</title>
      <link>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/java-%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/java-%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考答案请查阅《&lt;a href=&#34;https://github.com/wx-chevalier/Java-Series?q=&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java-Series&lt;/a&gt;》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;awesome-java-interview--java-面试题集锦&#34;&gt;Awesome Java Interview | Java 面试题集锦&lt;/h1&gt;
&lt;h1 id=&#34;语法基础&#34;&gt;语法基础&lt;/h1&gt;
&lt;h2 id=&#34;类与对象&#34;&gt;类与对象&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为什么 Java 文件中只能含有一个 public 类?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java 中的抽象类与接口各应该在何场景下使用？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java 内部类的使用场景有哪些？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;异常处理&#34;&gt;异常处理&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Java 中 Error 与 Exception 有何设计区别？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;catch 与 finally 类中都存在 return 语句的情况下，会实际得到哪个值？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;数据结构&#34;&gt;数据结构&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如何遍历包含大量数据的 Map 类型？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HashMap 的底层数组长度为何总是 2 的 n 次方？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基础类型&#34;&gt;基础类型&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;写出下面代码的输出结果：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hello,World&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hello,World&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello,World&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;intern&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;str1 == str2 ? &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;str2 == str3 ? &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;str2 == str4 ? &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;StringBuilder 为什么线程不安全？&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;工程实践&#34;&gt;工程实践&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;你是如何进行线上应用调试的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当发现 CPU 利用率及平均负载较高时，应该如何排查？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在使用 Docker 或者 K8s 部署 Spring 应用的时候有哪些优化技巧？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;maven&#34;&gt;Maven&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Maven 插件（plugin）goal 的执行与生命周期（lifecycle）phase 的关系？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数据访问&#34;&gt;数据访问&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一般数据库连接池应该设置为多少？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据量很大，分页查询很慢，有什么优化方案？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;并发编程&#34;&gt;并发编程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Thread.sleep(0) 的作用是什么？&lt;/li&gt;
&lt;li&gt;如何减少上下文切换？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;线程协作&#34;&gt;线程协作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;为什么不建议使用 Executors？&lt;/li&gt;
&lt;li&gt;Java 中定义线程池参数的策略是什么？&lt;/li&gt;
&lt;li&gt;newSingleThreadScheduledExecutor 这种定时器可以运行多个任务吗？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;线程安全&#34;&gt;线程安全&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;JMM 为我们提供了哪些特性？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;锁&#34;&gt;锁&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;synchronized 关键字是如何保证原子性、可见性、有序性这几个问题的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常见的锁优化的思路有哪些？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;互斥锁、自旋锁、读写锁、悲观锁、乐观锁的应用场景是什么？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;同步&#34;&gt;同步&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CountDownLatch、CyclicBarrier、Semaphore 共同之处与区别以及各自使用场景？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;并发容器&#34;&gt;并发容器&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ConcurrentHashMap 是如何提高吞吐量的？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;nio&#34;&gt;NIO&lt;/h2&gt;
&lt;h2 id=&#34;akka&#34;&gt;Akka&lt;/h2&gt;
&lt;h1 id=&#34;spring&#34;&gt;Spring&lt;/h1&gt;
&lt;h2 id=&#34;ioc&#34;&gt;IoC&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;为什么不推荐使用 Autowired？在多线程环境下为何有时候 Autowired 会无效？应该如何保证多线程下的注入？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mybatis&#34;&gt;MyBatis&lt;/h2&gt;
&lt;h2 id=&#34;hibernate&#34;&gt;Hibernate&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;简述下 Hibernate 的优劣特性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;toolkits--framework&#34;&gt;Toolkits &amp;amp; Framework&lt;/h1&gt;
&lt;h1 id=&#34;jvm&#34;&gt;JVM&lt;/h1&gt;
&lt;h2 id=&#34;类&#34;&gt;类&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;简单讲下 JVM 中的类加载过程。JVM 中的类加载和卸载的时机？如何理解 JVM 中不同类加载器的概念和作用？ClassLoader 的作用是什么？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简单讲下 JVM 中的双亲委派模型？什么情况下会破坏双亲委派模型？为什么？可否举个例子？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tomcat 中的类加载机制有了解吗？为什么这么设计？实际开发中有遇到哪些类加载器相关的问题？你又是如何解决的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JVM 之上的弱类型语言例如 Groovy 是如何实现？简单讲下动态类加载机制？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;垃圾回收&#34;&gt;垃圾回收&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;常见的 GC 调优手段有哪些？如何应对频繁 Minor GC/Major GC？如何应对请求高峰期发生 GC，导致服务可用性下降？&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Linux 面试题</title>
      <link>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/linux-%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/linux-%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考答案请查阅《&lt;a href=&#34;https://github.com/wx-chevalier/Linux-Series?q=&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux-Series&lt;/a&gt;》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;linux-interview--linux-与操作系统面试题集锦&#34;&gt;Linux Interview | Linux 与操作系统面试题集锦&lt;/h1&gt;
&lt;h1 id=&#34;shell-编程&#34;&gt;Shell 编程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为什么很多 Bash 脚本的首部会添加如下指令：&lt;code&gt;set -xeuo pipefail&lt;/code&gt;？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何将某个文件夹中的 PDF 批量创建为 MD 文件？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我们经常使用 &lt;code&gt;kill -9&lt;/code&gt; 来关闭进程，请问这里的 9 代表什么含义？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Rust 面试题</title>
      <link>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/rust-%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/rust-%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考答案请查阅《&lt;a href=&#34;https://github.com/wx-chevalier/Rust-Series?q=&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rust-Series&lt;/a&gt;》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;rust-interview&#34;&gt;Rust Interview&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Rust 的错误处理中应该何时使用 panic! 何时使用 Result？&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>SRE 面试题</title>
      <link>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/sre-%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/sre-%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>&lt;h1 id=&#34;sre-面试题&#34;&gt;SRE 面试题&lt;/h1&gt;
&lt;h1 id=&#34;links&#34;&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mxssl/sre-interview-prep-guide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-Site Reliability Engineer (SRE) Interview Preparation Guide&lt;/a&gt;: This repository is an attempt to consolidate useful resources for Site Reliability Engineer (SRE) interview preparation.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>数据库面试题</title>
      <link>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考答案请查阅《&lt;a href=&#34;https://github.com/wx-chevalier/Database-Series?q=&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Database-Series&lt;/a&gt;》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;database-interview&#34;&gt;Database Interview&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;简述 B+Tree 与 LSM Tree 各自的原理，及优劣。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本地事务与分布式事务在 ACID 原则的遵循上有什么区别呢？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;sql&#34;&gt;SQL&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;为什么我们不提倡进行多表 Join 操作？&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mysql&#34;&gt;MySQL&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MySQL 的 utf8 与 utf8mb4 两种格式的区别在哪里？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为什么 MySQL 的索引要使用 B+树，而不是其它树？比如 B 树？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 中如何处理多时区问题？当 MySQL 为 UTC 时区时，JDBC 中的 serverTimezone 应该如何设置？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 自增 ID 用完了怎么办？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 中千万级别的大表应该如何优化？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 默认隔离级别是 RR，为什么阿里这种大厂会改成 RC？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;redis&#34;&gt;Redis&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;如何用 Redis 统计独立用户访问量？&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;数据库拆分&#34;&gt;数据库拆分&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;某网络游戏平台的用户 A 在中国, 而用户 B 是他曾经的邻居, 目前在美国。某日，用户 A 将游戏中的道具转给了用户 B，A 在游戏中看到了明确的操作成功的提示，而且刷新也确认道具已经转交。A 在私下用微信告知了这个操作, 然后让 B 在游戏中查看自己的道具背包，但是 B 刷新了一直没发现。这种现象可能因为什么？应该如何去解决？&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;links&#34;&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://quip.com/2gwZArKuWk7W&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://quip.com/2gwZArKuWk7W&lt;/a&gt; The Best Medium-Hard Data Analyst SQL Interview Questions&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>消息队列面试题</title>
      <link>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-interviews/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%90%E7%BB%B4/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考答案请查阅《&lt;a href=&#34;https://github.com/wx-chevalier/MessageQueue-Series?q=&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MessageQueue-Series&lt;/a&gt;》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;消息队列面试题&#34;&gt;消息队列面试题&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果生产者发送消息的速度比消费者能够处理的速度快会发生什么？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果节点崩溃或暂时脱机，会发生什么情况？是否会有消息丢失？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果需要设计一个消息队列系统，应该涉及到哪些关键领域的设计？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;消息队列&#34;&gt;消息队列&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为什么使用消息队列？消息队列的作用是什么？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kafka 的 topic 和分区内部是如何存储的，有什么特点？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;与传统的消息系统相比,Kafka 的消费模型有什么优点?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kafka 如何实现分布式的数据存储与数据读取?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;kafka 为什么比 rocketmq 支持的单机 partion 要少?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为什么需要分区，也就是说主题只有一个分区，难道不行吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;日志为什么需要分段？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;kafka 是依靠什么机制保持高可靠，高可用？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;消息队列如何保证消息幂等？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;让你自己设计个消息队列，你会怎么设计，会考虑哪些方面？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
