<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>程序员数学 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/mathematics-series/999.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/</link><atom:link href="https://ng-tech.icu/books/mathematics-series/999.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/index.xml" rel="self" type="application/rss+xml"/><description>程序员数学</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>程序员数学</title><link>https://ng-tech.icu/books/mathematics-series/999.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/</link></image><item><title>多元函数微分学</title><link>https://ng-tech.icu/books/mathematics-series/999.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/%E5%A4%9A%E5%85%83%E5%87%BD%E6%95%B0%E5%BE%AE%E5%88%86%E5%AD%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/mathematics-series/999.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/%E5%A4%9A%E5%85%83%E5%87%BD%E6%95%B0%E5%BE%AE%E5%88%86%E5%AD%A6/</guid><description>&lt;h3 id="1多元函数定义">1、多元函数定义&lt;/h3>
&lt;p>设 D 为一个非空的 n 元有序数组的集合， $f(x)$​ 为某一确定的对应规则，也称为函数关系。&lt;/p>
&lt;p>$(x_1,x_2,……,x_n) \in D$​ 如果对于每一个有序数组，通过对应规则 $f(x)$​ 都有唯一确定的实数 $y$​ 与之对应，则称对&lt;/p>
&lt;p>应规则 $f(x)$​​ 为定义在 D 上的 n 元函数。记为：&lt;/p>
&lt;p>$y = f(x_1,x_2,……,x_n)\ ,\ (x_1,x_2,……,x_n) \in D$ 。变量 $x_1,x_2,……,x_n$ 称为自变量；y 称为因变量。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>当 n=1 时，为一元函数，记为 $y = f(x)\ ,\ x \in D$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当 n=2 时，为二元函数，记为 $z = f(x,y)\ , \ (x,y) \in D$​ ，如图所示：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/1-%e4%ba%8c%e5%85%83%e5%87%bd%e6%95%b0.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>二元及以上的函数统称为多元函数。&lt;/li>
&lt;/ul>
&lt;h3 id="2偏导数">2、偏导数&lt;/h3>
&lt;p>&lt;font size = 5 color = 'red'>$\frac{\partial f}{\partial x_i} = \lim\limits_{\Delta x_i \rightarrow 0}\frac{f(x_i,…,x_i + \Delta x_i,…,x_n) - f(x_i,…,x_i,…,x_n)}{\Delta x_i}$&lt;/font>​&lt;/p>
&lt;p>偏导数，可以看作是导数的推广，对于多元函数来说，我们把其它的自变量固定不动，看成是&lt;strong>常量&lt;/strong>，我们对其中的某一个变量求导数的话，那就是偏导数了，只对一个变量求导数！&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/2-%e5%81%8f%e5%af%bc%e6%95%b0.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>几何意义上面来说就是在某个方向上对原函数来切一下，再去求导，就是偏导数。举例说明：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$f(x,y) = x^2 + 3xy - 2y^2$&lt;/font>&lt;/p>
&lt;p>对变量 $x$ 求偏导数，其中 $y$ 是常量&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$f&amp;rsquo;x = \frac{\partial f}{\partial x} = 2x + 3y$​​&lt;/font>&lt;/p>
&lt;p>对变量 $y$ 求偏导数，则 $x$ 是常量&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$f&amp;rsquo;y = \frac{\partial f}{\partial y} = 3x - 4y$​​&lt;/font>&lt;/p>
&lt;h3 id="3高阶偏导数">3、高阶偏导数&lt;/h3>
&lt;p>有高阶导数，同样也有高阶偏导数，它的情况比高阶导数要复杂一些，因为它的求导变量有多个，比如说：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\frac{\partial^2f}{\partial x\partial y}$​&lt;/font>&lt;/p>
&lt;p>它对 $x,y$ 求高阶偏导数的话，就是先对 $x$ 求偏导，再对 $y$ 求偏导，其实跟一元函数的高阶导数是一样的，依次对每个变量反复求导即可，我们还是以上面的公式为例：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$f(x,y) = x^2 + 3xy - 2y^2$&lt;/font>&lt;/p>
&lt;p>二元函数的二阶偏导数有四个：&lt;/p>
&lt;p>&lt;font size= 5 color = 'red'>$\frac{\partial^2 f}{\partial^2 x} = 2$​&lt;/font>&lt;/p>
&lt;p>&lt;font size= 5 color = 'red'>$\frac{\partial^2 f}{\partial x \partial y} = 3$​​&lt;/font>&lt;/p>
&lt;p>&lt;font size= 5 color = 'red'>$\frac{\partial^2 f}{\partial y \partial x} = 3$​&lt;/font>&lt;/p>
&lt;p>&lt;font size= 5 color = 'red'>$\frac{\partial^2 f}{\partial^2 y} = -4$&lt;/font>&lt;/p>
&lt;p>有个重要的结论，就是高阶导数和求导次序无关:&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\frac{\partial^2f}{\partial x\partial y} = \frac{\partial^2f}{\partial y\partial x}$&lt;/font>&lt;/p>
&lt;h3 id="4梯度">4、梯度&lt;/h3>
&lt;p>机器学习中的梯度下降法，和牛顿法很多地方都会用到&lt;strong>梯度&lt;/strong>这个概念。&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\nabla f(x) = \left [ \frac{\partial f}{\partial x_1},\frac{\partial f}{\partial x_2},…,\frac{\partial f}{\partial x_n} \right ]^T $​​&lt;/font>​​&lt;/p>
&lt;p>梯度可以看成一元函数的导数，对于多元函数来说就是偏导数而已。&lt;/p>
&lt;p>对于多元函数如果它的自变量有 N 个：$x_1,x_2,……,x_n$​​ 。它的梯度是个向量，是由对 $x_1,x_2,……,x_n$​ 变量&lt;/p>
&lt;p>求偏导数构成的这样一个向量，称之为梯度。梯度我们用&lt;strong>倒三角&lt;/strong>这个符号来表示，对 $f(x)$​ 求梯度得到上面所示的&lt;/p>
&lt;p>向量 $\nabla f(x)$​ 。&lt;/p>
&lt;h3 id="5雅可比矩阵">5、雅可比矩阵&lt;/h3>
&lt;h4 id="51雅克比矩阵定义">5.1、雅克比矩阵定义&lt;/h4>
&lt;p>这个可能很多同学学高等数学的时候可能没有学过，但是这个也比较好理解，就是由一阶偏导数构成的矩阵，发明它的目的主要是为了简化求导公式，对多元的复合函数求导，如果我们用雅可比矩阵来计算的话，它会写起来非常简洁，这在我们的人工神经网络反向推导的过程中往往会看到的。&lt;/p>
&lt;p>$y = f(x)$ ，其中 $x$ 是 n 维向量表示有 n 个未知数即 n 个自变量，$y$ 是 k 维的向量表示函数对应关系计算返回 k 个因变量。&lt;/p>
&lt;p>$y_i = f(x_i)$ ，其中每个 $x_i$ 和每个 $y_i$ 都是相关的，也就是每个 $y_i$ 是单独从 $x_i$ 映射过来的函数。&lt;/p>
&lt;p>函数 $f(x)$ 的雅可比矩阵就是每个 $y_i$ 分别对每个 $x_i$ 求偏导，然后构成的矩阵叫做雅可比矩阵：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\left [\begin{aligned} &amp;amp;\frac{\partial y_1}{\partial x_1},\frac{\partial y_1}{\partial x_2},\cdots,\frac{\partial y_1}{\partial x_n}\&amp;amp;\frac{\partial y_2}{\partial x_1},\frac{\partial y_2}{\partial x_2},\cdots,\frac{\partial y_2}{\partial x_n}\&amp;amp;\ \cdots\ ,\ \cdots\ ,\cdots\ ,\ \cdots\&amp;amp;\frac{\partial y_k}{\partial x_1},\frac{\partial y_k}{\partial x_2},\cdots,\frac{\partial y_k}{\partial x_n}\end{aligned}\right]$​&lt;/font>​&lt;/p>
&lt;p>第一行就是 $y_1$ 对 $x_1,x_2,…,x_n$ 求偏导；第二行就是 $y_2$ 对 $x_1,x_2,…,x_n$ 求偏导；第 k 行就是 $y_k$ 对$x_1,x_2,…,x_n$ 求偏导。如果 $x$ 是 n 维向量，$y$ 是 k 个值的因变量，那么雅可比矩阵就是 k*n 的矩阵。&lt;/p>
&lt;h4 id="52雅克比矩阵示例">5.2、雅克比矩阵示例&lt;/h4>
&lt;p>&lt;font size = 5 color = 'red'>$\left {\begin{aligned}y_1\y_2\end{aligned}\right} \quad\begin{aligned}&amp;amp;y_1 = x_1^2 + 3x_1x_2 + 2x_3\&amp;amp;y_2 = 2x_1 - 2x_1x_2 + x_3^2\end{aligned}\quad \left {\begin{aligned}x_1\x_2\x_3\end{aligned}\right}$&lt;/font>&lt;/p>
&lt;p>自变量 $x_1,x_2,x_3$ 根据函数 $f(x)$ 映射为因变量 $y_1,y_2$ ，那么 $y_1$ 是 $x_1,x_2,x_3$ 的函数，$y_2$ 也是 $x_1,x_2,x_3$ 的函数，那么函数 $f(x)$ 的雅可比矩阵如下：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\left[\begin{matrix}&amp;amp;2x_1 + 3x_2,&amp;amp;3x_1,&amp;amp;2 \&amp;amp;2- 2x_2,&amp;amp;-2x_1,&amp;amp;2x_3\end{matrix}\right]$&lt;/font>&lt;/p>
&lt;h3 id="6hessian-矩阵">6、Hessian 矩阵&lt;/h3>
&lt;h4 id="61hessian-矩阵定义">6.1、Hessian 矩阵定义&lt;/h4>
&lt;p>Hessian 矩阵是对于一个多元函数来说的，它就相当于一元函数的二阶导数。&lt;/p>
&lt;p>有一个关于 $x$ 的 n 元函数 $f(x)$ ，自变量为 $x_1,x_2,…,x_n$​ ，那么 Hessian 矩阵为：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\left [\begin{matrix} &amp;amp;\frac{\partial^2 f}{\partial^2 x_1},&amp;amp;\frac{\partial^2 f}{\partial x_1 \partial x_2},&amp;amp;\cdots,&amp;amp;\frac{\partial^2 f}{\partial x_1 \partial x_n}\&amp;amp;\frac{\partial^2 f}{\partial x_2 \partial x_1},&amp;amp;\frac{\partial^2 f}{\partial^2 x_2},&amp;amp;\cdots,&amp;amp;\frac{\partial^2 f}{\partial x_2 \partial x_n}\&amp;amp;\cdots,&amp;amp;\cdots,&amp;amp;\cdots,&amp;amp;\cdots\&amp;amp;\frac{\partial^2 f}{\partial x_n \partial x_1},&amp;amp;\frac{\partial^2 f}{\partial x_n\partial x_2},&amp;amp;\cdots,&amp;amp;\frac{\partial^2 f}{\partial^2 x_n}\end{matrix}\right]$​​​​​​​​&lt;/font>&lt;/p>
&lt;p>Hessian 矩阵是一个 $n*n$​ 的矩阵，里面的元素是二阶偏导数构成的。第一个元素是对 $x_1$ 求二阶偏导数，第二个元素是对 $x_1x_2$ 求偏导数，因为咱们前面讲过，多元函数高阶偏导数和顺序无关，所以 Hessian 矩阵是对称矩阵。&lt;/p>
&lt;h4 id="62实例演示-hessian-矩阵">6.2、实例演示 Hessian 矩阵&lt;/h4>
&lt;p>&lt;font size = 5 color = 'red'>$f(x,y,z) = 3x^2 - 4xy + y^2 - 3z^2$​​​&lt;/font>&lt;/p>
&lt;p>首先求函数 $f(x,y,z)$ 的一阶偏导数：&lt;/p>
&lt;ul>
&lt;li>$f&amp;rsquo;x = 6x -4y$​&lt;/li>
&lt;li>$f&amp;rsquo;y = -4x + 2y$​&lt;/li>
&lt;li>$f&amp;rsquo;z = -6z$​&lt;/li>
&lt;/ul>
&lt;p>然后求解 Hessian 矩阵：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\left[\begin{matrix}&amp;amp;6,&amp;amp;-4,&amp;amp;0\&amp;amp;-4,&amp;amp;2,&amp;amp;0\&amp;amp;0,&amp;amp;0,&amp;amp;-6\end{matrix}\right]$&lt;/font>​​&lt;/p>
&lt;p>Hessian 矩阵和函数的凹凸性是有密切关系的，如果 Hessian 矩阵&lt;strong>正定&lt;/strong>，可以说函数 $f(x)$​​ 是&lt;strong>凸函数&lt;/strong>，如果是&lt;strong>负定&lt;/strong>，它就是&lt;strong>凹函数&lt;/strong> 。矩阵正定是如何判定的呢？&lt;/p>
&lt;h3 id="7极值判别法则">7、极值判别法则&lt;/h3>
&lt;h4 id="71极值判定条件">7.1、极值判定条件&lt;/h4>
&lt;p>对于一元函数，我们前面讲过， $f(x)$ 的一阶导数等于 0 处有极值，当 $f(x)$ 的二阶导数大于 0 时是&lt;strong>极小值&lt;/strong>，当 $f(x)$ 的二阶导数小于 0 时是&lt;strong>极大值&lt;/strong>，可以参考 $f(x) = x^2$ 的平方这个函数，其二阶导数是 $f&amp;rsquo;&amp;rsquo;(x) = 2 &amp;gt; 0 $​ ，那么该函数是凸函数。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/3-%e4%b8%80%e5%85%83%e5%87%bd%e6%95%b0.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>多元函数的极值判别法则，首先 $f(x)$​ 的一阶导数等于 0，这点是&lt;strong>驻点&lt;/strong>，那它就可能是&lt;strong>极值点&lt;/strong>，它是极大值还是极小值或者不是极值怎么判定的？&lt;/p>
&lt;p>看 Hessian 矩阵，在 $f(x)$​ 的一阶导数等于 0 处，就是驻点处。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如果 Hessian 矩阵是&lt;strong>正定&lt;/strong>的话，函数在该点有&lt;strong>极小值&lt;/strong>；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果 Hessian 矩阵是&lt;strong>负定&lt;/strong>的话，函数在该点有&lt;strong>极大值&lt;/strong>；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果 Hessian 矩阵不定，函数在该点不是极值；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="72实对称矩阵正定负定判定">7.2、实对称矩阵正定负定判定&lt;/h4>
&lt;p>实对称矩阵 A 正定负定判定条件：&lt;/p>
&lt;ul>
&lt;li>对于任意向量 $\vec{v} \not= 0$，都有 $\vec{v}^TA\vec{v} &amp;gt; 0$​ ，那么 A 就是正定矩阵；&lt;/li>
&lt;li>对于任意向量 $\vec{v} \not= 0$​​，都有 $\vec{v}^TA\vec{v} &amp;lt; 0$​​ ，那么 A 就是负定矩阵；&lt;/li>
&lt;/ul>
&lt;p>实对称矩阵 A 负定，代码演示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">A&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">v&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;给定向量任意向量v：&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;求解矩阵A正定判定条件结果是：&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">给定向量任意向量v： [3 5 6]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">求解矩阵A正定判定条件结果是： -714
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>实对称矩阵 A 正定，代码演示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">A&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">v&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;给定向量任意向量v：&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;求解矩阵A正定判定条件结果是：&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">给定向量任意向量v： [ 2 -3 -5]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">求解矩阵A正定判定条件结果是： 128
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是这样不太容易判断，我们还可以根据&lt;strong>特征值&lt;/strong>正负去判断矩阵正定与否：&lt;/p>
&lt;ul>
&lt;li>矩阵 A 的特征值全部大于 0，那么矩阵 A 为正定矩阵；&lt;/li>
&lt;li>矩阵 A 的特征值全部小于 0，那么矩阵 A 为负定矩阵；&lt;/li>
&lt;/ul>
&lt;p>实对称矩阵 A 负定，特征值代码演示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">A&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">v&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">linalg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">eig&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;矩阵A的特征值特征向量是：&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">display&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">矩阵A的特征值特征向量是：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">array([-10.54287655, -0.03922866, -2.41789479])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">array([[ 0.32798528, 0.73697623, -0.59100905],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [ 0.73697623, -0.59100905, -0.32798528],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [ 0.59100905, 0.32798528, 0.73697623]])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>实对称矩阵 A 正定，特征值代码演示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">A&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">v&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">linalg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">eig&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;矩阵A的特征值特征向量是：&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">display&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">矩阵A的特征值特征向量是：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">array([10.74515039, 1.63251546, 2.62233415])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">array([[-0.58123713, -0.60851363, -0.54025416],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [-0.27299496, -0.4796241 , 0.83392714],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [ 0.76657495, -0.63219608, -0.11265418]])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="8二次型">8、二次型&lt;/h3>
&lt;h4 id="81二次型定义">8.1、二次型定义&lt;/h4>
&lt;p>二次型就是纯二次项构成的一个函数 。&lt;/p>
&lt;p>因为二次函数（方程）的二次部分最重要，为了方便研究，我们把含有 n 个变量的二次齐次函数：&lt;/p>
&lt;p>$f(x_1,x_2,\cdots,x_n) = a_{11}x_1^2 + a_{22}x_2^2 + \cdots + a_{nn}x_n^2 + 2a_{12}x_1x_2 + 2a_{13}x_1x_3+\cdots + 2a_{n-1,n}x_{n-1}x_n$&lt;/p>
&lt;p>称为二次型。&lt;/p>
&lt;h4 id="82二次型表示">8.2、二次型表示&lt;/h4>
&lt;p>我们可以通过矩阵来进行表示&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/4-%e4%ba%8c%e6%ac%a1%e5%9e%8b%e7%9f%a9%e9%98%b5.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>二次型&lt;strong>通俗&lt;/strong>表现形式：&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/5-%e4%ba%8c%e6%ac%a1%e5%9e%8b%e9%80%9a%e4%bf%97%e8%a1%a8%e7%8e%b0%e5%bd%a2%e5%bc%8f.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>二次型&lt;strong>矩阵&lt;/strong>表示：&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/6-%e4%ba%8c%e6%ac%a1%e5%9e%8b%e7%9f%a9%e9%98%b5%e8%a1%a8%e7%a4%ba.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>n 个变量的二次齐次函数矩阵表示：&lt;/p>
&lt;p>$f(x_1,x_2,\cdots,x_n) = a_{11}x_1^2 + a_{22}x_2^2 + \cdots + a_{nn}x_n^2 + 2a_{12}x_1x_2 + 2a_{13}x_1x_3+\cdots + 2a_{n-1,n}x_{n-1}x_n$&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$x^TAx$​&lt;/font>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$[x_1,x_2,\cdots,x_n]\left[\begin{matrix}&amp;amp;a_{11}\quad a_{12}\quad \cdots \quad a_{1n}\&amp;amp;a_{21}\quad a_{22}\quad\cdots\quad a_{2n}\&amp;amp;\cdots\quad\cdots\quad\cdots\quad\cdots\&amp;amp;a_{n1}\quad a_{n2}\cdots\quad a_{nn}\end{matrix}\right]\left[\begin{matrix}x_1\x_2\\cdots\x_n\end{matrix}\right]$​&lt;/font>​​&lt;/p>
&lt;h4 id="83二次型应用">8.3、二次型应用&lt;/h4>
&lt;p>在机器学习中，我们可以根据数据分布进行模型选择：&lt;/p>
&lt;ul>
&lt;li>如果数据分布是一次型的，那我们就可以选择 Logistic Regression、SVM 等分界面为一次型的模型；&lt;/li>
&lt;li>如果数据分布是二次型的，我们可以选择 naive bayes；&lt;/li>
&lt;li>如果数据分布既不是一次型也不是二次型，那我们可以选择基于决策树的模型，例如 GBDT、随机森林等，或者 DNN（深度神经网络），这些模型都高度非线性，表达能力极强理论上可以拟合任意曲线。&lt;/li>
&lt;/ul>
&lt;h4 id="84hessian-矩阵与二次型">8.4、Hessian 矩阵与二次型&lt;/h4>
&lt;p>&lt;font size = 5 color = 'red'>$A = \left [\begin{matrix} &amp;amp;\frac{\partial^2 f}{\partial^2 x_1},&amp;amp;\frac{\partial^2 f}{\partial x_1 \partial x_2},&amp;amp;\cdots,&amp;amp;\frac{\partial^2 f}{\partial x_1 \partial x_n}\&amp;amp;\frac{\partial^2 f}{\partial x_2 \partial x_1},&amp;amp;\frac{\partial^2 f}{\partial^2 x_2},&amp;amp;\cdots,&amp;amp;\frac{\partial^2 f}{\partial x_2 \partial x_n}\&amp;amp;\cdots,&amp;amp;\cdots,&amp;amp;\cdots,&amp;amp;\cdots\&amp;amp;\frac{\partial^2 f}{\partial x_n \partial x_1},&amp;amp;\frac{\partial^2 f}{\partial x_n\partial x_2},&amp;amp;\cdots,&amp;amp;\frac{\partial^2 f}{\partial^2 x_n}\end{matrix}\right]$​&lt;/font>&lt;/p>
&lt;p>将 Hessian 矩阵 A 转换为二次型：&lt;/p>
&lt;p>$f(x) = \vec{x}^TA\vec{x}$​​ ，其中 $\vec{x}$​​​ 表示非零任意向量&lt;/p>
&lt;ul>
&lt;li>$f(x) &amp;gt; 0,\quad \vec{x} \not=0,\quad x \in R$ ，则 $f(x)$ 为正定二次型，A 为正定矩阵&lt;/li>
&lt;li>$f(x) \ge 0,\quad \vec{x} \not=0,\quad x \in R$​ ，则 $f(x)$​ 为半正定二次型，A 为半正定矩阵&lt;/li>
&lt;li>$f(x) &amp;lt; 0,\quad \vec{x} \not=0,\quad x \in R$​ ，则 $f(x)$​ 为负定二次型，A 为负定矩阵&lt;/li>
&lt;li>$f(x) \le 0,\quad \vec{x} \not=0,\quad x \in R$​ ，则 $f(x)$​ 为半负定二次型，A 为半负定矩阵&lt;/li>
&lt;li>以上皆不是，就叫做不定&lt;/li>
&lt;/ul>
&lt;p>正定效果图，如下所示：&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/7-%e6%ad%a3%e5%ae%9a.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>半正定效果图，如下：&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/8-%e5%8d%8a%e6%ad%a3%e5%ae%9a.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>不定效果图，如下：&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/9-%e4%b8%8d%e5%ae%9a.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p></description></item><item><title>微积分基础</title><link>https://ng-tech.icu/books/mathematics-series/999.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/%E5%BE%AE%E7%A7%AF%E5%88%86%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/mathematics-series/999.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/%E5%BE%AE%E7%A7%AF%E5%88%86%E5%9F%BA%E7%A1%80/</guid><description>&lt;h3 id="1什么是导数">1、什么是导数&lt;/h3>
&lt;h4 id="11导数定义">1.1、导数定义&lt;/h4>
&lt;p>&lt;strong>导数&lt;/strong>（Derivative），也叫导函数值。又名&lt;strong>微商&lt;/strong>，是微积分中的重要基础概念。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/1-%e5%af%bc%e6%95%b0-%e5%88%87%e7%ba%bf.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>当函数 $y = f(x)$ 的自变量 $x$ 在一点 $x_0$ 上产生一个&lt;strong>增量&lt;/strong> $\Delta x$ 时，函数输出值的增量 $\Delta y$ 与自变量增量 $\Delta x$ 的比值在 $\Delta x$ 趋于 0 时的极限 &lt;strong>limit&lt;/strong> 如果存在，那么，&lt;/p>
&lt;p>&lt;strong>limit&lt;/strong> 即为函数 $f(x_0)$​ 在 $x_0$​ 处的导数，记作 $f&amp;rsquo;(x_0)$​ 或 $\frac{df(x_0)}{dx}$​ 、 $\frac{dy}{dx}$​​。&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$f&amp;rsquo;(x_0) = \lim\limits_{\Delta x \rightarrow 0}\frac{\Delta y}{\Delta  x}=\lim\limits_{\Delta x \rightarrow 0}\frac{f(x_0 + \Delta x) - f(x_0)}{\Delta x}$​​​​&lt;/font>&lt;/p>
&lt;p>注意，两者等价：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$f&amp;rsquo;(x_0) =\lim\limits_{\Delta x \rightarrow 0}\frac{f(x_0 + \Delta x) - f(x_0)}{\Delta x} = =\lim\limits_{\Delta x \rightarrow 0}\frac{f(x_0) - f(x_0 - \Delta x)}{\Delta x}$​&lt;/font>&lt;/p>
&lt;p>推而广之，如果函数全域可导：&lt;/p>
&lt;p>&lt;font size = 5 color = 'green'>$f&amp;rsquo;(x) =\lim\limits_{\Delta x \rightarrow 0}\frac{f(x + \Delta x) - f(x)}{\Delta x}  =\lim\limits_{\Delta x \rightarrow 0}\frac{f(x) - f(x - \Delta x)}{\Delta x}$​​​&lt;/font>&lt;/p>
&lt;p>高等数学，引入了极限，极限是高等数学的基础，这一点是高等数学与初等数学最大的区别~&lt;/p>
&lt;h4 id="12导数作用">1.2、导数作用&lt;/h4>
&lt;p>求极值，往往设导数为 0 ，即可进行求解。&lt;/p>
&lt;h3 id="2左右导数与可导函数">2、左右导数与可导函数&lt;/h3>
&lt;p>函数趋近于 0 有两个方向，从左侧趋向于 0 是&lt;strong>左导数&lt;/strong>，从右侧趋向于 0 是&lt;strong>右导数&lt;/strong>。&lt;/p>
&lt;h4 id="21左导数定义">2.1、左导数定义&lt;/h4>
&lt;p>函数 $f(x)$ 在某点 $x_0$ 的某一左半邻域 $(x_0 - \Delta x, x_0)$ 内有定义，当 $\Delta x$ 从左侧无限趋近于 0 时，&lt;/p>
&lt;p>$\lim\limits_{\Delta x \rightarrow 0}\frac{f(x_0) - f(x_0 - \Delta x)}{\Delta x}$​​​​ 的左极限存在，那么就称函数 $f(x)$​​ 在 $x_0$​​​​ 点有左导数，该极限值就是左导数的值。&lt;/p>
&lt;h4 id="22右导数定义">2.2、右导数定义&lt;/h4>
&lt;p>函数 $f(x)$ 在某点 $x_0$ 的某一右半邻域 $(x_0,x_0 + \Delta x)$ 内有定义，当 $\Delta x$ 从右侧无限趋近于 0 时，&lt;/p>
&lt;p>$\lim\limits_{\Delta x \rightarrow 0}\frac{f(x_0 + \Delta x) - f(x_0)}{\Delta x}$​​ 的右极限存在，那么就称函数 f(x) 在 $x_0$​​ 点有右导数，该极限值就是右导数的值。&lt;/p>
&lt;h4 id="23左右导数示例">2.3、左右导数示例&lt;/h4>
&lt;p>下面的绝对值函数的左导数和右导数不相同，左导数是 &lt;strong>-1&lt;/strong> ，右导数是 &lt;strong>+1&lt;/strong>，0 位置不可导 $f(x) = |x|$ 。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/2-%e7%bb%9d%e5%af%b9%e5%80%bc%e5%87%bd%e6%95%b0.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;h4 id="24神经网络激活函数-relu-导数">2.4、神经网络激活函数 Relu 导数&lt;/h4>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/3-relu.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>函数如下：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'> $ f(x) = max(0,x)$&lt;/font>&lt;/p>
&lt;p>即当 $x &amp;gt; 0$ 时，函数表现为 $y = x$；当 $x &amp;lt; 0$ 时，函数表现为 $y = 0$
表现为分段函数的形式：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$f(x) = \left {\begin{aligned} &amp;amp; x \ \  &amp;amp;, x &amp;gt; 0 \ &amp;amp;0\ \ &amp;amp;, x \le 0 \end{aligned}\right.$​​​​&lt;/font>&lt;/p>
&lt;p>则 &lt;strong>Relu 函数&lt;/strong>的导函数为：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\frac{d}{dx}f(x) = \left {\begin{aligned} &amp;amp; 1 \ \ &amp;amp;, x &amp;gt; 0 \ &amp;amp;0\ \ &amp;amp;, x \le 0 \end{aligned}\right.$​​&lt;/font>&lt;/p>
&lt;h4 id="25可导函数">2.5、可导函数&lt;/h4>
&lt;p>函数可导的条件如下：&lt;/p>
&lt;ul>
&lt;li>函数在该点的去心邻域内有定义。&lt;/li>
&lt;li>函数在该点处的左、右导数都存在。&lt;/li>
&lt;li>左导数＝右导数&lt;/li>
&lt;/ul>
&lt;p>&lt;font size = 5 color = 'red'>$\sigma(x) = \frac{1}{1 + e^{-x}}$&lt;/font>&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/4-sigmoid.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>扩展知识点：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>不是所有的函数都有导数，一个函数也不一定在所有的点上都有导数。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>若某函数在某一点导数存在，则称其在这一点可导，否则称为不可导。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>可导的函数一定连续；不连续的函数一定不可导。&lt;/li>
&lt;li>对于可导的函数 $f(x)$， $f&amp;rsquo;(x)$ 也是一个函数，称作 $f(x)$ 的导函数（简称导数）。&lt;/li>
&lt;li>寻找已知的函数在某点的导数或其导函数的过程称为求导。&lt;/li>
&lt;li>求导就是一个求极限的过程，导数的四则运算法则也来源于极限的四则运算法则。&lt;/li>
&lt;li>反之，已知导函数也可以倒过来求原来的函数，即不定积分。&lt;/li>
&lt;li>微积分基本定理说明了求原函数与积分是等价的。&lt;/li>
&lt;li>求导和积分是一对互逆的操作，它们都是微积分学中最为基础的概念。&lt;/li>
&lt;/ul>
&lt;h3 id="3导数的几何与物理含义">3、导数的几何与物理含义&lt;/h3>
&lt;h4 id="31导数的数学几何意义">3.1、导数的数学（几何）意义&lt;/h4>
&lt;p>函数 $y = f(x)$ 在 $x_0$ 点的导数 $f&amp;rsquo;(x_0)$ 的几何意义：表示函数曲线在点 $P(x_0,f(x_0))$​​ 处的切线的斜率（导数的几&lt;/p>
&lt;p>何意义是该函数曲线在这一点上的切线斜率）。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/5-%e5%88%87%e7%ba%bf.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;h4 id="32导数的物理意义">3.2、导数的物理意义&lt;/h4>
&lt;p>导数可以表示运动物体的&lt;strong>瞬时速度&lt;/strong>和&lt;strong>加速度&lt;/strong> ，就直线运动而言，位移关于时间的&lt;strong>一阶&lt;/strong>导数是瞬时速度，&lt;strong>二阶&lt;/strong>导数&lt;/p>
&lt;p>是加速度。&lt;/p>
&lt;p>导数与物理、几何、代数关系密切：在几何中可求切线；在代数中可求瞬时变化率；在物理中可求速度、加速度。&lt;/p>
&lt;h4 id="33自由落体示例">3.3、自由落体示例&lt;/h4>
&lt;p>自由落体的位移随时间的变化公式如下：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$f(t) = \frac{1}{2}9.8\times t^2$​​&lt;/font>&lt;/p>
&lt;p>一阶导数：&lt;/p>
&lt;p>v 表示速度随时间变化公式&lt;/p>
&lt;p>&lt;font size = 5 color = 'green'>$v = f&amp;rsquo;(t) = 9.8 \times t$​ &lt;/font>&lt;/p>
&lt;p>二阶导数：&lt;/p>
&lt;p>&lt;font size = 5 color = 'green'>$G = f&amp;rsquo;&amp;rsquo;(t) = 9.8$&lt;/font>&lt;/p>
&lt;h3 id="4函数求导公式">4、函数求导公式&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">原函数&lt;/th>
&lt;th style="text-align:center">导函数&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">$y = C$ ，C 是常数&lt;/td>
&lt;td style="text-align:center">$y&amp;rsquo; = 0$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$y = x^n$​ ，n 是常数且 $n \not= 0$&lt;/td>
&lt;td style="text-align:center">$y&amp;rsquo; = nx^{n-1}$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$y = lnx$&lt;/td>
&lt;td style="text-align:center">$y&amp;rsquo; = \frac{1}{x}$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$y = log_ax$​ ，$a&amp;gt;0$​ 且$a\not=1$​&lt;/td>
&lt;td style="text-align:center">$y&amp;rsquo; = \frac{1}{xlna}$​&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$y = e^x$&lt;/td>
&lt;td style="text-align:center">$y&amp;rsquo; = e^x$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$y = a^x$&lt;/td>
&lt;td style="text-align:center">$y&amp;rsquo; = a^xlna$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$y = \sqrt[n] {x} = x^{\frac{1}{n}}$​&lt;/td>
&lt;td style="text-align:center">$y&amp;rsquo; = \frac{1}{n}x^{\frac{1}{n} - 1} = \frac{1}{n}x^{\frac{1-n}{n}}$​​&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$y = \frac{1}{x^n}=x^{-n}$​&lt;/td>
&lt;td style="text-align:center">$y&amp;rsquo; = -n\times x^{-n-1} = \frac{-n}{x^{n+1}}$​&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$y = sin(x)$&lt;/td>
&lt;td style="text-align:center">$y&amp;rsquo; = cos(x)$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">……&lt;/td>
&lt;td style="text-align:center">……&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>导数的公式都可以根据基本的极限公式进行推导：&lt;/p>
&lt;p>&lt;font size = 5>$\lim\limits_{n \rightarrow +\infty}(1 +\frac{1}{n})^n = e$&lt;/font>&lt;/p>
&lt;p>&lt;font size = 5>$\lim\limits_{x \rightarrow 0}\frac{sin(x)}{x} = 1$&lt;/font>&lt;/p>
&lt;p>像这样基本的极限公式还有更多……&lt;/p>
&lt;p>三角函数的导数不要管，我们很少会用到它，而且三角函数是周期性函数，而我们的机器学习中很多时候要求是单调的函数，单调增也好，单调减也好，最好不要周期性函数。&lt;/p>
&lt;h3 id="5导数四则运算">5、导数四则运算&lt;/h3>
&lt;p>导数加减：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$(f(x) \pm g(x))&amp;rsquo; = f&amp;rsquo;(x) \pm g&amp;rsquo;(x)$​&lt;/font>&lt;/p>
&lt;p>导数乘法：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$(f(x) g(x))&amp;rsquo; = f&amp;rsquo;(x)g(x) + f(x)g&amp;rsquo;(x)$​​&lt;/font>&lt;/p>
&lt;p>导数除法：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\begin{aligned}(\frac{f(x)}{g(x)})&amp;rsquo; &amp;amp;=(f(x)g^{-1}(x))&amp;rsquo; \\&amp;amp;=f&amp;rsquo;(x)g^{-1}(x) + f(x)g^{-1}(x)&amp;rsquo;\\&amp;amp;=\frac{f&amp;rsquo;(x)g(x)}{g^2(x)} -f(x)\frac{g&amp;rsquo;(x)}{g^2(x)}\\&amp;amp;=\frac{f&amp;rsquo;(x)g(x) - f(x)g&amp;rsquo;(x)}{g^2(x)}\end{aligned}$​​​​​&lt;/font>&lt;/p>
&lt;h3 id="6复合函数求导法则">6、复合函数求导法则&lt;/h3>
&lt;p>一元复合函数 $y = f(\psi(x))$ ，$y = f(u)， u = \psi(x)$&lt;/p>
&lt;p>其求导有链式法则：&lt;/p>
&lt;p>&lt;font size = 6 color = 'red'>$\frac{dy}{dx} = \frac{dy}{du}\frac{du}{dx}$​&lt;/font>&lt;/p>
&lt;p>画出函数关系图： $y \rightarrow u \rightarrow x$ ，可见从 $y$ 到 $x$ 有一条路径，每一段路径（对应一个导数)乘起来。&lt;/p>
&lt;p>这个规则推广到多元复合函数也是适用的。&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$(f(g(x)))&amp;rsquo; = f&amp;rsquo;(g)g&amp;rsquo;(x)$&lt;/font>&lt;/p>
&lt;h3 id="7神经网络激活函数求导">7、神经网络激活函数求导&lt;/h3>
&lt;h4 id="71sigmoid-激活函数">7.1、Sigmoid 激活函数&lt;/h4>
&lt;p>&lt;font size = 5 color = 'red'>$\sigma(x) = \frac{1}{1 + e^{-x}}$​&lt;/font>&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/4-sigmoid.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>其导函数为：&lt;/p>
&lt;p>&lt;font size = 5 color = 'green'>$\begin{aligned} \sigma&amp;rsquo;(x) &amp;amp;= \frac{\partial}{\partial x}\frac{1}{1 + e^{-x}} \\&amp;amp;= \frac{e^{-x}}{(1 + e^{-x})^2}\\&amp;amp; = \frac{1}{(1 + e^{-x})^2}\cdot e^{-x}\\&amp;amp;=\frac{1}{1 + e^{-x}} \cdot (1 - \frac{1}{1 + e^{-x}})\\&amp;amp;=\sigma(x)\cdot (1 - \sigma(x))\end{aligned}$​​​​&lt;/font>&lt;/p>
&lt;h4 id="72tanh-激活函数">7.2、Tanh 激活函数&lt;/h4>
&lt;p>Tanh 函数可以看作是放大并平移的 Sigmoid 函数，但因为是零中心化的 (zero-centered) ，通常收敛速度快于 Sigmoid 函数，下图是二者的对比：&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/6-tanh.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>其函数形式为：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\begin{aligned}tanh(x) &amp;amp;= \frac{e^x - e^{-x}}{e^x + e^{-x}} \\&amp;amp;= \frac{1 - e^{-2x}}{1 + e^{-2x}} \\&amp;amp;= \frac{2 - (1 + e^{-2x})}{1 + e^{-2x}} \\&amp;amp;= \frac{2}{1 + e^{-2x}} -1 \\&amp;amp;= 2\sigma(2x) - 1\end{aligned}$​​&lt;/font>&lt;/p>
&lt;p>其导函数为：&lt;/p>
&lt;p>&lt;font size = 5 color = 'green'>$\begin{aligned}tanh&amp;rsquo;(x) &amp;amp;= \frac{(e^x + e^{-x})^2 -(e^x - e^{-x})^2}{(e^x + e^{-x})^2} \\&amp;amp;= 1-tanh^2(x)\end{aligned}$​&lt;/font>&lt;/p>
&lt;h4 id="73softmax-激活函数">7.3、Softmax 激活函数&lt;/h4>
&lt;p>Softmax 函数将多个标量映射为一个概率分布，其形式为：&lt;/p>
&lt;p>&lt;font size = 6 color = 'red'>$y_i = softmax(z_i) = \frac{e^{z_i}}{\sum\limits_{j=1}^{C}e^{z_j}}$​​​&lt;/font>&lt;/p>
&lt;p>$y_i$​ 表示第 $i$​ 个输出值，即属于类别 $i$​​ 的概率，$\sum\limits_{i = 1}^Cy_i = 1$​&lt;/p>
&lt;p>$z = W^Tx$ ，表示线性方程，Softmax 函数用于多分类，会对应多个方程。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/7-softmax.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>首先求标量形式的导数，即第 $i$​ 个输出对于第 $j$​ 个输入的偏导数：&lt;/p>
&lt;p>&lt;font size = 6 color = 'green'> $\frac{\partial y_i}{\partial z_j} = \frac{\partial \frac{e^{z_i}}{\sum\limits_{j=1}^{C}e^{z_j}}}{\partial z_j}$​​&lt;/font>&lt;/p>
&lt;p>其中 $e^{z_i}$ 对 $z_j$ 求导要分情况讨论：&lt;/p>
&lt;p>&lt;font size = 5 color = 'green'>$\frac{\partial e^{z_i}}{\partial z_j} = \left {\begin{aligned} &amp;amp; e^{z_i}\ \ , \ \ &amp;amp; if \ \ i = j \ &amp;amp;0\ \ ,\ \ &amp;amp;if \ \ i \not= j  \end{aligned}\right.$​​​​&lt;/font>&lt;/p>
&lt;p>那么当 $i = j$​​ 时：&lt;/p>
&lt;p>&lt;font size = 6 color = 'green'>$\begin{aligned}\frac{\partial y_i}{\partial z_j} &amp;amp;= \frac{e^{z_i}\sum\limits_{j=1}^Ce^{z_j} - e^{z_i}e^{z_j}}{(\sum\limits_{j=1}^Ce^{z_j})^2} \\&amp;amp;= \frac{e^{z_i}}{\sum\limits_{j=1}^Ce^{z_j}} - \frac{e^{z_i}}{\sum\limits_{j=1}^Ce^{z_j}}\frac{e^{z_j}}{\sum\limits_{j=1}^Ce^{z_j}} \\&amp;amp;= y_i - y_iy_j\end{aligned}$​&lt;/font>&lt;/p>
&lt;p>当 $i \not= j$​ 时：&lt;/p>
&lt;p>&lt;font size = 6 color = 'green'>$\frac{\partial y_i}{\partial z_j} = \frac{0 - e^{z_i}e^{z_j}}{(\sum\limits_{j=1}^Ce^{z_j})^2} = -y_iy_j$&lt;/font>&lt;/p>
&lt;p>两者合并：&lt;/p>
&lt;p>&lt;font size = 6 color = 'green'>$\frac{\partial y_i}{\partial z_j} = \pmb{1}{i=j}y_i - y_iy_j$&lt;/font>&lt;/p>
&lt;p>其中$\pmb{1}{i=j} = \left{\begin{aligned} &amp;amp; 1, \quad if \ \ i = j \&amp;amp;0,\quad if \ \ i \not= j \end{aligned}\right.$​&lt;/p>
&lt;h3 id="8高阶导数">8、高阶导数&lt;/h3>
&lt;p>前面学的是一阶导数，对导数再次求导就是高阶导数，二阶和二阶以上的导数统称为高阶导数。&lt;/p>
&lt;p>形式如下：&lt;/p>
&lt;p>&lt;font size = 6 color = 'red'>$f&amp;rsquo;&amp;rsquo;(x)$&lt;/font>&lt;/p>
&lt;p>&lt;font size = 6 color = 'red'>$(f&amp;rsquo;(x))&amp;rsquo;$&lt;/font>&lt;/p>
&lt;p>举个栗子：&lt;/p>
&lt;p>&lt;font size = 6 color = 'green'>$(2x^{10})&amp;rsquo; = 20x^9$&lt;/font>&lt;/p>
&lt;p>&lt;font size = 6 color = 'green'>$(2x^{10})&amp;rsquo;&amp;rsquo; = (20x^9)&amp;rsquo; = 180x^8$​&lt;/font>&lt;/p>
&lt;p>高阶导数形式：&lt;/p>
&lt;p>&lt;font size = 6 color = 'red'>$f^{(n)}(x)$&lt;/font>&lt;/p>
&lt;h3 id="9导数与函数单调性">9、导数与函数单调性&lt;/h3>
&lt;p>$f&amp;rsquo;(x) &amp;gt; 0 \quad \uparrow$​ $f&amp;rsquo;(x) &amp;lt; 0 \quad \downarrow$&lt;/p>
&lt;p>函数的导数大于 0，函数是单调增的。函数的导数小于 0，函数是单调减的。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/8-%e5%8d%95%e8%b0%83%e6%80%a7.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>上图函数的导函数如下：&lt;/p>
&lt;p>&lt;font size = 6 color = 'green'>$f&amp;rsquo;(x) = 2x - 2$&lt;/font>&lt;/p>
&lt;ul>
&lt;li>$x &amp;lt; 1$​ 时，$f&amp;rsquo;(x) &amp;lt; 0$​ ，函数单调递减&lt;/li>
&lt;li>$x &amp;gt; 1$ 时，$f&amp;rsquo;(x) &amp;gt; 0$ ，函数单调递增&lt;/li>
&lt;/ul>
&lt;h3 id="10极值定理">10、极值定理&lt;/h3>
&lt;p>导数为我们寻找极值提供依据，对于可导函数而言，因为在极值位置必然有函数的导数等于 0。&lt;/p>
&lt;p>&lt;font size = 6 color = 'red'>$f&amp;rsquo;(x) = 0$​&lt;/font>&lt;/p>
&lt;p>极值处函数的导数等于 0，这是必要条件，但不是充分条件，因为极值处的导数必然等于 0，但是导数等于 0 处不代表一定是极值。比如 $x$​ 的三次方：$f(x) = x^3$&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/9-%e6%9e%81%e5%80%bc.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>其导数为：&lt;/p>
&lt;p>$f&amp;rsquo;(x)=2x^2$ ，令导数为 0， 求得 x = 0，显然 x = 0 ，不是函数的极值！&lt;/p>
&lt;h3 id="11导数与函数凹凸性">11、导数与函数凹凸性&lt;/h3>
&lt;h4 id="111凹凸性概念与判断">11.1、凹凸性概念与判断&lt;/h4>
&lt;p>函数的二阶导数是和函数的凹凸性是有关系的，凹凸性怎么定义的？&lt;/p>
&lt;p>先来做简单的介绍，这里先记住凸函数是向下凸的， 反正就是凹的，是否是凸函数可以通过二阶导数，如果二阶&lt;/p>
&lt;p>导数是大于 0 就是凸函数。$f&amp;rsquo;&amp;rsquo;(x) &amp;gt; 0 $&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/10-%e5%87%bd%e6%95%b0%e5%87%b9%e5%87%b8.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>给定函数 $f(x) = x^2$ ，其二阶导数是 $f&amp;rsquo;&amp;rsquo;(x) = 2 &amp;gt; 0 $​ ，那么该函数是凸函数。&lt;/p>
&lt;h4 id="112知识点拓展">11.2、知识点拓展&lt;/h4>
&lt;p>$f&amp;rsquo;(x) = 0$ ，称之为&lt;strong>驻点&lt;/strong>，驻点是函数增减性的交替点，一侧增一侧减。&lt;/p>
&lt;p>$f&amp;rsquo;&amp;rsquo;(x) = 0$​​ ，称之为&lt;strong>拐点&lt;/strong>，拐点是函数凹凸性的交替点，一侧凸一侧凹。&lt;/p>
&lt;p>举例说明：&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/11-%e9%a9%bb%e7%82%b9%e6%8b%90%e7%82%b9.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>$f(x) = sin(x)$&lt;/p>
&lt;p>$f&amp;rsquo;(x) = cos(x)$​， 令导数为 0 ，左右两侧分别是单调增或单调减。&lt;/p>
&lt;p>$f&amp;rsquo;&amp;rsquo;(x) = -sin(x)$​ ，令导数为 0 ，左右两侧分别是凹凸函数。&lt;/p>
&lt;h3 id="12一元函数泰勒展开">12、一元函数泰勒展开&lt;/h3>
&lt;p>若函数$f(x)$ 在包含 $x_0$ 的某个开区间 $(a,b)$ 上具有 $(n +1)$ 阶导数，那么对于任意 $x \in (a,b)$​，有：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$f(x) \approx \frac{f(x_0)}{0!} + \frac{f&amp;rsquo;(x_0)}{1!}(x - x_0) + \frac{f&amp;rsquo;&amp;rsquo;(x_0)}{2!}(x-x_0)^2 + \cdot \cdot\cdot + \frac{f^{(n+1)}(x_0)}{(n+1)!}(x-x_0)^{n+1}$​​&lt;/font>&lt;/p>
&lt;p>&lt;strong>0！= 1&lt;/strong> 可以看做是对于如下规律的完整：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>5! = 6!/6&lt;/p>
&lt;/li>
&lt;li>
&lt;p>4! = 5!/5&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>
&lt;p>3! = 4!/4&lt;/p>
&lt;/li>
&lt;li>
&lt;p>2! = 3!/3&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>1! = 2!/2&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>&lt;font color = 'green'>0! = 1!/1 = 1&lt;/font>&lt;/li>
&lt;/ul>
&lt;p>上述就是泰勒公式，是一个用函数在某点的信息描述其附近取值的公式。如果函数满足一定的条件，泰勒公式可以用函数在某一点的各阶导数值做系数构建一个多项式来近似表达这个函数。&lt;/p>
&lt;p>方程变形：&lt;/p>
&lt;p>$f(x) = f(x_0 + (x - x_0))$​​ 其中 $(x - x_0)$​​​ 表示一个微小的差值，可以使用$\Delta x$​​​ 表示&lt;/p>
&lt;p>&lt;font color = 'red'>$\begin{aligned}f(x_0 + (x - x_0)) &amp;amp;= \frac{f(x_0)}{0!} + \frac{f&amp;rsquo;(x_0)}{1!}(x - x_0) + \frac{f&amp;rsquo;&amp;rsquo;(x_0)}{2!}(x-x_0)^2 + \cdot \cdot\cdot + \frac{f^{(n+1)}(x_0)}{(n+1)!}(x-x_0)^{n+1}\\&amp;amp;=\frac{f(x_0)}{0!} + \frac{f&amp;rsquo;(x_0)}{1!}\Delta x + \frac{f&amp;rsquo;&amp;rsquo;(x_0)}{2!}\Delta x^2 + \cdot \cdot\cdot + \frac{f^{(n+1)}(x_0)}{(n+1)!}\Delta x^{n+1}\end{aligned}$&lt;/font>&lt;/p>
&lt;p>更加通俗的表示：&lt;/p>
&lt;p>&lt;font size = 6 color = 'green'>$f(x + \Delta x) = \frac{f(x)}{0!} + \frac{f&amp;rsquo;(x)}{1!}\Delta x + \frac{f&amp;rsquo;&amp;rsquo;(x)}{2!}\Delta x^2 + \cdot \cdot\cdot + \frac{f^{(n+1)}(x)}{(n+1)!}\Delta x^{n+1}$​​&lt;/font>&lt;/p>
&lt;p>泰勒展开在高等数学里是非常有用的，它可以用来研究函数某些性质完成很多任务。在机器学习里面，它用来求函&lt;/p>
&lt;p>数的极值用的，很多时候函数 $f(x)$ 可能会非常复杂，无法直接计算，我们用泰勒展开做一个近似，梯度下降法怎&lt;/p>
&lt;p>么做的呢？是做一个近似，保留泰勒展开一阶项。而牛顿法是保留泰勒展开二阶项，忽略二阶以上的项，用泰勒二&lt;/p>
&lt;p>阶展开来进行函数 $f(x)$ 近似表达。&lt;/p>
&lt;p>一阶泰勒公式：&lt;/p>
&lt;p>&lt;font size = 5 color = 'green'>$f(x + \Delta x) \approx \frac{f(x)}{0!} + \frac{f&amp;rsquo;(x)}{1!}\Delta x $&lt;/font>&lt;/p>
&lt;p>二阶泰勒公式：&lt;/p>
&lt;p>&lt;font size = 5 color = 'green'>$f(x + \Delta x) \approx \frac{f(x)}{0!} + \frac{f&amp;rsquo;(x)}{1!}\Delta x + \frac{f&amp;rsquo;&amp;rsquo;(x)}{2!}\Delta x^2$​&lt;/font>&lt;/p></description></item><item><title>线性代数基础</title><link>https://ng-tech.icu/books/mathematics-series/999.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/mathematics-series/999.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E7%A1%80/</guid><description>&lt;h3 id="1向量是什么">1、向量是什么&lt;/h3>
&lt;h4 id="11向量的定义">1.1、向量的定义&lt;/h4>
&lt;p>在数学中，&lt;strong>向量&lt;/strong>（也称为欧几里得向量、几何向量、矢量），指具有&lt;strong>大小&lt;/strong>和&lt;strong>方向&lt;/strong>的量。它可以形象化地表示为带箭头的线段。箭头所指：代表向量的方向；线段长度：代表向量的大小。与向量对应的量叫做&lt;strong>数量&lt;/strong>（物理学中称标量），数量（或标量）只有大小，没有方向。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/1-%e5%90%91%e9%87%8f.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;h4 id="12向量的表示">1.2、向量的表示&lt;/h4>
&lt;p>向量的记法：印刷体记作粗体的字母（如&lt;strong>a,b,u,v&lt;/strong>），书写时在字母顶上加一小箭头&amp;rsquo;&amp;lsquo;→&amp;rsquo;&amp;rsquo;。如果给定向量的起点（A）和终点（B），可将向量记作 $\vec{AB}$​​ 。实际上向量有多种记法，可以用元组表示一个向量，如 $(x_1,x_2)$​ 或 $&amp;lt;x_1,x_2&amp;gt;$​​。在线性代数中，n 元向量可以用 n×1 矩阵表示，如：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$V = \left[\begin{aligned}&amp;amp;x_1\&amp;amp;x_2\&amp;amp;x_3\&amp;amp;x_4\&amp;amp;&amp;hellip;\&amp;amp;x_n\end{aligned}\right]$&lt;/font>&lt;/p>
&lt;p>或者&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$V^T = [x_1,x_2,x_3,x_4,…,x_n]$&lt;/font>&lt;/p>
&lt;p>向量中的每个元素 $x_n$​ ，都称作向量的一个分量。&lt;/p>
&lt;h4 id="13向量物理意义">1.3、向量物理意义&lt;/h4>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/2-%e5%90%91%e9%87%8f.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\vec{OM} = (P,Q,R)$​&lt;/font>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\vec{OM} = \vec{OP} + \vec{OQ} + \vec{OR}$&lt;/font>&lt;/p>
&lt;p>向量的几何意义就是空间中的点，物理意义就是速度或者力这样的矢量。&lt;/p>
&lt;p>向量的分量我们称之为维度，n 维向量集合的全体就构成了 n 维欧式空间，一个 n 维向量其实就是一个 n 维欧式空间的一个点。&lt;/p>
&lt;h3 id="2行向量与列向量">2、行向量与列向量&lt;/h3>
&lt;p>&lt;strong>行向量&lt;/strong>在线性代数中，是一个 $1 \times n$​​ 的矩阵，即矩阵由一个含有 n 个元素的行所组成即行向量。行向量的&lt;strong>转置&lt;/strong>是一个&lt;strong>列向量&lt;/strong>，反之亦然。&lt;/p>
&lt;p>行向量示例：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$V = [x_1,x_2,…,x_n]$&lt;/font>&lt;/p>
&lt;p>在线性代数中，列向量是一个 n×1 的矩阵，即矩阵由一个含有 n 个元素的列所组成。&lt;/p>
&lt;p>列向量示例：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$V = \left[\begin{aligned}&amp;amp;x_1\&amp;amp;x_2\&amp;amp;&amp;hellip;\&amp;amp;x_n\end{aligned}\right]$​&lt;/font>&lt;/p>
&lt;p>为简化书写、方便排版起见，有时会以加上&lt;strong>转置&lt;/strong>符号 T 的行向量表示列向量。&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$V = [x_1,x_2,…,x_n]^T$&lt;/font>&lt;/p>
&lt;p>在机器学习中说道向量一般都是指&lt;strong>列向量&lt;/strong>。&lt;/p>
&lt;h3 id="3向量运算">3、向量运算&lt;/h3>
&lt;h4 id="31向量加减法">3.1、向量加减法&lt;/h4>
&lt;p>等于它们的分量分别相加，显然两个向量的长度得是相等的，减法我们在这里不列举，很容易举一反三。&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\left[\begin{aligned}2\4\2\end{aligned}\right] + \left[\begin{aligned}3\1\7\end{aligned}\right] = \left[\begin{aligned}5\5\9\end{aligned}\right]$&lt;/font>&lt;/p>
&lt;h4 id="32向量数乘">3.2、向量数乘&lt;/h4>
&lt;p>&lt;font size = 5 color = 'red'>$3 \times \left[\begin{aligned}3\1\2\end{aligned}\right] = \left[\begin{aligned}9\3\6\end{aligned}\right]$​​​&lt;/font>&lt;/p>
&lt;h4 id="33转置">3.3、转置&lt;/h4>
&lt;p>&lt;font size = 5 color = 'red'>$\left[\begin{aligned}2\4\2\end{aligned}\right]^T = [2,4,2]$&lt;/font>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$[7,0,-3]^T = \left[\begin{aligned}7\0\-3\end{aligned}\right] $​​&lt;/font>&lt;/p>
&lt;h4 id="34向量内积">3.4、向量内积&lt;/h4>
&lt;p>两个列向量， $A^TB$​，等于对应位置相乘再相加。&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$[2,7,3] \cdot \left[\begin{aligned}3\1\7\end{aligned}\right] = 2\times 3 + 7\times 1 + 3 \times 7 = 34$​​&lt;/font>&lt;/p>
&lt;h4 id="35向量运算法则">3.5、向量运算法则&lt;/h4>
&lt;p>1、实数与向量运算法则，设$\lambda ，\mu$ 是实数，则有：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>结合律：$\lambda(\mu A) = (\lambda\mu)A$&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分配律：$(\lambda + \mu)A = \lambda A + \mu A$ ， $\lambda(A + B) = \lambda A + \lambda B$&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>2、向量内积运算法则&lt;/p>
&lt;ul>
&lt;li>
&lt;p>交换律：$A\cdot B = B\cdot A$&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分配律：$(A + B)\cdot C = A\cdot C + B\cdot C$​&lt;/p>
&lt;/li>
&lt;li>
&lt;p>结合律：$(\lambda A)\cdot B = \lambda(A\cdot B)$&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="4向量的范数">4、向量的范数&lt;/h3>
&lt;p>范数的公式是向量每个分量绝对值 P 次方 再用幂函数计算 P 分之一，这里 P 肯定是整数 1，2，3&amp;hellip;到正无穷都是&lt;/p>
&lt;p>可以的。向量的范数就是把向量变成一个标量，范数的表示就是两个竖线来表示，然后右下角写上 P。&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'> $||A||&lt;em>P = \left [ \sum\limits&lt;/em>{i = 1}^n|a_i|^P\right ]^{\frac{1}{P}}$&lt;/font>&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/3-%e8%8c%83%e6%95%b0.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>&lt;strong>1-范数&lt;/strong>&lt;/p>
&lt;p>&lt;font color = 'red' size = 5>$||X||&lt;em>1 = \sum\limits&lt;/em>{i = 1}^n|x_i|$&lt;/font>​​&lt;/p>
&lt;p>即向量元素绝对值之和，表示 X 到零点的&lt;strong>曼哈顿距离&lt;/strong>，如上图：红色、蓝色、黄色的线条。&lt;/p>
&lt;p>&lt;strong>2-范数&lt;/strong>&lt;/p>
&lt;p>&lt;font size = 5 color='red'>$||X||&lt;em>2 = \sqrt{\sum\limits&lt;/em>{i=1}^nx_i^2}$&lt;/font>​​&lt;/p>
&lt;p>即向量元素的平方和再开方，也叫欧几里得范数，常用计算向量长度，表示 X 到零点的&lt;strong>欧式距离&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>P-范数&lt;/strong>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'> $||X||&lt;em>P = \left [ \sum\limits&lt;/em>{i = 1}^n|x_i|^P\right ]^{\frac{1}{P}}$​&lt;/font>&lt;/p>
&lt;p>即向量元素绝对值的 P 次方和的 $\frac{1}{P}$​ 次幂，表示 X 到零点的 &lt;strong>P 阶闵氏距离&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>$\infty $​-范数&lt;/strong>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$||X||&lt;em>{\infty} = \max\limits&lt;/em>{i}|x_i|$&lt;/font>​​​&lt;/p>
&lt;p>当 P 趋向于正无穷时，即所有向量元素绝对值中的最大值。表示&lt;strong>切比雪夫距离&lt;/strong>。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/4-%e6%97%a0%e7%a9%b7%e8%8c%83%e6%95%b0.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>国际象棋棋盘上二个位置间的切比雪夫距离是指王要从一个位子移至另一个位子需要走的步数。由于王可以往斜前或斜后方向移动一格，因此可以较有效率的到达目的的格子。&lt;/p>
&lt;p>&lt;strong>$-\infty $-范数&lt;/strong>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$||X||&lt;em>{-\infty} = \min\limits&lt;/em>{i}|x_i|$​&lt;/font>&lt;/p>
&lt;p>当 P 趋向于负无穷时，即所有向量元素绝对值中的最小值。&lt;/p>
&lt;h3 id="5特殊向量">5、特殊向量&lt;/h3>
&lt;p>&lt;strong>0 向量&lt;/strong>&lt;/p>
&lt;p>就是分量全部为 0 的向量&lt;/p>
&lt;p>$[0,0,…,0]$&lt;/p>
&lt;p>&lt;strong>单位向量&lt;/strong>&lt;/p>
&lt;p>就是 2-范数为 1、模为 1、长度为 1 的向量。&lt;/p>
&lt;p>向量$\vec{AB}$​ 的长度叫做向量的&lt;strong>模&lt;/strong>，记作 $|\vec{AB}|$。&lt;/p>
&lt;p>计算公式：&lt;/p>
&lt;ul>
&lt;li>空间向量(x,y,z)，其中 x,y,z 表示三个轴上的坐标，模长为：$\sqrt{x^2 + y^2 + z^2}$。&lt;/li>
&lt;li>平面向量(x,y)， 模长为：$\sqrt{x^2 + y^2}$&lt;/li>
&lt;/ul>
&lt;p>根据 2-范数的公式可知，2-范数就是向量的模，对于向量（列向量）来说，2-范数就是：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$X^TX$&lt;/font>&lt;/p>
&lt;h3 id="6矩阵是什么">6、矩阵是什么&lt;/h3>
&lt;p>矩阵就是&lt;strong>二维&lt;/strong>数组，下面是一个 m 乘 n 的矩阵，它有 m 行，n 列，每行每列上面都有元素，每个元素都有行标&lt;/p>
&lt;p>i 和列标 j， $a_{ij}$ 。简称 m × n 矩阵，记作：&lt;/p>
&lt;p>&lt;font size = 6 color = 'red'>$ A = \left{ \begin{matrix}a_{11}  &amp;amp; \cdots &amp;amp; a_{1n} \ a_{21}  &amp;amp; \cdots &amp;amp; a_{2n} \ \vdots &amp;amp; \ddots &amp;amp; \vdots \ a_{m1}  &amp;amp; \cdots &amp;amp; a_{mn}\end{matrix} \right} $​​​​​​​​​&lt;/font>&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>$a_{11}$​​ 的索引是 A[0,0]。&lt;/p>
&lt;p>这 m×n 个数称为矩阵 A 的元素，简称为元，数$a_{ij}$位于矩阵 A 的第 i 行第 j 列，称为矩阵 A 的 $(i,j)$ 元，m×n 矩&lt;/p>
&lt;p>阵 A 也记作 $A_{mn}$ 。&lt;/p>
&lt;h3 id="7常见矩阵">7、常见矩阵&lt;/h3>
&lt;h4 id="71方阵">7.1、方阵&lt;/h4>
&lt;p>如果 m 等于 n，那就称为方阵&lt;/p>
&lt;p>&lt;font size = 6 color = 'red'>$ A = \left [ \begin{matrix}1 &amp;amp; 11 &amp;amp; 3 \ 4 &amp;amp; 9 &amp;amp; 2 \ 7 &amp;amp; 5 &amp;amp; 1\end{matrix} \right ] $​​​​&lt;/font>&lt;/p>
&lt;h4 id="72对称矩阵">7.2、对称矩阵&lt;/h4>
&lt;p>定义是 $a_{ij}$ 等于 $a_{ji}$ 那么就是对称矩阵，对称矩阵首先是个方阵&lt;/p>
&lt;p>&lt;font size = 6 color = 'red'>$ A = \left [ \begin{matrix}1 &amp;amp; 4 &amp;amp; 7 \ 4 &amp;amp; 9 &amp;amp; 2 \ 7 &amp;amp; 2 &amp;amp; 1\end{matrix} \right ] $​&lt;/font>&lt;/p>
&lt;h4 id="73单位矩阵">7.3、单位矩阵&lt;/h4>
&lt;p>主对角线都是 1，其它位置是 0，这称之为单位矩阵，单位矩阵写为 $I$，一定是方阵，等同于数字里面的 1。&lt;/p>
&lt;p>&lt;font size = 6 color = 'red'>$ A = \left [ \begin{matrix}1 &amp;amp; 0 &amp;amp; 0 \ 0 &amp;amp; 1 &amp;amp; 0 \ 0 &amp;amp; 0 &amp;amp; 1\end{matrix} \right ] $​&lt;/font>&lt;/p>
&lt;h4 id="74对角矩阵">7.4、对角矩阵&lt;/h4>
&lt;p>对角矩阵，就是主对角线非 0，其它位置是 0。&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$A = \left[\begin{matrix}\lambda_1 &amp;amp;\cdots &amp;amp;0&amp;amp;0&amp;amp;0\0&amp;amp;\lambda_2&amp;amp;0&amp;amp;0&amp;amp;0\0&amp;amp;\cdots&amp;amp;\cdots&amp;amp;\cdots&amp;amp;0\0&amp;amp;0&amp;amp;\cdots&amp;amp;\cdots&amp;amp;\cdots\0&amp;amp;0&amp;amp;0&amp;amp;\cdots&amp;amp;\lambda_n\end{matrix}\right]$&lt;/font>​​​&lt;/p>
&lt;p>对角矩阵一定是方阵。不然没有对角线！&lt;/p>
&lt;h3 id="8矩阵运算">8、矩阵运算&lt;/h3>
&lt;h4 id="81矩阵加减法">8.1、矩阵加减法&lt;/h4>
&lt;p>矩阵的加法就是矩阵的对应位置相加，减法也是一样就是对应位置相减。&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\left[\begin{matrix}1&amp;amp;3\2&amp;amp;7\5&amp;amp;4\end{matrix}\right] + \left[\begin{matrix}4&amp;amp;6\0&amp;amp;3\2&amp;amp;1\end{matrix}\right] = \left[\begin{matrix}5&amp;amp;9\2&amp;amp;10\7&amp;amp;5\end{matrix}\right]$&lt;/font>&lt;/p>
&lt;h4 id="82数乘">8.2、数乘&lt;/h4>
&lt;p>&lt;font size = 5 color = 'red'>$3 \times \left[\begin{matrix}1&amp;amp;3&amp;amp;5\2&amp;amp;4&amp;amp;3\end{matrix}\right] = \left[\begin{matrix}3&amp;amp;9&amp;amp;15\6&amp;amp;12&amp;amp;9\end{matrix}\right]$&lt;/font>​​&lt;/p>
&lt;h4 id="83矩阵乘法">8.3、矩阵乘法&lt;/h4>
&lt;p>矩阵的乘法和一般的乘法是不太一样！&lt;/p>
&lt;p>它是把第一个矩阵的每一行，和第二个矩阵的每一列拿过来做内积得到结果。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/5-%e7%9f%a9%e9%98%b5%e4%b9%98%e6%b3%95.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\left[\begin{matrix}1&amp;amp;2&amp;amp;1\3&amp;amp;1&amp;amp;0\end{matrix}\right] \cdot\left[\begin{matrix}2&amp;amp;5\0&amp;amp;4\7&amp;amp;2\end{matrix}\right] = \left[\begin{matrix}9&amp;amp;15\6&amp;amp;19\end{matrix}\right] $&lt;/font>​​&lt;/p>
&lt;p>矩阵乘法运算结果&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\rm m \times n \ \cdot \ n\times k = m \times k$​&lt;/font>&lt;/p>
&lt;h4 id="84矩阵转置">8.4、矩阵转置&lt;/h4>
&lt;p>转置的操作和向量是一样的，就是把 $a_{ij}$ 变成 $a_{ji}$​，把行和列互换一下&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\left[\begin{matrix}1&amp;amp;2&amp;amp;1\3&amp;amp;1&amp;amp;0\end{matrix}\right]^T = \left[\begin{matrix}1&amp;amp;3\2&amp;amp;1\1&amp;amp;0\end{matrix}\right]$&lt;/font>&lt;/p>
&lt;h4 id="84矩阵运算法则">8.4、矩阵运算法则&lt;/h4>
&lt;p>矩阵加减法&lt;/p>
&lt;p>满足：分配律、结合律、交换律&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$A + B + C = (A + C) + B$&lt;/font>&lt;/p>
&lt;p>矩阵乘法&lt;/p>
&lt;ul>
&lt;li>满足结合律&lt;/li>
&lt;/ul>
&lt;p>&lt;font size = 5 color = 'red'>$(AB)C = A(BC)$​&lt;/font>&lt;/p>
&lt;ul>
&lt;li>满足分配律&lt;/li>
&lt;/ul>
&lt;p>&lt;font size = 5 color = 'red'>$(A + B)C = AC + BC$​&lt;/font> ，左分配律&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$A(B + C) = AB + AC$​&lt;/font> ，右分配律&lt;/p>
&lt;ul>
&lt;li>不满足交换律&lt;/li>
&lt;/ul>
&lt;p>不一定相等，甚至 AB 的尺寸和 BA 的尺寸是不同的。&lt;/p>
&lt;p>&lt;font size = 5 color ='red'>$AB \not= BA$​&lt;/font>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\left[\begin{matrix}1&amp;amp;2&amp;amp;1\3&amp;amp;1&amp;amp;0\end{matrix}\right] \cdot\left[\begin{matrix}2&amp;amp;5\0&amp;amp;4\7&amp;amp;2\end{matrix}\right] = \left[\begin{matrix}9&amp;amp;15\6&amp;amp;19\end{matrix}\right] $&lt;/font>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\left[\begin{matrix}2&amp;amp;5\0&amp;amp;4\7&amp;amp;2\end{matrix}\right] \cdot \left[\begin{matrix}1&amp;amp;2&amp;amp;1\3&amp;amp;1&amp;amp;0\end{matrix}\right] = \left[\begin{matrix}17&amp;amp;9&amp;amp;2\12&amp;amp;4&amp;amp;0\13&amp;amp;16&amp;amp;7\end{matrix}\right] $​​​​​​​​​​&lt;/font>&lt;/p>
&lt;p>矩阵乘法 + 转置&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$(AB)^T = B^TA^T$&lt;/font>&lt;/p>
&lt;h3 id="9逆矩阵">9、逆矩阵&lt;/h3>
&lt;h4 id="91逆矩阵定义">9.1、逆矩阵定义&lt;/h4>
&lt;p>矩阵有 AB 云散，但是没有 A/B 这么一说，只有逆矩阵。&lt;/p>
&lt;p>逆矩阵怎么定义的？&lt;/p>
&lt;p>假设有个矩阵 A，注意它一定是方阵（必须是方阵），乘以矩阵 B 等于单位矩阵 $I$​ ：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$AB = I$&lt;/font> 或者 &lt;font size = 5 color = 'red'>$BA = I$​&lt;/font>&lt;/p>
&lt;p>那么我们称这里的 B 为 A 的右逆矩阵，和左逆矩阵。&lt;/p>
&lt;p>有个很重要的结论就是，如果这样的 B 存在的话，它的左逆和右逆一定相等，统称为 A 的逆矩阵 $A^{-1}$。则：&lt;/p>
&lt;p>$A = B^{-1}$&lt;/p>
&lt;p>$B = A^{-1}$&lt;/p>
&lt;h4 id="92逆矩阵作用">9.2、逆矩阵作用&lt;/h4>
&lt;p>矩阵求逆有什么用呢？它可以帮助我们解线性方程组，比如 $XW = Y$​ 。两边同时乘以 X 的逆：&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$X^{-1}XW = X^{-1}Y$&lt;/font>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$(X^{-1}X)W = X^{-1}Y$&lt;/font>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$IW = X^{-1}Y$​&lt;/font>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$W = X^{-1}Y$&lt;/font>&lt;/p>
&lt;p>就可以求解出方程的系数，它发明的目的也是干这样的事情用的。&lt;/p>
&lt;p>举例说明：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 三元一次方程&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 3x + 2y + 4z = 19&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2x -y + 3z = 9&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># x + y - z = 0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">],[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">],[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">display&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">Y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># np.linalg.inv表示矩阵求逆&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># dot表示矩阵乘法&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">W&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">linalg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">X&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;求解方程得x,y,z为：&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">W&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">array([[ 3, 2, 4],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [ 2, -1, 3],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [ 1, 1, -1]])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">array([19, 9, 0])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">求解方程得x,y,z为： [1. 2. 3.]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>从这里我们也可以看出来单位矩阵像我们乘法里面的 1。&lt;/p>
&lt;p>逆矩阵相关公式：&lt;/p>
&lt;ul>
&lt;li>$(AB)^{-1} = B^{-1}A^{-1}$&lt;/li>
&lt;li>$(A^{-1})^{-1} = A$&lt;/li>
&lt;li>$(A^T)^{-1} = (A^{-1})^T$​&lt;/li>
&lt;/ul>
&lt;h3 id="10行列式">10、行列式&lt;/h3>
&lt;p>行列式其实在机器学习中用的并不多，一个矩阵必须是方阵，才能计算它的行列式&lt;/p>
&lt;p>行列式是把矩阵变成一个标量&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$\left |\begin{matrix}a_{11}&amp;amp;a_{12}\a_{21}&amp;amp;a_{22}\end{matrix}\right| = a_{11}a_{22} - a_{12}a_{21}$&lt;/font>​&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">A&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">],[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">display&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;矩阵A的行列式是：&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">linalg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">det&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">array([[1, 3],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [2, 5]])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">矩阵A的行列式是：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> -1.0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>行列式在求解，逆矩阵的过程中，起到了作用，行列式&lt;strong>不为 0&lt;/strong>，才可以求解逆矩阵！&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">A&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">],[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">display&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;矩阵A的行列式是：&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">linalg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">det&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">array([[1, 3],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [2, 6]])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">矩阵A的行列式是：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> 0.0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 无法求解行列式，报错信息：LinAlgError: Singular matrix&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;矩阵A的逆矩阵为：&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">linalg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="11伴随矩阵">11、伴随矩阵&lt;/h3>
&lt;h4 id="111伴随矩阵定义">11.1、伴随矩阵定义&lt;/h4>
&lt;p>设有一矩阵 $A$&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/6-%e4%bc%b4%e9%9a%8f%e7%9f%a9%e9%98%b5.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>设 $A_{ij}$ 是矩阵 A 中元素 $a_{ij}$​ 的代数余子式，那么矩阵 $A^*$&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/7-%e4%bc%b4%e9%9a%8f%e7%9f%a9%e9%98%b5.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>称为矩阵 $A$​ 的&lt;strong>伴随矩阵&lt;/strong>&lt;/p>
&lt;h4 id="112代数余子式">11.2、代数余子式&lt;/h4>
&lt;p>1、代数余子式定义&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/8-%e4%bb%a3%e6%95%b0%e4%bd%99%e5%ad%90%e5%bc%8f.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>2、代数余子式计算&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/9-%e4%bd%99%e5%ad%90%e5%bc%8f.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>计算过程如下：&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://assets.ng-tech.icu/book/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%95%B0%E5%AD%A6/11-%e4%bb%a3%e6%95%b0%e4%bd%99%e5%ad%90%e5%bc%8f%e8%ae%a1%e7%ae%97.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;h4 id="113伴随矩阵性质">11.3、伴随矩阵性质&lt;/h4>
&lt;p>&lt;font size = 5 color = 'red'>$AA^* = A^*A = |A|E$​&lt;/font>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$AA^* = A^*A = |A|I$&lt;/font>&lt;/p>
&lt;p>$I,E$ 都表示单位矩阵。&lt;/p>
&lt;h4 id="114伴随矩阵与逆矩阵">11.4、伴随矩阵与逆矩阵&lt;/h4>
&lt;p>&lt;font size = 5 color = 'red'>$AA^{-1} = I$​&lt;/font>&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$AA^* = |A|I$​&lt;/font> ，其中|A| 是行列式&lt;/p>
&lt;p>&lt;font size = 5 color = 'red'>$A\frac{A^*}{|A|} = I$​​&lt;/font>&lt;/p>
&lt;p>根据上式可得：&lt;/p>
&lt;p>&lt;font size = 5 color = 'green'>$A^{-1} = \frac{A^*}{|A|}$&lt;/font>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 声明矩阵&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">A&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">A_bs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span> &lt;span class="c1"># 伴随矩阵&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="c1"># A方阵的行、列数量&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">row&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># 行索引&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">col&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># 列索引&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">row&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 去除行&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">col&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 去除列&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 代数余子式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">A_ij&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ix_&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">col&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">A_bs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(((&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">linalg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">det&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A_ij&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">A_bs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A_bs&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reshape&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">T&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;根据伴随矩阵求逆矩阵：&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">A_bs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">linalg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">det&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;用NumPy模块求逆矩阵 ：&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">linalg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">根据伴随矩阵求逆矩阵：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [[ 1. 3. -2. ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [-1.5 -3. 2.5]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [ 1. 1. -1. ]]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">用NumPy模块求逆矩阵 ：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [[ 1. 3. -2. ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [-1.5 -3. 2.5]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> [ 1. 1. -1. ]]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>