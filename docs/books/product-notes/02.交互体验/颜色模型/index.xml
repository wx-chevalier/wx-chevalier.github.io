<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>颜色模型 | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/product-notes/02.%E4%BA%A4%E4%BA%92%E4%BD%93%E9%AA%8C/%E9%A2%9C%E8%89%B2%E6%A8%A1%E5%9E%8B/</link>
      <atom:link href="https://ng-tech.icu/books/product-notes/02.%E4%BA%A4%E4%BA%92%E4%BD%93%E9%AA%8C/%E9%A2%9C%E8%89%B2%E6%A8%A1%E5%9E%8B/index.xml" rel="self" type="application/rss+xml" />
    <description>颜色模型</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>颜色模型</title>
      <link>https://ng-tech.icu/books/product-notes/02.%E4%BA%A4%E4%BA%92%E4%BD%93%E9%AA%8C/%E9%A2%9C%E8%89%B2%E6%A8%A1%E5%9E%8B/</link>
    </image>
    
    <item>
      <title>彩色图像</title>
      <link>https://ng-tech.icu/books/product-notes/02.%E4%BA%A4%E4%BA%92%E4%BD%93%E9%AA%8C/%E9%A2%9C%E8%89%B2%E6%A8%A1%E5%9E%8B/%E5%BD%A9%E8%89%B2%E5%9B%BE%E5%83%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/product-notes/02.%E4%BA%A4%E4%BA%92%E4%BD%93%E9%AA%8C/%E9%A2%9C%E8%89%B2%E6%A8%A1%E5%9E%8B/%E5%BD%A9%E8%89%B2%E5%9B%BE%E5%83%8F/</guid>
      <description>&lt;h1 id=&#34;彩色图像&#34;&gt;彩色图像&lt;/h1&gt;
&lt;p&gt;两种最为常用的颜色模型，分别是 RGB 颜色模型和 HSV 颜色模型。RGB 颜色模型是在几何形态上呈现立方体结构，与硬件实现关联紧密。HSV 颜色模型在几何形态上呈现椎体结构，更偏向于视觉上直观的感觉。&lt;/p&gt;
&lt;h1 id=&#34;rgb-颜色模型&#34;&gt;RGB 颜色模型&lt;/h1&gt;
&lt;p&gt;RGB 颜色模型应该是我们在平时生活中接触最多的一种颜色模型，也就是我们通常说的红、绿、蓝三原色模型。&lt;/p&gt;
&lt;p&gt;RGB 颜色模型是将红、绿、蓝 3 种不同颜色，根据亮度配比的不同进行混合，从而表现出不同的颜色。由于在实现上使用了 3 种颜色的定量配比，因此该模型也被称为加色混色模型。通过 3 种最基本颜色的混合叠加来表现出任意的一种颜色的方法，特别适用于显示器等主动发光的显示设备。&lt;/p&gt;
&lt;p&gt;值得一提的是，RGB 颜色的展现依赖于设备的颜色空间，不同设备对 RGB 颜色值的检测不尽相同，表现出来的结果也存在差异。这也就使得我们感觉有些手机屏幕颜色特别逼真、绚丽，而另一些就难以令人满意。如下图所示展现了 RGB 颜色模型的空间结构，这是一个立方体结构，在该几何空间中，3 个坐标轴分别代表了 3 种颜色。那么，从理论上讲，任何一种颜色都包含在该立方体结构中。&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://tva1.sinaimg.cn/large/007rAy9hgy1g3oe2buvs4j30m80dxq3o.jpg&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;例如#FFFFFF 代表纯白色，#FF0000 代表正红色。这是采用十六进制对 24 比特展示模式的一种表示方法。开始的两个十六进制数字位表示红色，中间的两位表示绿色，最后的两位表示蓝色，每一种颜色采用 8 比特来表示，3 种颜色共计占用 24 比特。&lt;/p&gt;
&lt;p&gt;我们平时用得最多的 RGB 颜色展示模式也就是 24 比特展示的。这种方法分别将红、绿、蓝 3 种颜色使用 8 比特无符号整数来表示。8 比特无符号整数表示的范围就是 0~(28-1)，也就是[0,255]的整数区间。&lt;/p&gt;
&lt;p&gt;例如，使用一个元组来表示正红色，元组中元素的顺序为红、绿、蓝，则正红色可以表示为(255,0,0)。那么对于黄色这种颜色来讲，它是由红色和绿色两种颜色叠加产生的，所以正黄色可以表示为(255,255,0)。如果我们想要减少该种黄色的亮度该如何操作呢？只需要把红、绿两种颜色同时按比例减少就可以实现了。&lt;/p&gt;
&lt;p&gt;而如果改变它们的比例配比，则可以实现混合后的颜色向某种颜色进行偏移，例如橘黄色就会更加偏向红色一些。&lt;/p&gt;
&lt;h1 id=&#34;hsv-颜色模型&#34;&gt;HSV 颜色模型&lt;/h1&gt;
&lt;p&gt;HSV 颜色模型是一种采用色调（H）、饱和度（S）、明度（V）3 个参数来表示颜色的一种方式。它是根据颜色的直观特征由 A.R.Smith 于 1978 年创制的一种颜色模型。&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://tva1.sinaimg.cn/large/007rAy9hgy1g3oxkdvbvmj30m80fi75a.jpg&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该种颜色模型的空间结构在几何形态上呈现椎体结构。下面分别介绍 HSV 模型的各个参数。&lt;/p&gt;
&lt;p&gt;（1）色调（Hue）&lt;/p&gt;
&lt;p&gt;以角度的形式进行度量，其取值角度范围是[0,360]。红色、绿色、蓝色 3 种颜色以逆时针方向进行排列。例如红色的位置为 0°，绿色为 120°，蓝色的位置为 240°。&lt;/p&gt;
&lt;p&gt;（2）饱和度（Saturation）&lt;/p&gt;
&lt;p&gt;饱和度反映了某种颜色接近光谱色的程度。某一种颜色是由光谱颜色与白色光的混合结果，如果某种颜色中白色的成分越少，则该种颜色越接近光谱色，表现出来的效果就是该种颜色暗且鲜艳，此时饱和度更高。反之，对于低饱和度的颜色来讲，该颜色中包含的白色成分越多，颜色越趋向白色，艳丽程度则下降。&lt;/p&gt;
&lt;p&gt;也就是说，饱和度反映了某种颜色中白色的成分，可以用百分比 0~100％来表示，该数值越高，饱和度越高，光谱颜色的成分越多。&lt;/p&gt;
&lt;p&gt;（3）明度（Value）&lt;/p&gt;
&lt;p&gt;明度表现了某种颜色的明亮程度，可以认为是一种由光线强弱产生的视觉体验。我们看到的颜色越明亮则明度值越高，反之则越低。例如，深紫色和桃红色两种颜色进行对比，深紫色的颜色更加晦暗，而桃红色更加明亮，则认为桃红色的明度要比深紫色的高。同样，我们也可以使用百分比的形式来表示某种颜色的明度。&lt;/p&gt;
&lt;p&gt;这两种模型之间是可以通过数学公式进行相互转换的。&lt;/p&gt;
&lt;h1 id=&#34;links&#34;&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Cl6iAlKYepb4ARhlOSULlQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://mp.weixin.qq.com/s/Cl6iAlKYepb4ARhlOSULlQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.360doc.com/content/13/1105/14/10724725_326803150.shtml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.360doc.com/content/13/1105/14/10724725_326803150.shtml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>灰度图像与二值图像</title>
      <link>https://ng-tech.icu/books/product-notes/02.%E4%BA%A4%E4%BA%92%E4%BD%93%E9%AA%8C/%E9%A2%9C%E8%89%B2%E6%A8%A1%E5%9E%8B/%E7%81%B0%E5%BA%A6%E5%9B%BE%E5%83%8F%E4%B8%8E%E4%BA%8C%E5%80%BC%E5%9B%BE%E5%83%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/product-notes/02.%E4%BA%A4%E4%BA%92%E4%BD%93%E9%AA%8C/%E9%A2%9C%E8%89%B2%E6%A8%A1%E5%9E%8B/%E7%81%B0%E5%BA%A6%E5%9B%BE%E5%83%8F%E4%B8%8E%E4%BA%8C%E5%80%BC%E5%9B%BE%E5%83%8F/</guid>
      <description>&lt;h1 id=&#34;灰度图像与二值图像&#34;&gt;灰度图像与二值图像&lt;/h1&gt;
&lt;p&gt;以 RGB 颜色模型为例，可以认为一张图片的颜色是由包含了红、绿、蓝 3 种不同通道的颜色进行叠加混合而产生的。从数学角度来看，对于一张彩色图片，可以认为其是由 3 个二维矩阵进行叠加混合而产生的，每一个二维矩阵记录了某种颜色在不同位置处的亮度值，那么 3 个二维矩阵就对应了该图片的 3 个最基本的颜色通道。&lt;/p&gt;
&lt;h1 id=&#34;灰度图像&#34;&gt;灰度图像&lt;/h1&gt;
&lt;p&gt;只需要用一个二维矩阵就可以表示一个灰度图像了，我们可以看到这个 8×8 图片所表现的图形是一个字母 Z 的形状。&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://tva1.sinaimg.cn/large/007rAy9hgy1g3p4lae5a9j309j07yjr5.jpg&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;例如，非彩色打印的书籍中的图片就是灰度图像，黑白照片也是灰度图像。这类图片有个特点，虽然这些图片没有包含其他五颜六色的信息，但是，我们依然能够从这些图片中获取到图像的轮廓、纹理、形状等特征。&lt;/p&gt;
&lt;p&gt;我们的直观感觉是正确的，这也说明了灰度图像相对于彩色图像缺少了具体的颜色信息，但是，灰度图像依然能够完好地展示出图像中各个部分的轮廓、纹理、形状等关键特征，同时灰度图片的存储结构相对于彩色图片更为简单。&lt;/p&gt;
&lt;p&gt;这样便会产生一个优点，如果我们想要提取图像中的特征与颜色无太多关联，那么我们就可以选择将彩色图片处理成灰度图片的预处理方式。由于灰度图片的结构更为简单，同时关键信息又不大会损失，这样就可以极大地减少计算量。&lt;/p&gt;
&lt;p&gt;我们可以通过数学公式将 RGB 模型中的红、绿、蓝 3 个矩阵进行合并，合并成一个矩阵，这个矩阵就是代表了灰度图像的矩阵。从彩色图片到灰度图片之间的转化公式就可以表示为：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Igray=［0.299,0.587,0.114］·［Ir,Ig,Ib]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中，Igray 代表灰度图像中的灰度值，［Ir,Ig,Ib］代表彩色图像中 R、G、B 通道中的像素值。上式表示了两个向量进行点乘的过程，例如图片中某一点的 RGB 值为（255,0,100），那么将该图片转化到灰度图片时，对应位置的灰度值为：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Igray=0.299×255+0.587×0+0.114×100=87.645
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;二值图像&#34;&gt;二值图像&lt;/h1&gt;
&lt;p&gt;二值图像顾名思义只有纯黑色和纯白色两种颜色，没有中间过渡的灰色。其数据结构也是一个二维矩阵，只不过这里面的数值只有 0 和 1 两种。&lt;/p&gt;
&lt;p&gt;二值图像是在灰度图像的基础上进一步计算的结果，计算过程比较简单，需要指定一个阈值，然后判断图片中不同点处的灰度值，如果该点处的灰度值高于阈值则该点值为 1，否则为 0，这样也就实现了灰度图片二值化的过程了。&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://tva1.sinaimg.cn/large/007rAy9hgy1g3p4lae5a9j309j07yjr5.jpg&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，二值图像的空间占用量进一步减少了，每一个像素点只需要 1 比特就可以表示了，这对于表示字符这类非黑即白形式的图片具有优势。由于二值图像是在灰度图片的基础上通过阈值判断产生的，这样就会缺少细节部分，只能显示出图片的大致轮廓。不过，这个特性虽然带给我们直观的感觉是很不好的，但是，这在图像的分割等场景中具有很好的利用价值。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
