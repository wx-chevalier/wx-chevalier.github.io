<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RBAC | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/k8s-series/%E6%9D%83%E9%99%90/rbac/</link><atom:link href="https://ng-tech.icu/books/k8s-series/%E6%9D%83%E9%99%90/rbac/index.xml" rel="self" type="application/rss+xml"/><description>RBAC</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>RBAC</title><link>https://ng-tech.icu/books/k8s-series/%E6%9D%83%E9%99%90/rbac/</link></image><item><title>Service Account</title><link>https://ng-tech.icu/books/k8s-series/%E6%9D%83%E9%99%90/rbac/service-account/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/k8s-series/%E6%9D%83%E9%99%90/rbac/service-account/</guid><description>&lt;h1 id="service-account">Service Account&lt;/h1>
&lt;p>Service Account 为 Pod 中的进程提供身份信息。当用户访问集群（例如使用 kubectl 命令）时，apiserver 会将您认证为一个特定的 User Account（目前通常是 admin，除非您的系统管理员自定义了集群配置）。Pod 容器中的进程也可以与 apiserver 联系当它们在联系 apiserver 的时候，它们会被认证为一个特定的 Service Account（例如 default）。&lt;/p>
&lt;h1 id="使用默认的-service-account-访问-api-server">使用默认的 Service Account 访问 API server&lt;/h1>
&lt;p>当您创建 pod 的时候，如果您没有指定一个 service account，系统会自动得在与该 pod 相同的 namespace 下为其指派一个 default service account。如果您获取刚创建的 pod 的原始 json 或 yaml 信息（例如使用 kubectl get pods/podename -o yaml 命令），您将看到 spec.serviceAccountName 字段已经被设置为 default。&lt;/p>
&lt;p>您可以在 pod 中使用自动挂载的 service account 凭证来访问 API，如 Accessing the Cluster 中所描述。Service account 是否能够取得访问 API 的许可取决于您使用的 授权插件和策略。在 1.6 以上版本中，您可以选择取消为 service account 自动挂载 API 凭证，只需在 service account 中设置 automountServiceAccountToken: false：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ServiceAccount&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build-robot&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">automountServiceAccountToken&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># ...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 1.6 以上版本中，您也可以选择只取消单个 pod 的 API 凭证自动挂载：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">my-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">serviceAccountName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build-robot&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">automountServiceAccountToken&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># ...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果在 pod 和 service account 中同时设置了 automountServiceAccountToken, pod 设置中的优先级更高。&lt;/p>
&lt;h1 id="使用多个-service-account">使用多个 Service Account&lt;/h1>
&lt;p>每个 namespace 中都有一个默认的叫做 default 的 service account 资源。您可以使用以下命令列出 namespace 下的所有 serviceAccount 资源。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ kubectl get serviceAccounts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NAME SECRETS AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">default &lt;span class="m">1&lt;/span> 1d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>您可以像这样创建一个 ServiceAccount 对象：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ cat &amp;gt; /tmp/serviceaccount.yaml &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: ServiceAccount
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: build-robot
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ kubectl create -f /tmp/serviceaccount.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">serviceaccount &lt;span class="s2">&amp;#34;build-robot&amp;#34;&lt;/span> created
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果您看到如下的 service account 对象的完整输出信息：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ kubectl get serviceaccounts/build-robot -o yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apiVersion: v1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kind: ServiceAccount
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">metadata:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> creationTimestamp: 2015-06-16T00:12:59Z
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> name: build-robot
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> namespace: default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> resourceVersion: &lt;span class="s2">&amp;#34;272500&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> selfLink: /api/v1/namespaces/default/serviceaccounts/build-robot
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uid: 721ab723-13bc-11e5-aec2-42010af0021e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">secrets:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- name: build-robot-token-bvbk5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后您将看到有一个 token 已经被自动创建，并被 service account 引用。您可以使用授权插件来 设置 service account 的权限。设置非默认的 service account，只需要在 pod 的 spec.serviceAccountName 字段中将 name 设置为您想要用的 service account 名字即可。在 pod 创建之初 service account 就必须已经存在，否则创建将被拒绝。您不能更新已创建的 pod 的 service account。您可以清理 service account，如下所示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ kubectl delete serviceaccount/build-robot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="手动创建-service-account-的-api-token">手动创建 service account 的 API token&lt;/h1>
&lt;p>假设我们已经有了一个如上文提到的名为 ”build-robot“ 的 service account，我们手动创建一个新的 secret。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ cat &amp;gt; /tmp/build-robot-secret.yaml &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: Secret
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: build-robot-secret
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> annotations:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> kubernetes.io/service-account.name: build-robot
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">type: kubernetes.io/service-account-token
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ kubectl create -f /tmp/build-robot-secret.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">secret &lt;span class="s2">&amp;#34;build-robot-secret&amp;#34;&lt;/span> created
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>现在您可以确认下新创建的 secret 取代了 “build-robot” 这个 service account 原来的 API token。所有已不存在的 service account 的 token 将被 token controller 清理掉。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ kubectl describe secrets/build-robot-secret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Name: build-robot-secret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Namespace: default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Labels: &amp;lt;none&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Annotations: kubernetes.io/service-account.name&lt;span class="o">=&lt;/span>build-robot,kubernetes.io/service-account.uid&lt;span class="o">=&lt;/span>870ef2a5-35cf-11e5-8d06-005056b45392
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Type: kubernetes.io/service-account-token
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">Data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">====&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ca.crt: &lt;span class="m">1220&lt;/span> bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">token: ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">namespace: &lt;span class="m">7&lt;/span> bytes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="为-service-account-添加-imagepullsecret">为 service account 添加 ImagePullSecret&lt;/h1>
&lt;p>首先，创建一个 imagePullSecret，详见这里。然后，确认已创建。如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ kubectl get secrets myregistrykey
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NAME TYPE DATA AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">myregistrykey kubernetes.io/.dockerconfigjson &lt;span class="m">1&lt;/span> 1d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后，修改 namespace 中的默认 service account 使用该 secret 作为 imagePullSecret。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">kubectl patch serviceaccount default -p &lt;span class="s1">&amp;#39;{&amp;#34;imagePullSecrets&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;myregistrykey&amp;#34;}]}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Vi 交互过程中需要手动编辑：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ kubectl get serviceaccounts default -o yaml &amp;gt; ./sa.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ cat sa.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apiVersion: v1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kind: ServiceAccount
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">metadata:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> creationTimestamp: 2015-08-07T22:02:39Z
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> name: default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> namespace: default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> resourceVersion: &lt;span class="s2">&amp;#34;243024&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> selfLink: /api/v1/namespaces/default/serviceaccounts/default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uid: 052fb0f4-3d50-11e5-b066-42010af0d7b6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">secrets:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- name: default-token-uudge
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ vi sa.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>editor session not shown&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>delete line with key &lt;span class="s2">&amp;#34;resourceVersion&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>add lines with &lt;span class="s2">&amp;#34;imagePullSecret:&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ cat sa.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apiVersion: v1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kind: ServiceAccount
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">metadata:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> creationTimestamp: 2015-08-07T22:02:39Z
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> name: default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> namespace: default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> selfLink: /api/v1/namespaces/default/serviceaccounts/default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uid: 052fb0f4-3d50-11e5-b066-42010af0d7b6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">secrets:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- name: default-token-uudge
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">imagePullSecrets:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- name: myregistrykey
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ kubectl replace serviceaccount default -f ./sa.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">serviceaccounts/default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>现在，所有当前 namespace 中新创建的 pod 的 spec 中都会增加如下内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">imagePullSecrets&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">myregistrykey&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>