<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Charts | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/k8s-series/4.%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/charts/</link><atom:link href="https://ng-tech.icu/books/k8s-series/4.%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/charts/index.xml" rel="self" type="application/rss+xml"/><description>Charts</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Charts</title><link>https://ng-tech.icu/books/k8s-series/4.%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/charts/</link></image><item><title>Chart 文件结构</title><link>https://ng-tech.icu/books/k8s-series/4.%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/charts/chart-%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/k8s-series/4.%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/charts/chart-%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</guid><description>&lt;h1 id="chart-文件结构">Chart 文件结构&lt;/h1>
&lt;p>chart 被组织为一个目录内的文件集合。目录名称是 chart 的名称（没有版本信息）。例如，描述 WordPress 的 chart 将被存储在 wordpress / 目录中。在这个目录里面，Helm 期望如下这样一个的结构的目录树：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-s" data-lang="s">&lt;span class="line">&lt;span class="cl">&lt;span class="n">wordpress&lt;/span>&lt;span class="o">/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Chart.yaml&lt;/span> &lt;span class="c1"># A YAML file containing information about the chart&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LICENSE&lt;/span> &lt;span class="c1"># OPTIONAL: A plain text file containing the license for the chart&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">README.md&lt;/span> &lt;span class="c1"># OPTIONAL: A human-readable README file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">requirements.yaml&lt;/span> &lt;span class="c1"># OPTIONAL: A YAML file listing dependencies for the chart&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">values.yaml&lt;/span> &lt;span class="c1"># The default configuration values for this chart&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">charts&lt;/span>&lt;span class="o">/&lt;/span> &lt;span class="c1"># A directory containing any charts upon which this chart depends.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">templates&lt;/span>&lt;span class="o">/&lt;/span> &lt;span class="c1"># A directory of templates that, when combined with values,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># will generate valid Kubernetes manifest files.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">templates&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">NOTES.txt&lt;/span> &lt;span class="c1"># OPTIONAL: A plain text file containing short usage notes&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Helm 保留使用 charts / 和 templates / 目录以及上面列出的文件名称。其他文件将被忽略。&lt;/p>
&lt;h2 id="chartyaml-文件">Chart.yaml 文件&lt;/h2>
&lt;p>Chart.yaml 文件是 Chart 所必需的。它包含以下字段：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">The chart API version, always &amp;#34;v1&amp;#34; (required)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">The name of the chart (required)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">A SemVer 2 version (required)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kubeVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">A SemVer range of compatible Kubernetes versions (optional)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">A single-sentence description of this project (optional)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">keywords&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">A list of keywords about this project (optional)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">home&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">The URL of this project&amp;#39;s home page (optional)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">sources&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">A list of URLs to source code for this project (optional)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">maintainers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># (optional)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">The maintainer&amp;#39;s name (required for each maintainer)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">email&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">The maintainer&amp;#39;s email (optional for each maintainer)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">A URL for the maintainer (optional for each maintainer)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">engine&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">gotpl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># The name of the template engine (optional, defaults to gotpl)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">icon&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">A URL to an SVG or PNG image to be used as an icon (optional).&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">appVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">The version of the app that this contains (optional). This needn&amp;#39;t be SemVer.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">deprecated&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Whether this chart is deprecated (optional, boolean)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">tillerVersion: The version of Tiller that this chart requires. This should be expressed as a SemVer range&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;&amp;gt;2.0.0&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">(optional)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果熟悉 Chart.yaml Helm Classic 的文件格式，注意到指定依赖性的字段已被删除。这是因为新的 chart 使用 charts / 目录表示依赖关系。其他字段将被忽略。&lt;/p>
&lt;h2 id="charts-和版本控制">Charts 和版本控制&lt;/h2>
&lt;p>每个 chart 都必须有一个版本号。版本必须遵循 SemVer 2 标准。与 Helm Class 格式不同，Kubernetes Helm 使用版本号作为发布标记。存储库中的软件包由名称加版本识别。例如，nginx version 字段设置为 1.2.3 将被命名为：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-s" data-lang="s">&lt;span class="line">&lt;span class="cl">&lt;span class="n">nginx&lt;/span>&lt;span class="m">-1.2.3&lt;/span>&lt;span class="n">.tgz&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>更复杂的 SemVer 2 命名也是支持的，例如 version: 1.2.3-alpha.1+ef365。但非 SemVer 命名是明确禁止的。虽然 Helm Classic 和 Deployment Manager 在 chart 方面都非常适合 GitHub，但 Kubernetes Helm 并不依赖或需要 GitHub 甚至 Git。因此，它不使用 Git SHA 进行版本控制。&lt;/p>
&lt;p>许多 Helm 工具都使用 Chart.yaml 的 version 字段，其中包括 CLI 和 Tiller 服务。在生成包时，helm package 命令将使用它在 Chart.yaml 中的版本名作为包名。系统假定 chart 包名称中的版本号与 Chart.yaml 中的版本号相匹配。不符合这个情况会导致错误。&lt;/p>
&lt;h3 id="appversion-字段">appVersion 字段&lt;/h3>
&lt;p>请注意，appVersion 字段与 version 字段无关。这是一种指定应用程序版本的方法。例如，drupal chart 可能有一个 appVersion: 8.2.1，表示 chart 中包含的 Drupal 版本（默认情况下）是 8.2.1。该字段是信息标识，对 chart 版本没有影响。&lt;/p>
&lt;h3 id="弃用-charts">弃用 charts&lt;/h3>
&lt;p>在管理 chart tepo 库中的 chart 时，有时需要弃用 chart。Chart.yaml 的 deprecated 字段可用于将 chart 标记为已弃用。如果存储库中最新版本的 chart 标记为已弃用，则整个 chart 被视为已弃用。chart 名称稍后可以通过发布未标记为已弃用的较新版本来重新使用。废弃 chart 的工作流程根据 helm/charts 项目的工作流程如下：&lt;/p>
&lt;ul>
&lt;li>更新 chart 的 Chart.yaml 以将 chart 标记为启用，并且更新版本&lt;/li>
&lt;li>在 chart Repository 中发布新的 chart 版本&lt;/li>
&lt;li>从源代码库中删除 chart（例如 git）&lt;/li>
&lt;/ul>
&lt;h2 id="chart-许可证文件自述文件和说明文件">Chart 许可证文件，自述文件和说明文件&lt;/h2>
&lt;p>Chart 还可以包含描述 chart 的安装，配置，使用和许可证的文件。LICENSE 文件是一个纯文本文件，包含 chart 的 &lt;a href="https://en.wikipedia.org/wiki/Software_license" target="_blank" rel="noopener">许可证&lt;/a>。Chart 可以包含许可证，它可能在模板中具有编程逻辑，因此不仅仅是配置。如果需要，还可以为 chart 安装的应用程序提供单独的许可证。&lt;/p>
&lt;p>Chart 的自述文件应由 Markdown（README.md）语法格式化，并且通常应包含：&lt;/p>
&lt;ul>
&lt;li>chart 提供的应用程序或服务的描述&lt;/li>
&lt;li>运行 chart 的任何前提条件或要求&lt;/li>
&lt;li>选项 &lt;code>values.yaml&lt;/code> 和默认值的说明&lt;/li>
&lt;li>任何其他可能与安装或配置 chart 相关的信息&lt;/li>
&lt;/ul>
&lt;p>chart 还可以包含一个简短的纯文本 &lt;code>templates/NOTES.txt&lt;/code> 文件，在安装后以及查看版本状态时将打印出来。此文件将作为模板 &lt;a href="https://whmzsu.github.io/helm-doc-zh-cn/chart/charts-zh_cn.html#templates-and-values" target="_blank" rel="noopener">template&lt;/a> 进行评估，并可用于显示使用说明，后续步骤或任何其他与发布 chart 相关的信息。例如，可以提供用于连接到数据库或访问 Web UI 的指令。由于运行时，该文件被打印到标准输出 &lt;code>helm install&lt;/code> 或 &lt;code>helm status&lt;/code>，建议保持内容简短并把更多细节指向自述文件。&lt;/p></description></item><item><title>Hooks</title><link>https://ng-tech.icu/books/k8s-series/4.%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/charts/hooks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/k8s-series/4.%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/charts/hooks/</guid><description>&lt;h1 id="hooks">Hooks&lt;/h1>
&lt;p>Helm 提供了一个 hook 机制，允许 chart 开发人员在 release 的生命周期中的某些点进行干预。例如，可以使用 hooks 来：&lt;/p>
&lt;ul>
&lt;li>在加载任何其他 chart 之前，在安装过程中加载 ConfigMap 或 Secret。&lt;/li>
&lt;li>在安装新 chart 之前执行作业以备份数据库，然后在升级后执行第二个作业以恢复数据。&lt;/li>
&lt;li>在删除 release 之前运行作业，以便在删除 release 之前优雅地停止服务。&lt;/li>
&lt;/ul>
&lt;p>Hooks 像常规模板一样工作，但它们具有特殊的注释，可以使 Helm 以不同的方式使用它们。&lt;/p>
&lt;h1 id="可用的-hooks">可用的 Hooks&lt;/h1>
&lt;p>定义了以下 hooks：&lt;/p>
&lt;ul>
&lt;li>预安装 pre-install:：在模板渲染后执行，但在 Kubernetes 中创建任何资源之前执行。&lt;/li>
&lt;li>安装后 post-install：在所有资源加载到 Kubernetes 后执行&lt;/li>
&lt;li>预删除 pre-delete：在从 Kubernetes 删除任何资源之前执行删除请求。&lt;/li>
&lt;li>删除后 post-delete：删除所有 release 的资源后执行删除请求。&lt;/li>
&lt;li>升级前 pre-upgrade：在模板渲染后，但在任何资源加载到 Kubernetes 之前执行升级请求（例如，在 Kubernetes 应用操作之前）。&lt;/li>
&lt;li>升级后 post-upgrade：在所有资源升级后执行升级。&lt;/li>
&lt;li>预回滚 pre-rollback：在渲染模板之后，但在任何资源已回滚之前，在回滚请求上执行。&lt;/li>
&lt;li>回滚后 post-rollback：在修改所有资源后执行回滚请求。&lt;/li>
&lt;/ul>
&lt;h1 id="hook-声明">Hook 声明&lt;/h1>
&lt;p>Hook 只是 Kubernetes manifest 文件，在 metadata 部分有特殊的注释 。因为他们是模板文件，可以使用所有的 Normal 模板的功能，包括读取 .Values，.Release 和 .Template。例如，在此模板中, 存储在 templates/post-install-job.yaml 的声明要在 post-install 阶段运行作业：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">batch/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Job&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{.Release.Name}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app.kubernetes.io/managed-by&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{{&lt;span class="l">.Release.Service | quote}}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app.kubernetes.io/instance&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{{&lt;span class="l">.Release.Name | quote}}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">helm.sh/chart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{.Chart.Name}}-{{.Chart.Version}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># This is what defines this resource as a hook. Without this line, the&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># job is considered part of the release.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;helm.sh/hook&amp;#34;: &lt;/span>&lt;span class="l">post-install&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;helm.sh/hook-weight&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;-5&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;helm.sh/hook-delete-policy&amp;#34;: &lt;/span>&lt;span class="l">hook-succeeded&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{.Release.Name}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app.kubernetes.io/managed-by&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{{&lt;span class="l">.Release.Service | quote}}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app.kubernetes.io/instance&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{{&lt;span class="l">.Release.Name | quote}}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">helm.sh/chart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{.Chart.Name}}-{{.Chart.Version}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restartPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Never&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">post-install-job&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;alpine:3.3&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/sleep&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;{{default&amp;#34;&lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="s2">&amp;#34;.Values.sleepyTime}}&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注释使这个模板成为 hook：&lt;/p>
&lt;pre tabindex="0">&lt;code> annotations:
&amp;#34;helm.sh/hook&amp;#34;: post-install
&lt;/code>&lt;/pre>&lt;p>一个资源可以部署多个 hook：&lt;/p>
&lt;pre tabindex="0">&lt;code> annotations:
&amp;#34;helm.sh/hook&amp;#34;: post-install,post-upgrade
&lt;/code>&lt;/pre>&lt;p>同样，实现一个给定的 hook 的不同种类资源数量没有限制。例如，我们可以将 secret 和 config map 声明为预安装 hook。&lt;/p>
&lt;p>子 chart 声明 hook 时，也会评估这些 hook。顶级 chart 无法禁用子 chart 所声明的 hook。&lt;/p>
&lt;p>可以为一个 hook 定义一个权重，这将有助于建立一个确定性的执行顺序。权重使用以下注释来定义：&lt;/p>
&lt;pre tabindex="0">&lt;code> annotations:
&amp;#34;helm.sh/hook-weight&amp;#34;: &amp;#34;5&amp;#34;
&lt;/code>&lt;/pre>&lt;p>hook 权重可以是正数或负数，但必须表示为字符串。当 Tiller 开始执行一个特定类型的 hook (例：&lt;code>pre-install&lt;/code> hooks &lt;code>post-install&lt;/code> hooks, 等等) 执行周期时，它会按升序对这些 hook 进行排序。&lt;/p>
&lt;p>还可以定义确定何时删除相应的 hook 资源的策略。hook 删除策略使用以下注释来定义：&lt;/p>
&lt;pre tabindex="0">&lt;code> annotations:
&amp;#34;helm.sh/hook-delete-policy&amp;#34;: hook-succeeded
&lt;/code>&lt;/pre>&lt;p>可以选择一个或多个定义的注释值：&lt;/p>
&lt;ul>
&lt;li>&amp;ldquo;hook-succeeded&amp;rdquo; 指定 Tiller 应该在 hook 成功执行后删除 hook。&lt;/li>
&lt;li>&amp;ldquo;hook-failed&amp;rdquo; 指定如果 hook 在执行期间失败，Tiller 应该删除 hook。&lt;/li>
&lt;li>&amp;ldquo;before-hook-creation&amp;rdquo; 指定 Tiller 应在删除新 hook 之前删除以前的 hook。&lt;/li>
&lt;/ul></description></item><item><title>存储库</title><link>https://ng-tech.icu/books/k8s-series/4.%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/charts/%E5%AD%98%E5%82%A8%E5%BA%93/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/k8s-series/4.%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/charts/%E5%AD%98%E5%82%A8%E5%BA%93/</guid><description>&lt;h1 id="搭建私有-chart-仓库">搭建私有 Chart 仓库&lt;/h1>
&lt;p>chart 库是带有一个 index.yaml 文件和任意个打包 cahrt 的 HTTP 服务器。当准备好分享 chart 时，首选方法是将其上传到 chart 库。&lt;/p>
&lt;p>由于 chart 库可以是任何可以提供 YAML 和 tar 文件并可以回答 GET 请求的 HTTP 服务器，因此当托管自己的 chart 库时，很多选择。例如，可以使用 Google 云端存储（GCS）存储桶，Amazon S3 存储桶，Github Pages，甚至可以创建自己的 Web 服务器。&lt;/p>
&lt;h1 id="chart-库结构">chart 库结构&lt;/h1>
&lt;p>chart 库由打包的 chart 和一个名为的特殊文件组成，index.yaml 其中包含 chart 库中所有 chart 的索引。通常，index.yaml 描述的 chart 也是托管在同一台服务器上，源代码文件也是如此。例如，chart 库的布局 &lt;a href="https://example.com/charts" target="_blank" rel="noopener">https://example.com/charts&lt;/a> 可能如下所示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-s" data-lang="s">&lt;span class="line">&lt;span class="cl">&lt;span class="n">charts&lt;/span>&lt;span class="o">/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|-&lt;/span> &lt;span class="n">index.yaml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|-&lt;/span> &lt;span class="n">alpine&lt;/span>&lt;span class="m">-0.1.2&lt;/span>&lt;span class="n">.tgz&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|-&lt;/span> &lt;span class="n">alpine&lt;/span>&lt;span class="m">-0.1.2&lt;/span>&lt;span class="n">.tgz.prov&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这种情况下，索引文件包含有关一个 chart（Alpine chart）的信息，并提供该 chart 的下载 URL &lt;a href="https://example.com/charts/alpine-0.1.2.tgz" target="_blank" rel="noopener">https://example.com/charts/alpine-0.1.2.tgz&lt;/a>。不要求 chart 包与 index.yaml 文件位于同一台服务器上 。但是，发在一起这样做通常是最简单的。&lt;/p>
&lt;h1 id="托管-chart-库">托管 chart 库&lt;/h1>
&lt;p>本部分介绍了提供 chart 库的几种方法。&lt;/p>
&lt;h2 id="chartmuseum">ChartMuseum&lt;/h2>
&lt;p>Helm 提供了一个 open-source Helm 库服务叫 &lt;a href="https://chartmuseum.com/" target="_blank" rel="noopener">ChartMuseum&lt;/a>，你可以自己托管这个服务.&lt;/p>
&lt;p>ChartMuseum 支撑多种云存储后端. 配置它指向你存放 chart 包的目录或者 bucket，index.yaml 文件会自动动态生成。&lt;/p>
&lt;p>它也可以通过 &lt;a href="https://github.com/helm/charts/tree/master/stable/chartmuseum" target="_blank" rel="noopener">Helm chart&lt;/a> 部署:&lt;/p>
&lt;pre tabindex="0">&lt;code>helm install stable/chartmuseum
&lt;/code>&lt;/pre>&lt;p>或者 &lt;a href="https://hub.docker.com/r/chartmuseum/chartmuseum/tags" target="_blank" rel="noopener">Docker image&lt;/a>:&lt;/p>
&lt;pre tabindex="0">&lt;code>docker run --rm -it \
-p 8080:8080 \
-v $(pwd)/charts:/charts \
-e DEBUG=true \
-e STORAGE=local \
-e STORAGE_LOCAL_ROOTDIR=/charts \
chartmuseum/chartmuseum
&lt;/code>&lt;/pre>&lt;p>你可以将它加到本地存储库:&lt;/p>
&lt;pre tabindex="0">&lt;code>helm repo add chartmuseum http://localhost:8080
&lt;/code>&lt;/pre>&lt;p>ChartMuseum 提供其他特性, 如 chart 上传的 API。&lt;/p></description></item><item><title>依赖管理</title><link>https://ng-tech.icu/books/k8s-series/4.%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/charts/%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/k8s-series/4.%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/charts/%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/</guid><description>&lt;h1 id="chart-依赖关系">Chart 依赖关系&lt;/h1>
&lt;p>在 Helm 中，一个 chart 可能依赖于任何数量的其他 chart。这些依赖关系可以通过 requirements.yaml 文件动态链接或引入 charts/ 目录并手动管理。虽然有一些团队需要手动管理依赖关系的优势，但声明依赖关系的首选方法是使用 chart 内部的 requirements.yaml 文件。&lt;/p>
&lt;h2 id="用-requirementsyaml-来管理依赖关系">用 requirements.yaml 来管理依赖关系&lt;/h2>
&lt;p>requirements.yaml 文件是列出 chart 的依赖关系的简单文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">dependencies&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apache&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1.2.3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://example.com/charts&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">mysql&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3.2.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://another.example.com/charts&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>该 name 字段是 chart 的名称。&lt;/li>
&lt;li>version 字段是 chart 的版本。&lt;/li>
&lt;li>repository 字段是 chart repo 的完整 URL。请注意，还必须使用 helm repo add 添加该 repo 到本地才能使用。&lt;/li>
&lt;/ul>
&lt;p>有了依赖关系文件，你可以通过运行 helm dependency update，它会使用你的依赖关系文件将所有指定的 chart 下载到你的 charts/ 目录中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ helm dep up foochart
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hang tight &lt;span class="k">while&lt;/span> we grab the latest from your chart repositories...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...Successfully got an update from the &lt;span class="s2">&amp;#34;local&amp;#34;&lt;/span> chart repository
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...Successfully got an update from the &lt;span class="s2">&amp;#34;stable&amp;#34;&lt;/span> chart repository
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...Successfully got an update from the &lt;span class="s2">&amp;#34;example&amp;#34;&lt;/span> chart repository
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...Successfully got an update from the &lt;span class="s2">&amp;#34;another&amp;#34;&lt;/span> chart repository
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Update Complete. Happy Helming!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Saving &lt;span class="m">2&lt;/span> charts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Downloading apache from repo http://example.com/charts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Downloading mysql from repo http://another.example.com/charts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当 helm dependency update 检索 chart 时，它会将它们作为 chart 存档存储在 charts/ 目录中。因此，对于上面的示例，可以在 chart 目录中看到以下文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-s" data-lang="s">&lt;span class="line">&lt;span class="cl">&lt;span class="n">charts&lt;/span>&lt;span class="o">/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">apache&lt;/span>&lt;span class="m">-1.2.3&lt;/span>&lt;span class="n">.tgz&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mysql&lt;/span>&lt;span class="m">-3.2.1&lt;/span>&lt;span class="n">.tgz&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过 requirements.yaml 管理 chart 是一种轻松更新 chart 的好方法，还可以在整个团队中共享 requirements 信息。&lt;/p>
&lt;h2 id="requirementsyaml-中的-alias-字段">requirements.yaml 中的 alias 字段&lt;/h2>
&lt;p>除上述其他字段外，每个 requirement 条目可能包含可选字段 alias。为依赖的 chart 添加别名会将 chart 放入依赖关系中，并使用别名作为新依赖关系的名称。如果需要使用其他名称访问 chart，可以使用 alias。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># parentchart/requirements.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">dependencies&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">subchart&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://localhost:10191&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0.1.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alias&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">new-subchart-1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">subchart&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://localhost:10191&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0.1.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alias&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">new-subchart-2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">subchart&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://localhost:10191&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0.1.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在上面的例子中，我们将得到 parentchart 的 3 个依赖关系：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-s" data-lang="s">&lt;span class="line">&lt;span class="cl">&lt;span class="n">subchart&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">new&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">subchart&lt;/span>&lt;span class="m">-1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">new&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">subchart&lt;/span>&lt;span class="m">-2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="requirementsyaml-中的-tags-和-condition-字段">requirements.yaml 中的 tags 和 condition 字段&lt;/h2>
&lt;p>除上述其他字段外，每个需求条目可能包含可选字段 tags 和 condition。所有 charts 都会默认加载。如果存在 tags 或 condition 字段，将对它们进行评估并用于控制应用的 chart 的加载。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Condition: condition 字段包含一个或多个 YAML 路径（用逗号分隔）。如果此路径存在于顶级父级的值中并且解析为布尔值，则将根据该布尔值启用或禁用 chart。只有在列表中找到的第一个有效路径才被评估，如果没有路径存在，那么该条件不起作用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Tags: 标签字段是与此 chart 关联的 YAML 标签列表。在顶级父级的值中，可以通过指定标签和布尔值来启用或禁用所有带有标签的 chart。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># parentchart/requirements.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">dependencies&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">subchart1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://localhost:10191&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0.1.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">condition&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">subchart1.enabled, global.subchart1.enabled&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">front-end&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">subchart1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">subchart2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://localhost:10191&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0.1.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">condition&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">subchart2.enabled,global.subchart2.enabled&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">back-end&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">subchart2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># parentchart/values.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">subchart1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">front-end&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">back-end&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在上面的示例中，所有带有标签的 front-end 的 charts 都将被禁用，但由于 subchart1.enabled 的值在父项值中为 “真”，因此条件将覆盖该 front-end 标签，subchart1 会启用。由于 subchart2 被标记 back-end 和标签的计算结果为 true，subchart2 将被启用。还要注意的是，虽然 subchart2 有一个在 requirements.yaml 中指定的条件，但父项的值中没有对应的路径和值，因此条件无效。&lt;/p>
&lt;p>&lt;code>--set&lt;/code> 参数可使用来更改 tag 和 conditions 值。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">helm install --set tags.front-end&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> --set subchart2.enabled&lt;span class="o">=&lt;/span>&lt;span class="nb">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Conditions (设置 values) 会覆盖 tags 配置。第一个存在的 condition 路径生效，后续该 chart 的 condition 路径将被忽略。&lt;/li>
&lt;li>如果 chart 的某 tag 的任一 tag 的值为 true，那么该 tag 的值为 true，并启用这个 chart。&lt;/li>
&lt;li>Tags 和 conditions 值必须在顶级父级的值中进行设置。&lt;/li>
&lt;li>&lt;code>tags:&lt;/code> 值中的关键字必须是顶级关键字。目前不支持全局和嵌套 &lt;code>tags:&lt;/code> 表格。&lt;/li>
&lt;/ul>
&lt;h1 id="依赖管理">依赖管理&lt;/h1>
&lt;p>所有使用 helm 部署的应用中如果没有特别指定 chart 的名字都会生成一个随机的 Release name，例如 romping-frog、sexy-newton 等，跟启动 docker 容器时候容器名字的命名规则相同，而真正的资源对象的名字是在 YAML 文件中定义的名字，我们成为 App name，两者连接起来才是资源对象的实际名字：Release name-App name。&lt;/p>
&lt;p>而使用 helm chart 部署的包含依赖关系的应用，都会使用同一套 Release name，在配置 YAML 文件的时候一定要注意在做服务发现时需要配置的服务地址，如果使用环境变量的话，需要像下面这样配置。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">SERVICE_NAME&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">value&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ .Release.Name }}-{{ .Values.image.env.SERVICE_NAME }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这是使用了 Go template 的语法。至于 &lt;code>{{ .Values.image.env.SERVICE_NAME }}&lt;/code> 的值是从 values.yaml 文件中获取的，所以需要在 values.yaml 中增加如下配置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">SERVICE_NAME&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">k8s-app-monitor-test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="本地依赖">本地依赖&lt;/h2>
&lt;p>在本地当前 chart 配置的目录下启动 helm server，我们不指定任何参数，直接使用默认端口启动。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">helm serve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将该 repo 加入到 repo list 中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">helm repo add &lt;span class="nb">local&lt;/span> http://localhost:8879
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在浏览器中访问 &lt;a href="http://localhost:8879/" target="_blank" rel="noopener">http://localhost:8879&lt;/a> 可以看到所有本地的 chart。&lt;/p>
&lt;p>然后下载依赖到本地。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">helm dependency update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样所有的 chart 都会下载到本地的 &lt;code>charts&lt;/code> 目录下。&lt;/p>
&lt;h2 id="共享">共享&lt;/h2>
&lt;p>我们可以修改 Chart.yaml 中的 helm chart 配置信息，然后使用下列命令将 chart 打包成一个压缩文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ helm package .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打包出 mychart-0.1.0.tgz 文件，我们可以在 requirements.yaml 中定义应用所依赖的 chart，例如定义对 mariadb 的依赖：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">dependencies&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">mariadb&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0.6.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://kubernetes-charts.storage.googleapis.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 helm lint .命令可以检查依赖和模板配置是否正确。&lt;/p></description></item></channel></rss>