<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>基础 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/k8s-series/%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/%E5%9F%BA%E7%A1%80/</link><atom:link href="https://ng-tech.icu/books/k8s-series/%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml"/><description>基础</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>基础</title><link>https://ng-tech.icu/books/k8s-series/%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/%E5%9F%BA%E7%A1%80/</link></image><item><title>命令</title><link>https://ng-tech.icu/books/k8s-series/%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/%E5%9F%BA%E7%A1%80/%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/k8s-series/%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/%E5%9F%BA%E7%A1%80/%E5%91%BD%E4%BB%A4/</guid><description>&lt;h1 id="常用命令">常用命令&lt;/h1>
&lt;p>Helm 是由 Deis 发起的一个开源工具，有助于简化部署和管理 Kubernetes 应用。在本章的实践中，我们也会使用 Helm 来简化很多应用的安装操作。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://i.postimg.cc/HkrFs1Cb/image.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>在 Linux 中可以使用 Snap 安装 Heml：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ sudo snap install helm --classic
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 通过键入如下命令，在 Kubernetes 群集上安装 Tiller&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm init --upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在缺省配置下，Helm 会利用 &amp;ldquo;gcr.io/kubernetes-helm/tiller&amp;rdquo; 镜像在 Kubernetes 集群上安装配置 Tiller；并且利用 &amp;ldquo;&lt;a href="https://kubernetes-charts.storage.googleapis.com" target="_blank" rel="noopener">https://kubernetes-charts.storage.googleapis.com&lt;/a>&amp;rdquo; 作为缺省的 stable repository 的地址。由于在国内可能无法访问 &amp;ldquo;gcr.io&amp;rdquo;, &amp;ldquo;storage.googleapis.com&amp;rdquo; 等域名，阿里云容器服务为此提供了镜像站点。请执行如下命令利用阿里云的镜像来配置 Helm：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ helm init --upgrade -i registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.5.1 --stable-repo-url https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 删除默认的源&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm repo remove stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置 Helm 命令自动补全&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">source&lt;/span> &amp;lt;&lt;span class="o">(&lt;/span>helm completion zsh&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">source&lt;/span> &amp;lt;&lt;span class="o">(&lt;/span>helm completion bash&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 增加新的国内镜像源&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm repo add stable https://burdenbear.github.io/kube-charts-mirror/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm repo add stable https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看 Helm 源添加情况&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm repo list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Helm 的常见命令如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看在存储库中可用的所有 Helm Charts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 删除并更新源 or https://burdenbear.github.io/kube-charts-mirror/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm repo remove stable &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> helm repo add stable https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 更新 Charts 列表以获取最新版本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm repo update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 部署某个本地 Chart，指定命名空间与额外的配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm install --namespace ufc --name ufc-dev -f ./deployment/ufc/dev-values.yaml ./charts/ufc/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看某个 Chart 的变量&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm inspect values stable/mysql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看在群集上安装的 Charts 列表&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 调试某个配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm install --debug --dry-run ./mychart
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 校验某个配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ docker run -it --rm --name ct --volume &lt;span class="k">$(&lt;/span>&lt;span class="nb">pwd&lt;/span>&lt;span class="k">)&lt;/span>:/data quay.io/helmpack/chart-testing:v2.3.0 sh -c &lt;span class="s2">&amp;#34;ct lint --all --debug --chart-dirs /data/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 更新某个配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm upgrade my-release stable/external-dns
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm upgrade -f panda.yaml happy-panda stable/mariadb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 删除某个 Charts 的部署&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ helm del --purge wordpress-test
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 为 Tiller 部署添加授权&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ kubectl create serviceaccount --namespace kube-system tiller
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ kubectl create clusterrolebinding tiller-cluster-rule --clusterrole&lt;span class="o">=&lt;/span>cluster-admin --serviceaccount&lt;span class="o">=&lt;/span>kube-system:tiller
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ kubectl patch deploy --namespace kube-system tiller-deploy -p &lt;span class="s1">&amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;template&amp;#34;:{&amp;#34;spec&amp;#34;:{&amp;#34;serviceAccount&amp;#34;:&amp;#34;tiller&amp;#34;}}}}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>组件</title><link>https://ng-tech.icu/books/k8s-series/%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/%E5%9F%BA%E7%A1%80/%E7%BB%84%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/k8s-series/%E7%94%9F%E6%80%81%E6%89%A9%E5%B1%95/helm/%E5%9F%BA%E7%A1%80/%E7%BB%84%E4%BB%B6/</guid><description>&lt;h1 id="helm-组件">Helm 组件&lt;/h1>
&lt;p>Helm 采用客户端/服务器架构，有如下组件组成：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Helm CLI 是 Helm 客户端，可以在本地执行。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Tiller 是服务器端组件，在 K8s 群集上运行，并管理 K8s 应用程序的生命周期。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Repository 是 Chart 仓库，Helm 客户端通过 HTTP 协议来访问仓库中 Chart 的索引文件和压缩包。&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>