<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>语法基础 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/shell-%E7%BC%96%E7%A8%8B/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</link><atom:link href="https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/shell-%E7%BC%96%E7%A8%8B/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml"/><description>语法基础</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>语法基础</title><link>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/shell-%E7%BC%96%E7%A8%8B/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</link></image><item><title>变量</title><link>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/shell-%E7%BC%96%E7%A8%8B/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%8F%98%E9%87%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/shell-%E7%BC%96%E7%A8%8B/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%8F%98%E9%87%8F/</guid><description>&lt;h1 id="变量">变量&lt;/h1>
&lt;p>Shell 中存在三种变量：&lt;/p>
&lt;ul>
&lt;li>局部变量：局部变量在脚本或命令中定义，仅在当前 Shell 实例中有效，其他 Shell 启动的程序不能访问局部变量。&lt;/li>
&lt;li>环境变量：所有的程序，包括 Shell 启动的程序，都能访问环境变量，有些程序需要环境变量来保证其正常运行。必要的时候 Shell 脚本也可以定义环境变量。&lt;/li>
&lt;li>Shell 变量：Shell 变量是由 Shell 程序设置的特殊变量。Shell 变量中有一部分是环境变量，有一部分是局部变量，这些变量保证了 Shell 的正常运行。&lt;/li>
&lt;/ul>
&lt;h2 id="shell-变量">Shell 变量&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>System Variable&lt;/th>
&lt;th>Meaning&lt;/th>
&lt;th>To View Variable Value Type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>BASH_VERSION&lt;/td>
&lt;td>Holds the version of this instance of bash.&lt;/td>
&lt;td>echo &lt;code>$BASH_VERSION&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HOSTNAME&lt;/td>
&lt;td>The name of the your computer.&lt;/td>
&lt;td>&lt;code>echo $HOSTNAME&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CDPATH&lt;/td>
&lt;td>The search path for the cd command.&lt;/td>
&lt;td>&lt;code>echo $CDPATH&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HISTFILE&lt;/td>
&lt;td>The name of the file in which command history is saved.&lt;/td>
&lt;td>&lt;code>echo $HISTFILE&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HISTFILESIZE&lt;/td>
&lt;td>The maximum number of lines contained in the history file.&lt;/td>
&lt;td>&lt;code>echo $HISTFILESIZE&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HISTSIZE&lt;/td>
&lt;td>The number of commands to remember in the command history. The default value is 500.&lt;/td>
&lt;td>&lt;code>echo $HISTSIZE&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HOME&lt;/td>
&lt;td>The home directory of the current user.&lt;/td>
&lt;td>&lt;code>echo $HOME&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IFS&lt;/td>
&lt;td>The Internal Field Separator that is used for word splitting after expansion and to split lines into words with the read builtin command. The default value is &lt;space>&lt;tab>&lt;newline>.&lt;/td>
&lt;td>&lt;code>echo $IFS&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>LANG&lt;/td>
&lt;td>Used to determine the locale category for any category not specifically selected with a variable starting with &lt;code>LC_&lt;/code>.&lt;/td>
&lt;td>&lt;code>echo $LANG&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PATH&lt;/td>
&lt;td>The search path for commands. It is a colon-separated list of directories in which the shell looks for commands.&lt;/td>
&lt;td>&lt;code>echo $PATH&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PS1&lt;/td>
&lt;td>Your prompt settings.&lt;/td>
&lt;td>&lt;code>echo $PS1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TMOUT&lt;/td>
&lt;td>The default timeout for the read builtin command. Also in an interactive shell, the value is interpreted as the number of seconds to wait for input after issuing the command. If not input provided it will logout user.&lt;/td>
&lt;td>&lt;code>echo $TMOUT&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TERM&lt;/td>
&lt;td>Your login terminal type.&lt;/td>
&lt;td>&lt;code>echo $TERM export TERM=vt100&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SHELL&lt;/td>
&lt;td>Set path to login shell.&lt;/td>
&lt;td>&lt;code>echo $SHELL&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DISPLAY&lt;/td>
&lt;td>Set X display name&lt;/td>
&lt;td>&lt;code>echo $DISPLAY export DISPLAY=:0.1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>EDITOR&lt;/td>
&lt;td>Set name of default text editor.&lt;/td>
&lt;td>&lt;code>export EDITOR=/usr/bin/vim&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="变量定义">变量定义&lt;/h1>
&lt;p>定义变量时，变量名不加美元符号，并且变量名和等号之间不能有空格；使用一个定义过的变量，只要在变量名前面加美元符号即可，如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">your_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;qinjx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$your_name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">your_name&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在程序执行过程中，使用 unset 命令删除变量。它可以删除函数和 Shell 变量。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 删除变量&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">unset&lt;/span> variable_name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">vech&lt;/span>&lt;span class="o">=&lt;/span>Bus
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$vech&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">unset&lt;/span> vech
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$vech&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意，变量赋值的时候等号两边不可以包含空格：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">no&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">no&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">no&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们也可以将某个语句的执行结果赋值给某个变量：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> file in &lt;span class="k">$(&lt;/span>ls /etc&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> file in &lt;span class="sb">`&lt;/span>ls /etc&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>变量名外面的花括号是可选的，为了帮助解释器识别变量的边界，区分譬如 &lt;code>${skill}Script&lt;/code> 这样的情况。除了显式地直接赋值，还可以用语句给变量赋值，如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> file in *&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="只读变量">只读变量&lt;/h2>
&lt;p>使用 readonly 命令可以将变量定义为只读变量，只读变量的值不能被改变：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">myUrl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;http://www.google.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">readonly&lt;/span> myUrl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建一个名为 DATA 的常量变量，并使其值在整个 Shell 脚本中始终相同，即不能更改：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">readonly&lt;/span> &lt;span class="nv">DATA&lt;/span>&lt;span class="o">=&lt;/span>/home/sales/data/feb09.dat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$DATA&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/home/sales/data/feb09.dat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DATA&lt;/span>&lt;span class="o">=&lt;/span>/tmp/foo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Error ... readonly variable&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>并且 unset 关键字不可作用于只读变量。&lt;/p>
&lt;h2 id="变量导出">变量导出&lt;/h2>
&lt;p>我们可以使用 export 来导出变量：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">backup&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/nas10/mysql&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Backup dir &lt;/span>&lt;span class="nv">$backup&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Backup dir &lt;/span>&lt;span class="nv">$backup&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> -p
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>默认情况下，所有用户定义的变量都是局部变量。它们不会导出到新流程。使用 export 命令将变量和函数导出到子进程。如果没有给出变量名或函数名，或者如果给出了-p 选项，则将打印出在此 shell 中导出的所有名称的列表。-n 的参数表示要从后续的 NAME 中删除导出属性。&lt;/p>
&lt;h1 id="变量检测与默认值">变量检测与默认值&lt;/h1>
&lt;h2 id="存在性检测">存在性检测&lt;/h2>
&lt;p>如果未定义变量，则可以使用以下语法停止执行 Bash 脚本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="si">${&lt;/span>&lt;span class="nv">varName&lt;/span>&lt;span class="p">?Error varName is not defined&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="si">${&lt;/span>&lt;span class="nv">varName&lt;/span>&lt;span class="p">:?Error varName is not defined or is empty&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建一个名为 varcheck.sh 的 shell 脚本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1"># varcheck.sh: Variable sanity check with :?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="p">:?Error command line argument not passed&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Backup path is &lt;/span>&lt;span class="nv">$path&lt;/span>&lt;span class="s2">.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;I&amp;#39;m done if &lt;/span>&lt;span class="nv">$path&lt;/span>&lt;span class="s2"> is set.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run it as follows:&lt;/p>
&lt;pre tabindex="0">&lt;code>chmod +x varcheck.sh
./varcheck.sh /home
Backup path is /home.
I&amp;#39;m done if $path is set.
&lt;/code>&lt;/pre>&lt;p>Run the script without any arguments:&lt;/p>
&lt;pre tabindex="0">&lt;code>./varcheck.sh: line 3: 1: Error command line argument not passed
&lt;/code>&lt;/pre>&lt;h2 id="变量默认值">变量默认值&lt;/h2>
&lt;p>我们可以使用如下方式设置变量的默认值：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">grandslam&lt;/span>&lt;span class="p">=Maria Sharapova&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">grandslam&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">DefaultValueHere&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nv">msg&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">update&lt;/span>&lt;span class="p"> articles or snippets&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 返回默认值且赋值&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">grandslam&lt;/span>&lt;span class="p">:=Maria Sharapova&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>很多时候在函数调用的时候，也可以通过这种方式传入默认值：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">die&lt;span class="o">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">local&lt;/span> &lt;span class="nv">error&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="p">:=Undefined error&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$0&lt;/span>&lt;span class="s2">: &lt;/span>&lt;span class="nv">$LINE&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="nv">$error&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">die &lt;span class="s2">&amp;#34;File not found&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">die
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>表达式</title><link>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/shell-%E7%BC%96%E7%A8%8B/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/shell-%E7%BC%96%E7%A8%8B/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid><description>&lt;h1 id="shell-中表达式">Shell 中表达式&lt;/h1>
&lt;h1 id="curly-braces">Curly braces&lt;/h1>
&lt;p>花括号（{..}）展开以创建模式，语法为：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span> pattern1, pattern2, patternN &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">text&lt;span class="o">{&lt;/span> pattern1, pattern2, patternN &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">text1&lt;span class="o">{&lt;/span> pattern1, pattern2, patternN &lt;span class="o">}&lt;/span>text2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">command&lt;/span> something/&lt;span class="o">{&lt;/span> pattern1, pattern2, patternN &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>典型用法如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> I like &lt;span class="o">{&lt;/span>tom,jerry&lt;span class="o">}&lt;/span> &lt;span class="c1"># I like tom jerry&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> file&lt;span class="o">{&lt;/span>1,2,3&lt;span class="o">}&lt;/span>.txt &lt;span class="c1"># file1.txt file2.txt file3.txt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> file&lt;span class="o">{&lt;/span>1..5&lt;span class="o">}&lt;/span>.txt &lt;span class="c1"># file1.txt file2.txt file3.txt file4.txt file5.txt&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>生成的文件名不需要存在。您还可以为括号内的每个模式运行命令。通常，您可以键入以下内容列出三个文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ ls /etc/&lt;span class="o">{&lt;/span>resolv.conf,hosts,passwd&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ rm -v hello.&lt;span class="o">{&lt;/span>sh,py,pl,c&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="wildcards通配符">Wildcards（通配符）&lt;/h1>
&lt;p>Bash 支持如下的通配符：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>*&lt;/code> - Matches any string, including the null string&lt;/p>
&lt;/li>
&lt;li>
&lt;p>? - Matches any single (one) character.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>[&amp;hellip;] - Matches any one of the enclosed characters.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>要显示存储在 &lt;code>/etc&lt;/code> 目录中的所有配置（.conf）文件，请输入：&lt;/p>
&lt;pre tabindex="0">&lt;code>ls /etc/*.conf
&lt;/code>&lt;/pre>&lt;p>要显示所有 C 项目头文件，请输入：&lt;/p>
&lt;pre tabindex="0">&lt;code>ls *.h
&lt;/code>&lt;/pre>&lt;p>要显示所有 C 项目.c 文件，请输入：&lt;/p>
&lt;pre tabindex="0">&lt;code>ls *.c
&lt;/code>&lt;/pre>&lt;p>您可以将通配符和花括号结合使用：&lt;/p>
&lt;pre tabindex="0">&lt;code>ls *.{c,h}
&lt;/code>&lt;/pre>&lt;p>样本输出：&lt;/p>
&lt;pre tabindex="0">&lt;code>f.c fo1.c fo1.h fo2.c fo2.h fo3.c fo3.h fo4.c fo4.h fo5.c fo5.h t.c
&lt;/code>&lt;/pre>&lt;p>To list all png file (image1.png, image2.png&amp;hellip;image7.png, imageX.png), enter:&lt;/p>
&lt;pre tabindex="0">&lt;code>ls image?.png
&lt;/code>&lt;/pre>&lt;p>要列出所有以字母 a 或 b 开头的文件配置文件，请输入：&lt;/p>
&lt;pre tabindex="0">&lt;code>ls /etc/[ab]*.conf
&lt;/code>&lt;/pre>&lt;h1 id="别名">别名&lt;/h1>
&lt;p>别名不过是命令的快捷方式。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;command&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;command arg1 arg2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建一个名为 c 的别名以清除终端屏幕，输入：&lt;/p>
&lt;pre tabindex="0">&lt;code>alias c=&amp;#39;clear&amp;#39;
&lt;/code>&lt;/pre>&lt;p>要清除终端，请输入：&lt;/p>
&lt;pre tabindex="0">&lt;code>c
&lt;/code>&lt;/pre>&lt;p>创建一个名为 d 的别名以显示系统日期和时间，输入：&lt;/p>
&lt;pre tabindex="0">&lt;code>alias d=&amp;#39;date&amp;#39;
d
&lt;/code>&lt;/pre>&lt;p>样本输出：&lt;/p>
&lt;pre tabindex="0">&lt;code>Tue Oct 20 01:38:59 IST 2009
&lt;/code>&lt;/pre>&lt;p>使用 alias 命令创建并列出别名，然后使用 unalias 命令删除别名。语法为：&lt;/p>
&lt;pre tabindex="0">&lt;code>unalias alias-name
unalias c
unalias c d
&lt;/code>&lt;/pre>&lt;p>要列出当前定义的别名，请输入：&lt;/p>
&lt;pre tabindex="0">&lt;code>alias
alias c=&amp;#39;clear&amp;#39;
alias d=&amp;#39;date&amp;#39;
&lt;/code>&lt;/pre>&lt;p>如果需要取消取消对名为 d 的命令的使用，请输入：&lt;/p>
&lt;pre tabindex="0">&lt;code>unalias d
alias
&lt;/code>&lt;/pre>&lt;p>如果给出了-a 选项，那么除去所有别名定义，输入：&lt;/p>
&lt;pre tabindex="0">&lt;code>unalias -a
alias
&lt;/code>&lt;/pre>&lt;p>Example ~/&lt;a href="https://bash.cyberciti.biz/guide/.bashrc" target="_blank" rel="noopener">.bashrc&lt;/a> script:&lt;/p>
&lt;pre tabindex="0">&lt;code># make sure bc start with standard math library
alias bc=&amp;#39;bc -l&amp;#39;
# protect cp, mv, rm command with confirmation
alias cp=&amp;#39;cp -i&amp;#39;
alias mv=&amp;#39;mv -i&amp;#39;
alias rm=&amp;#39;rm -i&amp;#39;
# Make sure dnstop only shows eth1 stats
alias dnstop=&amp;#39;dnstop -l 5 eth1&amp;#39;
# Make grep pretty
alias grep=&amp;#39;grep --color&amp;#39;
# ls command shortcuts
alias l.=&amp;#39;ls -d .* --color=tty&amp;#39;
alias ll=&amp;#39;ls -l --color=tty&amp;#39;
alias ls=&amp;#39;ls --color=tty&amp;#39;
# Centos/RHEL server update
alias update=&amp;#39;yum update&amp;#39;
alias updatey=&amp;#39;yum -y update&amp;#39;
# vi is vim
alias vi=&amp;#39;vim&amp;#39;
# Make sure vnstat use eth1 by default
alias vnstat=&amp;#39;vnstat -i eth1&amp;#39;
&lt;/code>&lt;/pre></description></item><item><title>数值类型</title><link>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/shell-%E7%BC%96%E7%A8%8B/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/shell-%E7%BC%96%E7%A8%8B/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/</guid><description>&lt;h1 id="数值类型">数值类型&lt;/h1>
&lt;p>我们可以使用如下方式创建数值类型变量：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">declare&lt;/span> -i &lt;span class="nv">y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$y&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1"># set x,y and z to an integer data type&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">declare&lt;/span> -i &lt;span class="nv">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">declare&lt;/span> -i &lt;span class="nv">y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">declare&lt;/span> -i &lt;span class="nv">z&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">z&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$((&lt;/span> x &lt;span class="o">+&lt;/span> y &lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$x&lt;/span>&lt;span class="s2"> + &lt;/span>&lt;span class="nv">$y&lt;/span>&lt;span class="s2"> = &lt;/span>&lt;span class="nv">$z&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># try setting to character &amp;#39;a&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">x&lt;/span>&lt;span class="o">=&lt;/span>a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">z&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$((&lt;/span> x &lt;span class="o">+&lt;/span> y &lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$x&lt;/span>&lt;span class="s2"> + &lt;/span>&lt;span class="nv">$y&lt;/span>&lt;span class="s2"> = &lt;/span>&lt;span class="nv">$z&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="数学计算">数学计算&lt;/h1>
&lt;p>您可以对 Bash Shell 变量执行数学运算。bash shell 具有内置的算术选项。您还可以使用外部命令，例如 expr 和 bc 计算器。通过使用以下格式放置整数表达式来完成算术扩展和求值：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="k">$((&lt;/span>expression&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">$((&lt;/span> n1+n2 &lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">$((&lt;/span> n1/n2 &lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">$((&lt;/span> n1-n2 &lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">((&lt;/span>count++&lt;span class="o">))&lt;/span> &lt;span class="c1"># increment value of variable &amp;#39;count&amp;#39; by one.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">((&lt;/span>&lt;span class="nv">total&lt;/span>&lt;span class="o">+=&lt;/span>current&lt;span class="o">))&lt;/span> &lt;span class="c1"># set total = total+current.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">((&lt;/span>current&amp;gt;max?max&lt;span class="o">=&lt;/span>current:max&lt;span class="o">=&lt;/span>max&lt;span class="o">))&lt;/span> &lt;span class="c1"># ternary expression.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 x 和 y 变量加两个数字。使用文本编辑器创建一个名为 add.sh 的 Shell 程序：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ans&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$((&lt;/span> x &lt;span class="o">+&lt;/span> y &lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$x&lt;/span>&lt;span class="s2"> + &lt;/span>&lt;span class="nv">$y&lt;/span>&lt;span class="s2"> = &lt;/span>&lt;span class="nv">$ans&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>带整数的数学运算符如下表所示：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Operator&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Example&lt;/th>
&lt;th>Evaluates To&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>+&lt;/td>
&lt;td>Addition&lt;/td>
&lt;td>echo $(( 20 + 5 ))&lt;/td>
&lt;td>25&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-&lt;/td>
&lt;td>Subtraction&lt;/td>
&lt;td>echo $(( 20 - 5 ))&lt;/td>
&lt;td>15&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/&lt;/td>
&lt;td>Division&lt;/td>
&lt;td>echo $(( 20 / 5 ))&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>*&lt;/code>&lt;/td>
&lt;td>Multiplication&lt;/td>
&lt;td>echo $(( 20 &lt;code>*&lt;/code> 5 ))&lt;/td>
&lt;td>100&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%&lt;/td>
&lt;td>Modulus&lt;/td>
&lt;td>echo $(( 20 % 3 ))&lt;/td>
&lt;td>2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>++&lt;/td>
&lt;td>post-increment (add variable value by 1)&lt;/td>
&lt;td>x=5 echo $(( x++ )) echo $(( x++ ))&lt;/td>
&lt;td>5 6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;ndash;&lt;/td>
&lt;td>post-decrement (subtract variable value by 1)&lt;/td>
&lt;td>x=5 echo $(( x&amp;ndash; ))&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>**&lt;/code>&lt;/td>
&lt;td>Exponentiation&lt;/td>
&lt;td>x=2 y=3 echo $(( x &lt;code>**&lt;/code> y ))&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>运算符按优先级顺序进行评估。这些级别按优先级从高到低的顺序列出（引用 bash 手册页中的内容）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">id++ id--
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> variable post-increment and post-decrement
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">++id --id
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> variable pre-increment and pre-decrement
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- + unary minus and plus
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">! ~ logical and bitwise negation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">** exponentiation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* / % multiplication, division, remainder
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+ - addition, subtraction
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;&amp;lt; &amp;gt;&amp;gt; left and right bitwise shifts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;&lt;span class="o">=&lt;/span> &amp;gt;&lt;span class="o">=&lt;/span> &amp;lt; &amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">comparison&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span> !&lt;span class="o">=&lt;/span> equality and inequality
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;amp;&lt;/span> bitwise AND
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">^ bitwise exclusive OR
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> bitwise OR
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;amp;&amp;amp;&lt;/span> logical AND
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">||&lt;/span> logical OR
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">expr?expr:expr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> conditional &lt;span class="nv">operator&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> *&lt;span class="o">=&lt;/span> /&lt;span class="o">=&lt;/span> %&lt;span class="o">=&lt;/span> +&lt;span class="o">=&lt;/span> -&lt;span class="o">=&lt;/span> &amp;lt;&amp;lt;&lt;span class="o">=&lt;/span> &amp;gt;&amp;gt;&lt;span class="o">=&lt;/span> &lt;span class="p">&amp;amp;&lt;/span>&lt;span class="o">=&lt;/span> ^&lt;span class="o">=&lt;/span> &lt;span class="p">|&lt;/span>&lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> assignment
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">expr1, expr2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> comma
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>字符串</title><link>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/shell-%E7%BC%96%E7%A8%8B/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/shell-%E7%BC%96%E7%A8%8B/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>&lt;h1 id="字符串">字符串&lt;/h1>
&lt;p>字符串是 shell 编程中最常用最有用的数据类型，单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；双引号中则允许引入变量：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用双引号拼接&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">greeting&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;hello, &amp;#34;&lt;/span>&lt;span class="nv">$your_name&lt;/span>&lt;span class="s2">&amp;#34; !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">greeting_1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;hello, &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">your_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用单引号拼接&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">greeting_2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;hello, &amp;#39;&lt;/span>&lt;span class="nv">$your_name&lt;/span>&lt;span class="s1">&amp;#39; !&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">greeting_3&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;hello, ${your_name} !&amp;#39;&lt;/span> &lt;span class="c1"># hello, ${your_name} !&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>字符串常见的操作如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">string&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;string&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 获取字符串长度&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="si">${#&lt;/span>&lt;span class="nv">string&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 提取子字符串&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="si">${&lt;/span>&lt;span class="nv">string&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">4&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查找子字符串&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="sb">`&lt;/span>expr index &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$string&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> io&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="引号">引号&lt;/h1>
&lt;p>您的 Bash Shell 可以理解具有特殊含义的特殊字符。例如，&lt;code>$var&lt;/code> 用于扩展变量值。Bash 扩展变量和通配符，例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$PATH&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$PS1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> /etc/*.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是，有时您不希望使用变量或通配符。例如，不要打印 &lt;code>$PATH&lt;/code> 的值，而只是在屏幕上将 &lt;code>$PATH&lt;/code> 作为单词打印。您可以通过将特殊字符的含义用单引号引起来来启用或禁用。这对于在编写 Shell 脚本时抑制警告和错误消息也很有用。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Path is &lt;/span>&lt;span class="nv">$PATH&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="c1">## $PATH will be expanded&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;I want to print $PATH&amp;#39;&lt;/span> &lt;span class="c1">## PATH will not be expanded&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>引号分为三种：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Quote type&lt;/th>
&lt;th>Name&lt;/th>
&lt;th>Meaning&lt;/th>
&lt;th>Example (type at shell prompt)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&amp;quot;&lt;/td>
&lt;td>The double quote&lt;/td>
&lt;td>The double quote ( &amp;ldquo;quote&amp;rdquo; ) protects everything enclosed between two double quote marks except $, &amp;lsquo;, &amp;quot; and .Use the double quotes when you want only variables and command substitution. _ Variable - Yes _ Wildcards - No * Command substitution - yes&lt;/td>
&lt;td>The double quotes allowes to print the value of $SHELL variable, disables the meaning of &lt;a href="https://bash.cyberciti.biz/guide/Wildcards" target="_blank" rel="noopener">wildcards&lt;/a>, and finally allows command substitution. &lt;code>echo &amp;quot;$SHELL&amp;quot;echo &amp;quot;/etc/*.conf&amp;quot;echo &amp;quot;Today is $(date)&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>'&lt;/td>
&lt;td>The single quote&lt;/td>
&lt;td>The single quote ( &amp;lsquo;quote&amp;rsquo; ) protects everything enclosed between two single quote marks. It is used to turn off the special meaning of all characters. _ Variable - No _ Wildcards - No * Command substitution - No&lt;/td>
&lt;td>The single quotes prevents displaying variable $SHELL value, disabled the meaning of &lt;a href="https://bash.cyberciti.biz/guide/Wildcards" target="_blank" rel="noopener">wildcards&lt;/a> /etc/*.conf, and finally command substitution ($date) itself. &lt;code>echo '$SHELL'echo '/etc/*.conf'echo 'Today is $(date)'&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>\&lt;/td>
&lt;td>The Backslash&lt;/td>
&lt;td>Use backslash to change the special meaning of the characters or to escape special characters within the text such as quotation marks.&lt;/td>
&lt;td>You can use \ before dollar sign to tell the shell to have no special meaning. Disable the meaning of the next character in $PATH (i.e. do not display value of $PATH variable): &lt;code>echo &amp;quot;Path is \$PATH&amp;quot;echo &amp;quot;Path is $PATH&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;code>\&lt;/code> 可以用来进行换行衔接：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;A monkey-tailed boy named Goku is found by an old martial \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;gt;arts expert who raises him as his grandson. One day Goku meets a \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;gt;girl named Bulma and together they go on a quest to retrieve the seven Dragon Balls&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Purpose: clean /tmp/$domain ?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">check_temp_clean&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$SERVER_MODE&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;daemon&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$SERVER_MODE&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;init&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># note use of the backslash character to continue command on next line&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$SERVER_MODE&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;clean&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -a -e /usr/local/etc/nixcraft/lighttpd/disk_cache.init &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>