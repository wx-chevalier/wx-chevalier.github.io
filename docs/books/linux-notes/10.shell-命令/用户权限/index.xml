<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>用户权限 | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/</link>
      <atom:link href="https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/index.xml" rel="self" type="application/rss+xml" />
    <description>用户权限</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>用户权限</title>
      <link>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/</link>
    </image>
    
    <item>
      <title>权限控制</title>
      <link>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>系统权限</title>
      <link>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90/</guid>
      <description>&lt;h1 id=&#34;io-文件属性&#34;&gt;IO 文件属性&lt;/h1&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://uploadfiles.nowcoder.com/images/20160703/284361_1467545717226_794F6F23213EE88A2729AAA2CFD76847&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-rwxrw-r-- 1 aaa bbb 0  3月  4 11:21 ccc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在此输出结果中，总共显示出七列内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;第一列为文件种类及权限。此列共有 10 个字符，其中第一个字符表示文件的种类。即，-表示是普通文件，d 表 示为目录，c 表示为字符设备，b 表示为块设备。而紧跟其后的 10 个字符，可以分为 3 块，每 3 个字符为一块，表示了此文件(目录)的属主、属组及 others 的权限。其中，r 表示 read，w 表示 write，x 表示 execute，-表示无权限。如，上图中的第一行，-rw&amp;mdash;&amp;mdash;-，表示这是一个普通文件，文件的属主有读取和写入的权限，文件的属组无权限，others 无权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二列表示硬链接个数(文件每增加一个硬链接，数字会增加 1，默认从 1 开始，1 表示无硬链接文件，如果是一个目录，它的默认值应该是 2。目录是不能做硬链接的)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第三列为文件(目录)的属主。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第四列为文件(目录)的属组。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第五列为文件(目录)的大小，单为为字节。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第六列为文件(目录)创建时间或最后一次访问时间，顺序为月、日、时间，如果该时间离现在过久，则直接显示年份。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第七列为文件名。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>用户管理</title>
      <link>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/linux-notes/10.shell-%E5%91%BD%E4%BB%A4/%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;h1 id=&#34;用户创建&#34;&gt;用户创建&lt;/h1&gt;
&lt;p&gt;我们可以使用如下命令快速创建新的用户：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;useradd &lt;span class=&#34;nv&#34;&gt;$USERNAME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir /home/&lt;span class=&#34;nv&#34;&gt;$USERNAME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chown -R &lt;span class=&#34;nv&#34;&gt;$USERNAME&lt;/span&gt; /home/&lt;span class=&#34;nv&#34;&gt;$USERNAME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chgrp -R class1 /home/&lt;span class=&#34;nv&#34;&gt;$USERNAME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Linux 下的/etc/skel 目录往往不被人注意，其实此目录在新建用户时还是很有用的，灵活运用此目录可以节约一定的配置时间。
skel 是 skeleton 的缩写，意为骨骼、框架。故此目录的作用是在建立新用户时，用于初始化用户根目录。系统会将此目录下的所有文件、目录都复制到新建用户 的根目录，并且将用户属主与用户组调整为与此根目录相同。所以可将用户配置文件预置到/etc/skel 目录下，比如说.bashrc、.profile 与.vimrc 等。&lt;/p&gt;
&lt;p&gt;注：1.如果在新建用户时，没有自动建立用户根目录，则无法调用到此框架目录 2.如果不想以默认的/etc/skel 目录作为框架目录，可以在运行 useradd 命令时指定新的框架目录。例如：
sudo useradd -d /home/chen -m -k /etc/my_skel chen
上述命令将新建用户 chen，设置用户根目录为/home/chen，并且此目录会自动建立；同时指定框架目录为/etc/my_skel3.如果不想在每次新建用户时，都重新指定新的框架目录，可以通过修改/etc/default/useradd 配置文件来改变默认的框架目录，方法如下：
查找 SKEL 变量的定义，如果此变量的定义已被注释掉，可以取消注释，然后修改其值：
SKEL=/etc/my_skel&lt;/p&gt;
&lt;p&gt;赋予 root 权限
方法一：修改 /etc/sudoers 文件，找到下面一行，把前面的注释(#)去掉&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;## Allows people in group wheel to run all commands
%wheel    ALL=(ALL)    ALL
然后修改用户，使其属于root组(wheel)，命令如下：
#usermod -g root tommy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改完毕，现在可以用 tommy 帐号登录，然后用命令 su –，即可获得 root 权限进行操作。
方法二：修改 /etc/sudoers 文件，找到下面一行，在 root 下面添加一行，如下所示：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;## Allow root to run any commands anywhere
root    ALL=(ALL)     ALL
tommy   ALL=(ALL)     ALL
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改完毕，现在可以用 tommy 帐号登录，然后用命令 sudo –，即可获得 root 权限进行操作。
方法三：修改 /etc/passwd 文件，找到如下行，把用户 ID 修改为 0，如下所示：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tommy:x:0:33:tommy:/data/webroot:/bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;1、添加新的用户账号使用 useradd 命令，
添加用户账号就是在/etc/passwd 文件中为新用户增加一条记录，同时更新其他系统文件如/etc/shadow, /etc/group 等.
Linux 提供了集成的系统管理工具 userconf，它可以用来对用户账号进行统一管理。&lt;/p&gt;
&lt;p&gt;语法:
useradd 选项 用户名
语义:
-c comment 指定一段注释性描述。
-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m 选项，可以创建主目录。
-g 用户组 指定用户所属的用户组。
-G 用户组 用户组 指定用户所属的附加组。
-s Shell 文件 指定用户的登录 Shell。
-u 用户号 指定用户的用户号，如果同时有-o 选项，则可以重复使用其他用户的标识号。
用户名 指定新用户的登录名。&lt;/p&gt;
&lt;p&gt;例 1:
$ useradd –d /usr/sam -m sam
释义:
此命令创建了一个用户 sam，
其中-d 和-m 选项用来为登录名 sam 产生一个主目录/usr/sam(/usr 为默认的用户主目录所在的父目录)。&lt;/p&gt;
&lt;p&gt;例 2：
$ useradd -s /bin/sh -g group -G adm,root gem
释义:
此命令新建了一个用户 gem, 该用户的登录 Shell 是/bin/sh(有时要用/bin/bash),
它属于 group 用户组，同时又属于 adm 和 root 用户组，其中 group 用户组是其主组。&lt;/p&gt;
&lt;p&gt;新建用户组可用命令:
$ groupadd group
$ groupadd adm&lt;/p&gt;
&lt;p&gt;2、删除帐号
如果一个用户的账号不再使用，可以从系统中删除。
删除用户账号就是要将/etc/passwd 等系统文件中的该用户记录删除，必要时还删除用户的主目录。
语法:
userdel 选项 用户名
选项:
-r, 把用户的主目录一起删除。&lt;/p&gt;
&lt;p&gt;例 1:
$ userdel -r sam
释义:
此命令删除用户 sam 在系统文件中(主要是/etc/passwd, /etc/shadow, /etc/group 等)的记录,
同时删除用户的主目录。&lt;/p&gt;
&lt;p&gt;3、修改帐号
修改用户账号就是根据实际情况更改用户的有关属性，如用户号、主目录、用户组、登录 Shell 等。
修改已有用户的信息使用 usermod 命令.
语法:
usermod 选项 用户名
选项:
包括-c, -d, -m, -g, -G, -s, -u 以及-o 等,
这些选项的意义与 useradd 命令中的选项一样，可以为用户指定新的资源值。
另外，有些系统可以使用如下选项：
-l 新用户名 指定一个新的账号，即将原来的用户名改为新的用户名。&lt;/p&gt;
&lt;p&gt;例如:
$ usermod -s /bin/ksh -d /home/z -g developer sam
释义:
此命令将用户 sam 的:
登录 Shell 修改为 ksh,
主目录改为/home/z,
用户组改为 developer.
4、给已有的用户增加工作组
usermod -G groupname username&lt;/p&gt;
&lt;p&gt;或者：gpasswd -a user group&lt;/p&gt;
&lt;p&gt;5、用户口令的管理
用户管理的一项重要内容是用户口令的管理。
用户账号刚创建时没有口令，但是被系统锁定，无法使用，必须为其指定口令后才可以使用，即使是指定空口令。
指定和修改用户口令的 Shell 命令是 passwd。
超级用户可以为自己和其他用户指定口令，普通用户只能用它修改自己的口令。
语法:
passwd 选项 用户名
选项:
-l 锁定口令，即禁用账号。
-u 口令解锁。
-d 使账号无口令。
-f 强迫用户下次登录时修改口令。
如果默认用户名，则修改当前用户的口令。&lt;/p&gt;
&lt;p&gt;例如:
假设当前用户是 sam,
则下面的命令修改该用户自己的口令:
$ passwd
Old password:&lt;strong&gt;**&lt;/strong&gt;
New password:&lt;strong&gt;***&lt;/strong&gt;
Re-enter new password:&lt;strong&gt;***&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果是超级用户，
可以用下列形式指定任何用户的口令：
$passwd sam
New password:&lt;strong&gt;***&lt;/strong&gt;
Re-enter new password:&lt;strong&gt;***&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;普通用户修改自己的口令时，
passwd 命令会先询问原口令，验证后再要求用户输入两遍新口令，
如果两次输入的口令一致，则将这个口令指定给用户；
而超级用户为用户指定口令时，就不需要知道原口令。&lt;/p&gt;
&lt;p&gt;为了系统安全起见，用户应该选择比较复杂的口令，
例如最好使用 8 位长的口令，口令中包含有大写、小写字母和数字，并且应该与姓名、生日等不相同。&lt;/p&gt;
&lt;p&gt;例如 1:
为用户指定空口令时，执行下列形式的命令：
$passwd -d sam
释义:
此命令将用户 sam 的口令删除，这样用户 sam 下一次登录时，系统就不再询问口令。&lt;/p&gt;
&lt;p&gt;passwd 命令还可以用-l(lock)选项锁定某一用户，使其不能登录，例如：
例如 2:
$ passwd -l sam&lt;/p&gt;
&lt;p&gt;二、Linux 系统用户组的管理
每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。
不同 Linux 系统对用户组的规定有所不同，
如 Linux 下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。
用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group 文件的更新。&lt;/p&gt;
&lt;p&gt;1、增加一个新的用户组使用 groupadd 命令。
语法:
groupadd 选项 用户组
选项:
-g GID 指定新用户组的组标识号(GID)。
-o 一般与-g 选项同时使用，表示新用户组的 GID 可以与系统已有用户组的 GID 相同。&lt;/p&gt;
&lt;p&gt;例 1:
$ groupadd group1
释义:
此命令向系统中增加了一个新组 group1，新组的组标识号是在当前已有的最大组标识号的基础上加 1。&lt;/p&gt;
&lt;p&gt;例 2:
$ groupadd -g 101 group2
释义:
此命令向系统中增加了一个新组 group2，同时指定新组的组标识号是 101。&lt;/p&gt;
&lt;p&gt;2、如果要删除一个已有的用户组，使用 groupdel 命令.
语法:
groupdel 用户组&lt;/p&gt;
&lt;p&gt;例 1:
$ groupdel group1
释义:
此命令从系统中删除组 group1。&lt;/p&gt;
&lt;p&gt;3.修改用户组的属性使用 groupmod 命令。
语法:
groupmod 选项 用户组
选项:
-g GID 为用户组指定新的组标识号。
-o 与-g 选项同时使用，用户组的新 GID 可以与系统已有用户组的 GID 相同。
-n 新用户组 将用户组的名字改为新名字&lt;/p&gt;
&lt;p&gt;例 1:
$ groupmod -g 102 group2
释义:
此命令将组 group2 的组标识号修改为 102。&lt;/p&gt;
&lt;p&gt;例 2:
$ groupmod –g 10000 -n group3 group2
释义:
此命令将组 group2 的标识号改为 10000，组名修改为 group3。&lt;/p&gt;
&lt;p&gt;4.如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。
用户可以在登录后，使用命令 newgrp 切换到其他用户组，这个命令的参数就是目的用户组。&lt;/p&gt;
&lt;p&gt;例如:
$ newgrp root
释义:
这条命令将当前用户切换到 root 用户组，前提条件是 root 用户组确实是该用户的主组或附加组。
类似于用户账号的管理，用户组的管理也可以通过集成的系统管理工具来完成。
&lt;a href=&#34;http://www.libaqiang.com/?p=33001&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.libaqiang.com/?p=33001&lt;/a&gt;
&lt;a href=&#34;http://blog.chinaunix.net/uid-26000296-id-3496103.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://blog.chinaunix.net/uid-26000296-id-3496103.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
