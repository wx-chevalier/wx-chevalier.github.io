<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>30.对象存储 | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/distributedstorage-notes/30.%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/</link>
      <atom:link href="https://ng-tech.icu/books/distributedstorage-notes/30.%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/index.xml" rel="self" type="application/rss+xml" />
    <description>30.对象存储</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>30.对象存储</title>
      <link>https://ng-tech.icu/books/distributedstorage-notes/30.%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/</link>
    </image>
    
    <item>
      <title>Haystack</title>
      <link>https://ng-tech.icu/books/distributedstorage-notes/30.%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/haystack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/distributedstorage-notes/30.%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/haystack/</guid>
      <description>&lt;h1 id=&#34;haystack&#34;&gt;Haystack&lt;/h1&gt;
&lt;h1 id=&#34;links&#34;&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://studygolang.com/articles/4256&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://studygolang.com/articles/4256&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>元数据管理</title>
      <link>https://ng-tech.icu/books/distributedstorage-notes/30.%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/%E5%85%83%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/distributedstorage-notes/30.%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/%E5%85%83%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;h1 id=&#34;元数据管理&#34;&gt;元数据管理&lt;/h1&gt;
&lt;p&gt;元数据的目录树结构转化成基于 LSMT 的 KV，核心思想是把树的父子节点关系转变成 parentInode+currentPath 到 Inode 的映射。分布式的 KV 是由多个 partition 组成，单个文件系统的所有元数据放在某个 partition 内。架构上支持动态分裂，如果某个文件成为热点，按照目录动态分裂，并调度到不同机器的 partition 上。&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://assets.ng-tech.icu/item/20230502140552.png&#34; alt=&#34;用户分区示意&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
