<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>4 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/4/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/4/index.xml" rel="self" type="application/rss+xml"/><description>4</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>4</title><link>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/4/</link></image><item><title>4.1-Frontend</title><link>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/4/4.1-frontend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/4/4.1-frontend/</guid><description>&lt;p>﻿# 前端每周清单第 7 期：Next 2.0 发布，Safari 10.1 新增系列重要特性，Vue.js 2.2 完整 API 手册&lt;/p>
&lt;p>&lt;code>前端&lt;/code> &lt;code>前端每周清单&lt;/code>&lt;/p>
&lt;p>&lt;a href="http://www.infoq.com/cn/FE-Weekly" target="_blank" rel="noopener">前端每周清单&lt;/a>专注前端领域内容，分为新闻热点、开发教程、工程实践、深度阅读、开源项目、巅峰人生等栏目。关注【前端之巅】微信公众号(ID：frontshow)，及时获取前端每周清单。&lt;/p>
&lt;h2 id="新闻热点">新闻热点&lt;/h2>
&lt;p>&lt;code>国内国外，前端最新动态&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bC2" target="_blank" rel="noopener">《Safari 10.1 发布，新增众多重要 Web 特性》&lt;/a>：近日随着 iOS 10.3 与 macOS Sierra 10.12.4 的版本发布，系统内置的 Safari 10.1 增加了许多重要的 Web 特性支持与性能提升，包括 CSS Grid 布局、fetch、IndexDB 2.0、Custom Elements、Form Validation、Media Capture 等等。( &lt;a href="https://parg.co/bC2" target="_blank" rel="noopener">https://parg.co/bC2&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zeit.co/blog/next2" target="_blank" rel="noopener">《Next.js 2.0 发布》&lt;/a>：近日 Next 2.0 正式发布，它为我们提供了便捷的快速开发 React 服务端渲染的工具，使得开发者能够专注于业务开发。在 2.0 版本中它提供了自定义路由、自定义服务端渲染代码、组件内 CSS、Prefetching 等等多个新特性。( &lt;a href="https://zeit.co/blog/next2" target="_blank" rel="noopener">https://zeit.co/blog/next2&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhh" target="_blank" rel="noopener">《echarts v3.5 发布：新增日历坐标系、坐标轴指示器；同时统计扩展 v1.0 发布》&lt;/a>：在 echarts 新发布的 3.5 版本中，新增了日历坐标系，增强了坐标轴指示器。同时，echarts 统计扩展 1.0 版本发布了。日历坐标系用于在日历中绘制图表，坐标轴指示器方便用户观察数据内容，统计扩展是一个专门用来进行数据分析的工具。( &lt;a href="https://parg.co/bhh" target="_blank" rel="noopener">https://parg.co/bhh&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://twitter.com/leeb/status/847635878486745088" target="_blank" rel="noopener">《Relay 1.0.0 发布》&lt;/a>：近日 Relay 1.0.0-alpha 发布，提供了许多新的特性。作为 Facebook 发布的全特性 GraphQL 客户端，其能够在低配的移动设备上构建高性能、复杂可扩展的应用。( &lt;a href="https://twitter.com/leeb/status/847635878486745088" target="_blank" rel="noopener">https://twitter.com/leeb/status/847635878486745088&lt;/a> )&lt;/p>
&lt;h2 id="开发教程">开发教程&lt;/h2>
&lt;/li>
&lt;/ul>
&lt;p>&lt;code>步步为营，掌握基础技能&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bQ3" target="_blank" rel="noopener">《使用 Vue.js 与 Electron 构建桌面问卷应用》&lt;/a>：本文介绍了如何利用 Vue.js 与 Electron 来构建简单的桌面问卷应用，作者首先介绍了如何使用 vue-cli 创建简单的 Web 项目，然后讨论了如何将项目运行在 Electron 中，最后阐述了如何将应用整体打包发布。( &lt;a href="https://parg.co/bQ3" target="_blank" rel="noopener">https://parg.co/bQ3&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://julian.is/article/progressive-web-apps/" target="_blank" rel="noopener">《Progressive Web Apps：响应式 Web 设计的延伸》&lt;/a>：本文是对于 Progressive Web Apps 概念、设计理念与简单实践的介绍，作者介绍了 PWA 应用应该具备的基本特性、性能与体验上的要求以及如何将现有站点转化为 PWA 的简单实践。( &lt;a href="https://julian.is/article/progressive-web-apps/" target="_blank" rel="noopener">https://julian.is/article/progressive-web-apps/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bCx" target="_blank" rel="noopener">《2017 简明 React 入门指南》&lt;/a>：本文是针对那些熟悉 jQuery 与传统 JavaScript 开发的前端工程师准备的现代 React 开发入门指南，其包括了环境配置、create-react-app 使用、学习资料、应用编写与发布等等章节。( &lt;a href="https://parg.co/bCx" target="_blank" rel="noopener">https://parg.co/bCx&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhl" target="_blank" rel="noopener">《8 个可能你没考虑过关于 CSS 的知识》&lt;/a>：不同的技术学习曲线可能相差甚远，而 CSS 的初学者则会觉得相当容易入手，但是深入之后可能发现连居中都不甚容易。本文作者是个深度 CSS 热爱者，他从自己多年的经验介绍了 CSS 中的垂直居中、100% 属性、float、z-index 等等多个细节知识点。( &lt;a href="https://parg.co/bhl" target="_blank" rel="noopener">https://parg.co/bhl&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/vasanthk/react-bits" target="_blank" rel="noopener">《React Bits》&lt;/a>：一本关于 React 设计模式、技术与技巧的书，涵盖了常见的 React 应用开发中的设计模式、需要规避的反模式、处理 UX 变种、性能调试与样式处理等等。( &lt;a href="https://github.com/vasanthk/react-bits" target="_blank" rel="noopener">https://github.com/vasanthk/react-bits&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhN" target="_blank" rel="noopener">《实例讲解 CSS 盒模型》&lt;/a>：有经验的前端开发者都知道 HTML 中的布局就是盒套盒，而本文则是以某个街区的例子深入浅出地讲解 CSS 中的盒模型。( &lt;a href="https://parg.co/bhN" target="_blank" rel="noopener">https://parg.co/bhN&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="工程实践">工程实践&lt;/h2>
&lt;p>&lt;code>立足实践，提示实际水平&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhH" target="_blank" rel="noopener">《12 个精妙的 JavaScript 代码片》&lt;/a>：本文作者分享了十二个非常不错的 JavaScript 代码片，这些代码片能够帮你优化现有代码，让代码更加地赏心悦目。( &lt;a href="https://parg.co/bhH" target="_blank" rel="noopener">https://parg.co/bhH&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhb" target="_blank" rel="noopener">《Node.js 应用监控实践指南》&lt;/a>：本文介绍生产环境下 Node.js 应用监控实践指南，包括了监控的意义、监控的对象、目前开源的监控解决方案以及一些 SaaS 解决方案等。( &lt;a href="https://parg.co/bhb" target="_blank" rel="noopener">https://parg.co/bhb&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhU" target="_blank" rel="noopener">《使用 Faker.js 为 Node.js 应用创建模拟数据》&lt;/a>：在应用开发中我们往往会头疼于如何构建大量的随机数据，特别是那些符合某些固定模式的数据，我们可能会要用这些数据仿制 RESTful 接口、进行单元测试等等。而 Faker.js 则为我们提供了这样的随机数据生成器。( &lt;a href="https://parg.co/bhU" target="_blank" rel="noopener">https://parg.co/bhU&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhC" target="_blank" rel="noopener">《Vue.js 2.2 完整 API 清单》&lt;/a>：本文是 Vue.js 2.2 中完整的 API 介绍，可以作为手册随时查阅 。( &lt;a href="https://parg.co/bhC" target="_blank" rel="noopener">https://parg.co/bhC&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhR" target="_blank" rel="noopener">《JavaScript 中构建响应式引擎》&lt;/a>：本系列文章介绍了如何在 JavaScript 中构建高性能的响应式引擎，对于有兴趣了解 MobX 底层原理的同学来说也是个不错的教程，目前包含了对于可观测对象的构造解释、属性推导与依赖追踪等内容( &lt;a href="https://parg.co/bhR" target="_blank" rel="noopener">https://parg.co/bhR&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="深度阅读">深度阅读&lt;/h2>
&lt;p>&lt;code>深度思考，升华开发智慧&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bCw" target="_blank" rel="noopener">《深入浅出构建简单的 Chess AI》&lt;/a>：本文作者介绍了如何基于 JavaScript 构建一个国际象棋的 AI，虽然不属于前端开发范畴，不过还是蛮有意思的一篇文章。本文主要包括移动生成、棋盘可视化、位置评估、基于 Minimax 算法的搜索树、Alpha-beta 修剪等等。( &lt;a href="https://parg.co/bCw" target="_blank" rel="noopener">https://parg.co/bCw&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bCz" target="_blank" rel="noopener">《构建高性能扩展与折叠动画》&lt;/a>：本文以菜单伸缩动画为例，介绍如何构建高性能扩展与折叠动画。较简单但是性能有缺陷的方式譬如修改元素宽高或者使用 clip 变换属性；而本文主要是由 CSS3 的 scale 变换来实现菜单的扩展与折叠，其为了保证菜单按钮的视觉效果与整体的平滑缩放还使用了所谓的对冲缩放技巧。( &lt;a href="https://parg.co/bCz" target="_blank" rel="noopener">https://parg.co/bCz&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://eng.uber.com/ubereats-react-native/" target="_blank" rel="noopener">《基于 ReactNaive 与 Uber 工程基础构建 UberEATS》&lt;/a>：本文是 UberEATS 的工程师团队介绍的他们基于 Uber 原工程架构与 ReactNative 实现应用的工程实践；包括了构建迁移路径、应用架构定义、自动更新、测试与静态类型检测等等。( &lt;a href="https://eng.uber.com/ubereats-react-native/" target="_blank" rel="noopener">https://eng.uber.com/ubereats-react-native/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhQ" target="_blank" rel="noopener">《利用机器学习优化网站性能》&lt;/a>：本文是从浅显机器学习的角度来考虑如何优化网站性能，可能从专业服务端机器学习的角度来看并不复杂，但是从前端网站构建的角度来看也是蛮有意思的。本文包括了记录网站点击与提交信息、利用 AWS S3 进行模型训练、利用 UI 进行可视化展示等等。( &lt;a href="https://parg.co/bhQ" target="_blank" rel="noopener">https://parg.co/bhQ&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhM" target="_blank" rel="noopener">《Chrome 中 Preload、Prefetch 以及 优先级介绍》&lt;/a>：本文是 Google Chrome 团队的 Addy Osmani 对 Chrome 中的 Preload、Prefetch 以及抓取优先级的介绍，并且介绍了在网站性能优化中对于 Preload 与 Prefetch 的使用技巧和 HTTP/2 带来的服务端推送如何协同使用等内容。( &lt;a href="https://parg.co/bhM" target="_blank" rel="noopener">https://parg.co/bhM&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开源项目">开源项目&lt;/h2>
&lt;p>&lt;code>乐于分享，共推前端发展&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/danielstjules/jsinspect" target="_blank" rel="noopener">《jsinspect》&lt;/a>：jsinspect 提供了方便的命令行工具或者构建插件来检测代码库中的复制粘贴或者结构相似的代码片，以方便开发者在优化过程中完成代码的重构。( &lt;a href="https://github.com/danielstjules/jsinspect" target="_blank" rel="noopener">https://github.com/danielstjules/jsinspect&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/reactide/reactide" target="_blank" rel="noopener">《Reactide》&lt;/a>：Reactide 是首个面向 React Web 应用开发 IDE，其基于 Electron 提供了跨平台的特性。Reactide 允许我们像传统开发那样打开单个文件就可以完成预览，并且提供了便捷的组件导入、格式化等功能。该项目仍处于积极的开发中，可以拭目以待。( &lt;a href="https://github.com/reactide/reactide" target="_blank" rel="noopener">https://github.com/reactide/reactide&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/nolanlawson/marky" target="_blank" rel="noopener">《marky》&lt;/a>：marky 是基于 performance.mark/measure 封装的高性能 JavaScript 计时器，其相较于&lt;code>console.time()&lt;/code>以及&lt;code>console.timeEnd()&lt;/code>具有更好地性能表现，相较于简单的&lt;code>Date.now()&lt;/code>具有更好地准确度。( &lt;a href="https://github.com/nolanlawson/marky" target="_blank" rel="noopener">https://github.com/nolanlawson/marky&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bCD" target="_blank" rel="noopener">《Service Worker Mock》&lt;/a>：在 PWA 应用的开发中对于 Service Worker 的测试一直比较麻烦，每个文件都可能通过&lt;code>self.addEventListener&lt;/code>产生副作用，并且 Service Worker 的运行环境也迥异于正常的 Web 或者 Node 环境。而本包则是通过注入伪造的 Service Worker 环境来方便测试。( &lt;a href="https://parg.co/bCD" target="_blank" rel="noopener">https://parg.co/bCD&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/toddmotto/public-apis" target="_blank" rel="noopener">《Public JSON APIs》&lt;/a>：本仓库列举了许多 Web 开发中用到的公开的 JSON 接口，包括信息检索、机器学习、工具使用等等多个方面。( &lt;a href="https://github.com/toddmotto/public-apis" target="_blank" rel="noopener">https://github.com/toddmotto/public-apis&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/angular-starter-kit/generator-ngx-app" target="_blank" rel="noopener">《generator-ngx-app》&lt;/a>：Angular 4 商业级应用项目生成器，其包括了 angular-cli 提供的现代工具与工作流，以及来自于社区的最佳实践、可扩展的基础模板以及较好地学习曲线。( &lt;a href="https://github.com/angular-starter-kit/generator-ngx-app" target="_blank" rel="noopener">https://github.com/angular-starter-kit/generator-ngx-app&lt;/a> )&lt;/p>
&lt;h2 id="巅峰人生">巅峰人生&lt;/h2>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhv" target="_blank" rel="noopener">《WWW 之父 Tim Berners-Lee 获图灵奖》&lt;/a>：美国计算机学会(ACM)宣布将 2016 年的图灵奖授予万维网(WWW)的发明者 Tim Berners-Lee。他将获得由 Google 赞助的一百万美元奖金。ACM 提到他的获奖理由是，“inventing the World Wide Web, the first web browser, and the fundamental protocols and algorithms allowing the web to scale.”。( &lt;a href="https://parg.co/bhv" target="_blank" rel="noopener">https://parg.co/bhv&lt;/a>)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="前端之巅">前端之巅&lt;/h2>
&lt;p>前端之巅是 InfoQ 旗下关注前端技术的垂直社群，加入前端之巅学习群请关注前端之巅公众号后回复“加群”。投稿请发邮件到 &lt;a href="mailto:editors@cn.infoq.com">editors@cn.infoq.com&lt;/a>，注明“前端之巅投稿”。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="http://upload-images.jianshu.io/upload_images/1647496-01712a993d2b23de.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="前端之巅微信底图－5.jpg" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p></description></item><item><title>4.2-Frontend</title><link>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/4/4.2-frontend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/4/4.2-frontend/</guid><description>&lt;p>﻿# 前端每周清单第 8 期：React 16 即将发布，微软发布跨平台开发框架 ReactXP，Twitter Lite 的构建之道&lt;/p>
&lt;p>&lt;code>前端&lt;/code> &lt;code>前端每周清单&lt;/code>&lt;/p>
&lt;p>&lt;a href="http://www.infoq.com/cn/FE-Weekly" target="_blank" rel="noopener">前端每周清单&lt;/a>专注前端领域内容，分为新闻热点、开发教程、工程实践、深度阅读、开源项目、巅峰人生等栏目。关注【前端之巅】微信公众号(ID：frontshow)，及时获取前端每周清单。&lt;/p>
&lt;h2 id="新闻热点">新闻热点&lt;/h2>
&lt;p>&lt;code>国内国外，前端最新动态&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4W" target="_blank" rel="noopener">《React 15.5.0 版本发布》&lt;/a>：近日 React 宣布发布 15.5.0 版本， 并且宣告了在即将发布的 React 16 版本中带来的一系列性能的提升与整个重构的内核代码。而在 15.5.0 中最主要的是 PropTypes、createReactClass、TestUtils 等类被迁移到了新的包中。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://news.mit.edu/2017/tim-berners-lee-wins-turing-award-0404" target="_blank" rel="noopener">《万维网之父 Tim Berners-Lee 获得 2016 年度图灵奖》&lt;/a>：来自 MIT 的教授，万维网的发明者 Tim Berners-Lee 获得了由美国计算机协会(ACM)颁发的图灵奖(A.M. Turing Award)。美国计算机协会赞誉 Tim Berners-Lee 发明了万维网、第一个网络浏览器、以及允许网络扩展的基本协议和算法，而 2017 年也正恰恰是图灵奖五十周年。( &lt;a href="http://news.mit.edu/2017/tim-berners-lee-wins-turing-award-0404" target="_blank" rel="noopener">http://news.mit.edu/2017/tim-berners-lee-wins-turing-award-0404&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b43" target="_blank" rel="noopener">《Preact 8.0.0 发布》&lt;/a>：近日 Preact 发布其 8.0.0 版本，新版本中性能极限提升 30%，提供了更好地兼容适配性与错误反馈，而整个包体大小进一步下降，从 3.9KB 降到了 3.3KB 。( &lt;a href="https://parg.co/b43" target="_blank" rel="noopener">https://parg.co/b43&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://microsoft.github.io/reactxp/" target="_blank" rel="noopener">《微软开源跨平台开发框架 ReactXP》&lt;/a>：ReactXP 是来自于微软的用于开发跨平台(iOS，Android，Web，Windows)应用的开源框架，其基于 React.js 与 React Native 项目，提供了类似的接口与语法规则；能够帮助开发者快速创建优美、响应式的 Web 界面以及原生体验的移动应用。( &lt;a href="https://microsoft.github.io/reactxp/" target="_blank" rel="noopener">https://microsoft.github.io/reactxp/&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开发教程">开发教程&lt;/h2>
&lt;p>&lt;code>步步为营，掌握基础技能&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhD" target="_blank" rel="noopener">《基于 React，Redux，React-Router-V4 以及 Firebase 创建实时足球投票应用》&lt;/a>：本系列教程基于 React，Redux，Redux-Saga，React-Router V4 以及 Firebase 创建足球投票应用，在第一篇教程中主要介绍如何使用 create-react-app 脚手架来初始化项目结构并且添加必须的库。( &lt;a href="https://parg.co/bhD" target="_blank" rel="noopener">https://parg.co/bhD&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4s" target="_blank" rel="noopener">《后 ES6 时代的正则表达式》&lt;/a>：本文主要介绍 ES6 语法标准下正则表达式的新用法，包括了 /y 与 /u 两个新的匹配标识以及一些基于正则表达式的常见用法，譬如元素属性解析等。( &lt;a href="https://parg.co/b4s" target="_blank" rel="noopener">https://parg.co/b4s&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://cssgridgarden.com/" target="_blank" rel="noopener">《使用 CSS Grid 打造私家花园》&lt;/a>：本网站是个非常不错的互动式学习 CSS Grid 的站点，其以 28 个互动的花园小游戏来带你一步一步学习 CSS Grid 的语法与实践。( &lt;a href="http://cssgridgarden.com/" target="_blank" rel="noopener">http://cssgridgarden.com/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b49" target="_blank" rel="noopener">《创建基于 Vue.js 的可复用组件》&lt;/a>：本系列文章关注于如何利用 Vue.js 创建可复用的组件，每一篇都会讲解某个具体的界面组件，然后一步一步地介绍如何利用 Vue.js 来实现这些组件，顺便也介绍 Vue.js 的各种原理与设计准则。( &lt;a href="https://parg.co/b49" target="_blank" rel="noopener">https://parg.co/b49&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4I" target="_blank" rel="noopener">《Node.js 运行时介绍》&lt;/a>：本文是一篇不错的 Node.js 入门介绍的文章，包括了 Node.js 中常见的概念知识、JavaScript 并发模型以及基于 Event Loop 的实现、Node.js 内置的对象，以及 Node.js 缘何取名为 Node.js 等等。( &lt;a href="https://parg.co/b4I" target="_blank" rel="noopener">https://parg.co/b4I&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://madebymike.com.au/writing/the-invisible-parts-of-CSS/" target="_blank" rel="noopener">《隐藏幕后的 CSS 知识点》&lt;/a>：在我们日常的开发中，往往关注于让界面看上去符合预期，而往往不会去关注那些隐藏的属性知识点以及 CSS 的幕后原理。本文则是对于 CSS 的渲染过程、级联规则、Visual Formatting Model、展示类型、位置布局等等。( &lt;a href="https://madebymike.com.au/writing/the-invisible-parts-of-CSS/" target="_blank" rel="noopener">https://madebymike.com.au/writing/the-invisible-parts-of-CSS/&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="工程实践">工程实践&lt;/h2>
&lt;p>&lt;code>立足实践，提示实际水平&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhz" target="_blank" rel="noopener">《如何构建高性能 Promise 库》&lt;/a>：本文作者分享了他在构建类似于 Bluebird 的 符合 Promise A+ 标准的库 Aigle 时的经验，其主要原则包括避免创建比不必要的变量、函数与实例、避免执行不必要的函数、智能处理异步函数等等。( &lt;a href="https://parg.co/bhz" target="_blank" rel="noopener">https://parg.co/bhz&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhT" target="_blank" rel="noopener">《使用 JavaScript 打造智能咖啡机》&lt;/a>：这几年智能家居与 IOT 的概念非常火热，作者也发挥极客精神改造了一下办公室的咖啡机。文中作者借助了 Tessel 与 Johnny-Five 智能硬件平台，自定义了超文本咖啡机控制协议 HTCPCP，将咖啡机改造为了能够提供类 REST 服务的终端，能够远程控制与实时监控。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4p" target="_blank" rel="noopener">《使用 Chrome devtools 检视代码覆盖》&lt;/a>：近日 Chrome Canary 版本中新增了执行代码覆盖率检查的特性，其能够反映你的 Web 应用中的每个 JavaScript/CSS 文件中的代码覆盖率以及所有的未被执行的行。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4y" target="_blank" rel="noopener">《Webpack 与 Rollup：求同存异》&lt;/a>：近日，Facebook 宣布将 React 的构建工具由 Webpack 迁移到 Rollup，引发了很多开发者的讨论。本文则是深度介绍 Webpack 与 Rollup 的异同，最后总结而言，Webpack 适合于构建应用，而 Rollup 适用于构建库或框架。( &lt;a href="https://parg.co/b4y" target="_blank" rel="noopener">https://parg.co/b4y&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4X" target="_blank" rel="noopener">《探索 Twitter Lite 的构建之道》&lt;/a>：近日，Twitter 发布了遵从 Progressive Web App 规范的 Twitter Lite 网站，其兼具响应式、速度快、占用空间少、支持推送与离线体验等多个特征。本文即是 Twitter 工程师团队介绍 Twitter Lite 的构建之道，包括架构总览、可用性保证、渐进式加载、渲染优化、数据使用优化等多个方面 。( &lt;a href="https://parg.co/b4X" target="_blank" rel="noopener">https://parg.co/b4X&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b41" target="_blank" rel="noopener">《深入浅出 Redux 测试》&lt;/a>：本文首先介绍了 Web 测试的基本流程，分析了单元测试、组件测试、UI 自动化测试与端到端测试的特点与适用范围；然后使用某个具体的业务逻辑测试的案例来介绍项目开发中的 Redux 代码测试实践。( &lt;a href="https://parg.co/b41" target="_blank" rel="noopener">https://parg.co/b41&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="深度阅读">深度阅读&lt;/h2>
&lt;p>&lt;code>深度思考，升华开发智慧&lt;/code>( &lt;a href="https://parg.co/bhT" target="_blank" rel="noopener">https://parg.co/bhT&lt;/a> )&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhn" target="_blank" rel="noopener">《JavaScript 模块演化史》&lt;/a>：当初 Brendan Eich 草创 JavaScript 之际估计想不到它会在之后的二十年内起到如此重要的作用，本文则是深度回顾了缺乏模块化带来的困难以及这二十年间从命名空间、依赖注入、CommonJS、AMD、UMD 到 ES2015 Modules 等等十余种不同的模块解决方案。( &lt;a href="https://parg.co/bhn" target="_blank" rel="noopener">https://parg.co/bhn&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4k" target="_blank" rel="noopener">《rems 与 ems 详解，或许你并不需要它们》&lt;/a>：本文对于现代 Web 开发中常见的 em 与 rem 单位在桌面浏览器中的开发进行了详细的阐述，通过多个例子对比了 rem、em、px 这几个单位的实际作用，最后还阐述了希望大家能够合理利用这几个单位而不是盲从选择。( &lt;a href="https://parg.co/b4k" target="_blank" rel="noopener">https://parg.co/b4k&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4J" target="_blank" rel="noopener">《React 中的状态管理架构模式》&lt;/a>：本系列文章着眼于对于现代复杂 Web 应用，譬如 React 或类似框架，的开发中常见的状态管理的架构模式。文章中会依次介绍 Naive Hierarchical Architectural Pattern、Top-Heavy Architecture、Flux 等等内容。( &lt;a href="https://parg.co/b4J" target="_blank" rel="noopener">https://parg.co/b4J&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4v" target="_blank" rel="noopener">《失信的 Web Components》&lt;/a>：本文是一篇带有强烈主观色彩讨论 Web Components 的文章，其回顾了六年前 Alex Russel 提出 Web Components 寄以带来的现代 Web 开发的愿望与准则，然后比较了 Web Components 与 React、Vue.js 等现代常用的开发框架；有对 Web Components 一直保持关注的开发者可以带着思辨的态度看看这篇文章。( &lt;a href="https://parg.co/b4v" target="_blank" rel="noopener">https://parg.co/b4v&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4a" target="_blank" rel="noopener">《使用 Inline Cache 优化动态 JavaScript 代码》&lt;/a>：本文是作者在开发 JSIL 开源库时使用的一系列优化手段的总结，主要关于如何使用多态在线缓存(Polymorphic Inline Cache)来优化代码执行速度，不过这种方式也有可能造成意外的变化。作者介绍了何谓 Inline Cache 及其优化原理和带来的性能提升评测等内容。( &lt;a href="https://parg.co/b4a" target="_blank" rel="noopener">https://parg.co/b4a&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开源项目">开源项目&lt;/h2>
&lt;p>&lt;code>乐于分享，共推前端发展&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4Q" target="_blank" rel="noopener">《glamorous》&lt;/a>：来自 PayPal 的 React 组件的 CSS-in-JS 解决方案，其支持 JSX 语法、自定义样式组件等多种灵活的功能。( &lt;a href="https://parg.co/b4Q" target="_blank" rel="noopener">https://parg.co/b4Q&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://piqnt.com/planck.js/" target="_blank" rel="noopener">《Planck.js》&lt;/a>：Planck.js 是基于 JavaScript 的 2D 物理引擎，能够用于创建跨平台的 HTML 游戏。( &lt;a href="http://piqnt.com/planck.js/" target="_blank" rel="noopener">http://piqnt.com/planck.js/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://atomiks.github.io/tippyjs/" target="_blank" rel="noopener">《Tippy.js》&lt;/a>：Tippy.js 是基于纯粹的 JavaScript 的轻量级无添加的 ToolTip 库。( &lt;a href="https://atomiks.github.io/tippyjs/" target="_blank" rel="noopener">https://atomiks.github.io/tippyjs/&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://uber.github.io/deck.gl/#/" target="_blank" rel="noopener">《Deck.gl》&lt;/a>：Deck.gl 是 Uber 出品的基于 WebGL 的支持大规模数据可视化的库，其能够用于对大型数据集中的数据进行可视化探索与展现。( &lt;a href="https://uber.github.io/deck.gl/#/" target="_blank" rel="noopener">https://uber.github.io/deck.gl/#/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/adazzle/react-data-grid" target="_blank" rel="noopener">《React Data Grid》&lt;/a>：基于 React 构建的类似于 Excel 的网格组件，其提供了编辑、键盘导航、复制粘贴等多种功能。( &lt;a href="https://github.com/adazzle/react-data-grid" target="_blank" rel="noopener">https://github.com/adazzle/react-data-grid&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="前端之巅">前端之巅&lt;/h2>
&lt;p>前端之巅是 InfoQ 旗下关注前端技术的垂直社群，加入前端之巅学习群请关注前端之巅公众号后回复“加群”。投稿请发邮件到 &lt;a href="mailto:editors@cn.infoq.com">editors@cn.infoq.com&lt;/a>，注明“前端之巅投稿”。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="http://upload-images.jianshu.io/upload_images/1647496-01712a993d2b23de.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="前端之巅微信底图－5.jpg" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p></description></item><item><title>4.3-Frontend</title><link>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/4/4.3-frontend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/4/4.3-frontend/</guid><description>&lt;p>﻿# 前端每周清单第 9 期：React Studio 1.0.2、ECharts GL 1.0 alpha 发布；向 jQuery 用户介绍 Vue&lt;/p>
&lt;p>&lt;code>前端&lt;/code> &lt;code>前端每周清单&lt;/code>&lt;/p>
&lt;p>&lt;a href="http://www.infoq.com/cn/FE-Weekly" target="_blank" rel="noopener">前端每周清单&lt;/a>专注前端领域内容，分为新闻热点、开发教程、工程实践、深度阅读、开源项目、巅峰人生等栏目。关注【前端之巅】微信公众号(ID：frontshow)，及时获取前端每周清单。&lt;/p>
&lt;h2 id="新闻热点">新闻热点&lt;/h2>
&lt;p>&lt;code>国内国外，前端最新动态&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRi" target="_blank" rel="noopener">《Chrome 59 即将支持 Headless 模式》&lt;/a>：近日，Chrome 宣布在 59 版本中开始支持 Headless/Server 模式，允许用户加载网页、提取出 DOM 这样的元数据、生成网页内容的位图等等 Chromium 与 Blink 所支持的功能。同时，著名 Headless 浏览器 PhantomJS 的某位核心开发者&lt;a href="https://news.ycombinator.com/item?id=14105489" target="_blank" rel="noopener">宣布&lt;/a>退出 PhantomJS，噫吁唏。( &lt;a href="https://parg.co/bRi" target="_blank" rel="noopener">https://parg.co/bRi&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://jlongster.com/prettier-1.0" target="_blank" rel="noopener">《Prettier 1.0 发布》&lt;/a>：Prettier 是目前最为流行的 JavaScript 格式化工具之一，其能够将代码编译为 AST 然后将格式化之后的代码写回到文件中。在 1.0 正式版中，Prettier 对于 JSX、CSS-in-JS、装饰器、Flow 等语法添加了支持或者优化了格式结果，并且修复了一系列的错误。Prettier 可以同时在命令行、WebStorm、VSCode 等常见的编辑器中使用，笔者建议开发团队应该统一格式化工具以避免无谓的提交。( &lt;a href="http://jlongster.com/prettier-1.0" target="_blank" rel="noopener">http://jlongster.com/prettier-1.0&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRs" target="_blank" rel="noopener">《Meteor 1.4.4 发布》&lt;/a>：近日 Meteor 宣布发布其 1.4.4 版本，包括了对于部分核心依赖的更新与错误的修复，并且提升了整体的稳定性，同时为 Cordova 应用添加了基于 Google 权限认证的功能。( &lt;a href="https://parg.co/bRs" target="_blank" rel="noopener">https://parg.co/bRs&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRC" target="_blank" rel="noopener">《React Studio 1.0.2 发布》&lt;/a>：React Studio 是基于 React 的交互式开发工具，在其新版本中优化了界面布局，使得开发者更方便地添加组件到项目中；提供了回撤、隐藏等功能，并且加入了许多新的模板项目，允许自定义 CSS 动画类型等功能。( &lt;a href="https://parg.co/bRC" target="_blank" rel="noopener">https://parg.co/bRC&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开发教程">开发教程&lt;/h2>
&lt;p>&lt;code>步步为营，掌握基础技能&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRH" target="_blank" rel="noopener">《完整的 HTTP/2 服务端推送指南》&lt;/a>：HTTP/2 相较于 HTTP/1 带来了极大的性能提升，而其中的服务端推送允许服务端在客户端请求之前主动地推送未来可能需要的静态资源；这种方式能够较好地在实现 HTTP/1 优化中常用的内联方式的同时避免其带来的实践中的缺陷。而本文则是详细地介绍服务端推送的原理、其解决的问题以及在常见服务器中的配置方式。( &lt;a href="https://parg.co/bRH" target="_blank" rel="noopener">https://parg.co/bRH&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bR3" target="_blank" rel="noopener">《利用 React 打造特斯拉电池仪表盘》&lt;/a>：本系列文章介绍了如何用 React、Redux 等相关前端技术来打造简单的特斯拉电池仪表盘界面。其第一篇博客着眼于如何使用 create-react-app 创建基本项目并且使用组件内状态来存储数据；而第二篇博客则介绍了如何使用 Redux 来管理外部状态。( &lt;a href="https://parg.co/bR3" target="_blank" rel="noopener">https://parg.co/bR3&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRO" target="_blank" rel="noopener">《基于 JavaScript 构建数据表达式分词器》&lt;/a>：本文是一篇挺有意思的文章，介绍如何利用 JavaScript 解构常见数学表达式并且从中提取出相关实体。本文涉及到的内容包括对于分词器的简单介绍、对于抽象语法树 AST 的介绍以及最终如何使用代码来实现分词算法。( &lt;a href="https://parg.co/bRO" target="_blank" rel="noopener">https://parg.co/bRO&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRN" target="_blank" rel="noopener">《面向重度 jQuery 开发者的 Vue.js 介绍》&lt;/a>：本文是一位经验丰富的开发者，在将原有的基于 jQuery 工程重构为基于 Vue.js 工程的过程中总结出的经验与认识介绍。本文首先从零开始介绍如何搭建 Vue.js 基础项目并且一步一步地实现应用的各种特征，同时还对比了利用 Vue.js 与 利用 jQuery 实现的差异性以及二者在设计思想上的区别。( &lt;a href="https://parg.co/bRN" target="_blank" rel="noopener">https://parg.co/bRN&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="工程实践">工程实践&lt;/h2>
&lt;p>&lt;code>立足实践，提示实际水平&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4w" target="_blank" rel="noopener">《Sketch 43 会改变你的工作流》&lt;/a>：在近日的 Sketch Meetup 中 Andree 再次确认下个版本的 Sketch 会提供新的开放式文件格式，允许开发者自定义程序来读取或者修改文件。Andree 还提到了所谓设计即代码、代码即设计的理念，本文作者认为即使这种方式还是存在一定的缺陷，但是这种新的开源格式仍然会为开发者与设计者的日常工作流带来极大的改变。( &lt;a href="https://parg.co/b4w" target="_blank" rel="noopener">https://parg.co/b4w&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRR" target="_blank" rel="noopener">《TypeScript 在 Slack 的实践分享》&lt;/a>：维护大型的跨平台的 JavaScript 代码库是一件非常具有挑战性的工作，无论是从 Chrome 的 JavaScript 中传递对象给 Objective-C 或者单纯的接受来自 Node.js 中的回调结果，你都需要保证不同的代码对于通讯对象的期望之间的一致性。而本文即是在开发跨平台多终端的应用中，Slack 使用 TypeScript 来约束类型，从而避免意外的类型不一致导致的崩溃的实践经验分享。( &lt;a href="https://parg.co/bRR" target="_blank" rel="noopener">https://parg.co/bRR&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRV" target="_blank" rel="noopener">《Twitter Lite 与高性能可扩展 React PWA 实践》&lt;/a>：本文是 Twitter 工程师团队介绍其在开发世界上最大的 PWA 应用之一，Twitter Lite 过程中克服各种各样的性能瓶颈的实践经验。其核心思想包括基于路由的代码切分、避免可能导致掉帧的函数、使用压缩比更好的图片资源、以及优化 React 更新过程、避免频繁修正 Redux Store、延迟注册 ServiceWorker 等部分。( &lt;a href="https://parg.co/bRV" target="_blank" rel="noopener">https://parg.co/bRV&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRk" target="_blank" rel="noopener">《React Native 性能优化》&lt;/a>：本文作者承接 &lt;a href="https://parg.co/bRJ" target="_blank" rel="noopener">React Native 性能瓶颈与解决方案&lt;/a>，以新的实际开发中的例子讨论如何优化 React Native 应用性能。作者以类似于 Android 中 Toolbar 的列表为例，介绍了如何对性能进行测试、使用原生的滚动监听、使用声明式接口等多个方面的内容。( &lt;a href="https://parg.co/bRk" target="_blank" rel="noopener">https://parg.co/bRk&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="深度阅读">深度阅读&lt;/h2>
&lt;p>&lt;code>深度思考，升华开发智慧&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRh" target="_blank" rel="noopener">《2017 里 JavaScript 带给我的感动》&lt;/a>：本文作者纵览了在 2017 年中 JavaScript 生态圈可能迎来的一系列巨大变革。他首先对比了 JavaScript 与 Reason，浅述了二者的优劣对比。然后介绍了 WebAssembly 以及另一个新兴语言 Rust 未来可能在 JavaScript 生态圈中占据的一席之地。最后，作者还介绍了 Docker、Now.sh 以及 Github Pages 等一系列优秀的辅助开发工具，并且畅想了去中心化浪潮下 Web 的未来发展。( &lt;a href="https://parg.co/bRh" target="_blank" rel="noopener">https://parg.co/bRh&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRt" target="_blank" rel="noopener">《算法驱动设计：人工智能是如何改变设计流程的》&lt;/a>：大数据时代人工智能不断渗透工作生活的方方面面，而本文作者则是从设计的角度出发，介绍了如何在实际工作中贯彻算法驱动设计的理念，利用算法模型与历史数据来判断什么样的设计可能更会受到用户的青睐；作者还以完整的设计实例介绍了从构建到素材准备的流程。( &lt;a href="https://parg.co/bRt" target="_blank" rel="noopener">https://parg.co/bRt&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://realm.io/news/the-post-mvc-age/" target="_blank" rel="noopener">《后 MVC 时代》&lt;/a>：在很长一段时间里，MVC(Model-View-Controller)架构是构建应用的黄金法则，而近几年随着 React，Vue.js，Angular 等以组件为中心的库的流行，MVC 架构在前端却趋于平寂。开发者往往将模型、视图与控制器耦合在单个实体内，而打破了传统的 MVC 架构中的约束。类似于 Flux 或者响应式编程的设计思想也改变了应用状态的处理方式，不同于 MVC 中的双向绑定，而是数据在实体之间单向流动。本文即是讨论在所谓后 MVC 时代的 GUI 应用架构的思考。( &lt;a href="https://realm.io/news/the-post-mvc-age/" target="_blank" rel="noopener">https://realm.io/news/the-post-mvc-age/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRL" target="_blank" rel="noopener">《浏览器中的原生 ES6 模块：是时候重新考虑打包发布流程？》&lt;/a>：ES6 模块标准出台已有数年，而目前最流行的方式就是使用 Babel 等转译工具将 ES6 模块转译为 CommonJS 等模块语法以发布到浏览器中运行。而随着 Safari、Firefox、Edge 都纷纷支持原生 ES6 模块，本文作者也重新思考是否需要改变现有的应用打包与发布流程。本文首先对比介绍了基于 Babel/Webpack 的打包与使用原生的 ES6 模块之间的异同，讨论了真实环境下直接使用原生模块的可行性等内容。( &lt;a href="https://parg.co/bRL" target="_blank" rel="noopener">https://parg.co/bRL&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开源项目">开源项目&lt;/h2>
&lt;p>&lt;code>乐于分享，共推前端发展&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRf" target="_blank" rel="noopener">《Electron Forge》&lt;/a>：Electron Forge 是构建现代 Electron 应用的完整工具集，其整合了很多现存的用于 Electron 的开发工具，去芜存菁，将它们整合为简单易用的能够直接上手的辅助开发工具。( &lt;a href="https://parg.co/bRf" target="_blank" rel="noopener">https://parg.co/bRf&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://elasticlunr.com/" target="_blank" rel="noopener">《Elasticlunr.js》&lt;/a>：Elasticlunr.js 是轻量级的提供了浏览器端搜索与离线搜索的全文搜索引擎，其基于 Lunr.js 开发不过提供了更加灵活的功能。Elasticlunr.js 支持基于时间与指定域的查询，它有点类似于 Solr 不过更为灵活并且对于开发者更为友好。( &lt;a href="http://elasticlunr.com/" target="_blank" rel="noopener">http://elasticlunr.com/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bR8" target="_blank" rel="noopener">《CodeSandbox》&lt;/a>：CodeSandbox 是一个在线的 React 编辑器，其能够帮助开发者更快更方便地展示与分享基于 React 的项目。CodeSandbox 会自动化执行类似于编译、打包、依赖管理等多种项目构建中的常见任务，同时 CodeSandbox 还允许开发者添加自定义的 node_modules 中的依赖。( &lt;a href="https://parg.co/bR8" target="_blank" rel="noopener">https://parg.co/bR8&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.slatejs.org/" target="_blank" rel="noopener">《Slate》&lt;/a>：Slate 是类似于 Draft.js 的灵活可自定义的富文本编辑器构建框架，Slate 允许你构建功能丰富的类似于 Medium、Dropbox Paper、Canvas 这样的编辑器。Slate 提供了各式各样的插件，你可以基于 React 与 Immutable 来构建自定义的插件，并且指定哪些插件属于核心插件。( &lt;a href="https://docs.slatejs.org/" target="_blank" rel="noopener">https://docs.slatejs.org/&lt;/a> )&lt;/p>
&lt;h2 id="巅峰人生">巅峰人生&lt;/h2>
&lt;/li>
&lt;/ul>
&lt;h2 id="前端之巅">前端之巅&lt;/h2>
&lt;p>前端之巅是 InfoQ 旗下关注前端技术的垂直社群，加入前端之巅学习群请关注前端之巅公众号后回复“加群”。投稿请发邮件到 &lt;a href="mailto:editors@cn.infoq.com">editors@cn.infoq.com&lt;/a>，注明“前端之巅投稿”。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="http://upload-images.jianshu.io/upload_images/1647496-01712a993d2b23de.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="前端之巅微信底图－5.jpg" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p></description></item><item><title>4.4-Frontend</title><link>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/4/4.4-frontend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/4/4.4-frontend/</guid><description>&lt;h1 id="前端每周清单第-10-期firefox53react-vr-发布js-测试技术概述microsoft-edge-现代-dom-树构建及性能之道">前端每周清单第 10 期：Firefox53、React VR 发布、JS 测试技术概述、Microsoft Edge 现代 DOM 树构建及性能之道&lt;/h1>
&lt;p>&lt;code>前端&lt;/code> &lt;code>前端每周清单&lt;/code>&lt;/p>
&lt;p>&lt;a href="http://www.infoq.com/cn/FE-Weekly" target="_blank" rel="noopener">前端每周清单&lt;/a>专注前端领域内容，分为新闻热点、开发教程、工程实践、深度阅读、开源项目、巅峰人生等栏目。关注【前端之巅】微信公众号(ID：frontshow)，及时获取前端每周清单。&lt;/p>
&lt;h2 id="新闻热点">新闻热点&lt;/h2>
&lt;p>&lt;code>国内国外，前端最新动态&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bRT" target="_blank" rel="noopener">《Firefox 53 发布》&lt;/a>：近日，Firefox 53 正式发布；新版本中提供了一系列的特性与问题修复。新版本中其为 Windows 平台引入了 Quantum Compositor Process、新增了跨浏览器插件标准 WebExtension 部分接口特性、提供了 CSS Mask 特性的支持并且优化了浏览器中音视频播放的体验。( &lt;a href="https://parg.co/bRT" target="_blank" rel="noopener">https://parg.co/bRT&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bfR" target="_blank" rel="noopener">《Facebook 发布 React VR 来简化 Web 中虚拟现实应用的开发》&lt;/a>：近年来，虚拟现实技术迅猛发展，有望成为下一个主流处理平台。而 Facebook 近日正式发布 React VR，其能够帮助开发者快速构建 VR 应用。React VR 同样基于 React 与 React Native 提供了声明式的代码风格，能够允许有 React 开发经验的开发者快速上手。( &lt;a href="https://parg.co/bfR" target="_blank" rel="noopener">https://parg.co/bfR&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bfs" target="_blank" rel="noopener">《Relay Modern 正式发布》&lt;/a>：Relay Modern 是 Relay 的重构版本，其增强了框架的易用性、可扩展性以及在移动端的性能表现。Relay Modern 支持声明式数据抓取、提供了 AOT 性能优化以及新的垃圾回收机制。( &lt;a href="https://parg.co/bfs" target="_blank" rel="noopener">https://parg.co/bfs&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bfh" target="_blank" rel="noopener">《Expo SDK 16.0.0 版本发布》&lt;/a>：近日，Expo SDK 发布了其 16.0.0 版本，其提升了内置 iOS 开发者工具的表现、添加了对于 React 16 alpha 版本的兼容性支持以及 react-devtools 的支持。( &lt;a href="https://parg.co/bfh" target="_blank" rel="noopener">https://parg.co/bfh&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开发教程">开发教程&lt;/h2>
&lt;p>&lt;code>步步为营，掌握基础技能&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://rainsoft.io/7-tips-to-handle-undefined-in-javascript/" target="_blank" rel="noopener">《JavaScript 中处理 undefined 的 7 个技巧》&lt;/a>：不同于 Python 或者 Java 中仅有 null 或 nil 来表示空值，JavaScript 为我们提供了 undefined 与 null。本文则是深度分析了 undefined 与 null 的区别，讨论了实际工程开发中 undefined 的使用场景，譬如未初始化对象、不存在的对象属性或者方法、越界访问、无返回值的函数等；作者最后还给出了一些对于 undefined 的注意点，譬如提高内聚性降低耦合性等。( &lt;a href="https://rainsoft.io/7-tips-to-handle-undefined-in-javascript/" target="_blank" rel="noopener">https://rainsoft.io/7-tips-to-handle-undefined-in-javascript/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bf4" target="_blank" rel="noopener">《在 Vue.js 项目中使用第三方库》&lt;/a>：本文介绍了如何在基于单文件模块的 Vue.js 项目中使用 Lodash、Moment、Axios 这些优秀的第三方库或框架。本文递进地介绍了譬如全局变量引用、单文件导入、扩展 Vue 对象、插件实现等多种方式。( &lt;a href="https://parg.co/bf4" target="_blank" rel="noopener">https://parg.co/bf4&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://auth0.com/blog/vuejs2-authentication-tutorial/" target="_blank" rel="noopener">《Vue.js 2 中的权限验证指南》&lt;/a>：本文介绍了如何快速构建 Vue.js 2 应用程序并且添加合适的权限验证模块。本文首先介绍了 Vue.js、Angular 以及 React 之间设计思想的对比，然后介绍了 Vue.js 2.0 中的核心概念与基本用法，最后以某个真实的登录控制案例介绍了如何为 Vue.js 应用中添加权限验证功能。( &lt;a href="https://auth0.com/blog/vuejs2-authentication-tutorial/" target="_blank" rel="noopener">https://auth0.com/blog/vuejs2-authentication-tutorial/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bfO" target="_blank" rel="noopener">《Relay Modern 与 GraphQL 实践》&lt;/a>：GraphQL 允许接口的使用者快速地声明他们的数据需求，而近日正式发布的 Relay Modern 工具内建地支持 GraphQL。本文即是介绍如何在项目中使用 Relay Modern 与 GraphQL 来获取数据、管理状态，本文首先介绍了 Relay Modern 的设计理念与目标，然后介绍了其与传统的 Relay 框架之间的区别，最后以某个简单的例子来说明 Relay Modern 在项目中的真实实践用法。( &lt;a href="https://parg.co/bfO" target="_blank" rel="noopener">https://parg.co/bfO&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bfV" target="_blank" rel="noopener">《Node.js 中 Object Streams 的终极指南》&lt;/a>：Node.js 中的流为我们提供了强大的功能，允许我们异步地处理输入与输出，或者在多个独立步骤中进行数据转换。而本文则是首先回顾了流相关的理论，然后介绍了如何像 Gulp 那样进行对象流的转换操作。( &lt;a href="https://parg.co/bfV" target="_blank" rel="noopener">https://parg.co/bfV&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="工程实践">工程实践&lt;/h2>
&lt;p>&lt;code>立足实践，提示实际水平&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bf3" target="_blank" rel="noopener">《2017 年 JavaScript 测试技术概述》&lt;/a>：本文涵盖了 2017 年中 JavaScript 领域流行的测试理念、名词与概念、工具以及测试的方法论。本文介绍了基本的测试类型的划分、常用测试工具的划分、以及 Jest、Mocha、Nightwatch 这样的常用测试工具的选项与实践技巧。( &lt;a href="https://parg.co/bf3" target="_blank" rel="noopener">https://parg.co/bf3&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bff" target="_blank" rel="noopener">《不要仅依赖 IP 地址猜测客户端语言》&lt;/a>：本文是作者从自己在欧洲旅行时候的切身访问体验，总结而出的网站切换客户端语言的误区与改进方向。作者认为大型的门户网站不应该只依赖于用户 IP 地址来决定其语言，而应该充分应用 HTTP 请求头中的相关字段来动态地切换。( &lt;a href="https://parg.co/bff" target="_blank" rel="noopener">https://parg.co/bff&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bfM" target="_blank" rel="noopener">《大型高性能 React PWA 如何消除各类性能瓶颈？》&lt;/a>：想要构建一款性能出色的 Web 应用程序，我们需要投入大量技术周期以检测时间浪费点、了解其发生原因并尝试各类解决方案。遗憾的是，这种做法往往无法快速解决问题。性能无疑是一项永恒的命题，技术人员永远徘徊在观察与测量当中，却几乎永远找不到最优解。不过利用 Twitter Lite，我们已经在众多层面内取得了细小但却极具价值的改进：从初始加载时间到 React 组件渲染(防止二次渲染)，再到图像加载以及更多层面。尽管大多数变更本身并不显著，但其相加所带来的最终结果是，我们得以构建起一款规模极大且速度极快的渐进式 Web 应用程序。( &lt;a href="https://parg.co/bfM" target="_blank" rel="noopener">https://parg.co/bfM&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bft" target="_blank" rel="noopener">《Atom 是如何优化客户端应用的启动时间》&lt;/a>：本文是 Atom 技术团队对过去数月中优化客户端应用的启动时间的实践的总结。本文首先介绍了减少启动时间面临的一系列困难，然后详细解释了 Atom 1.17 中使用的一系列优化技巧，最后描述了未来规划的一系列进阶优化方向。本文提及的优化方式包括 V8 snapshots、electron-link、Custom Elements 与 jQuery、优化 require 时间、重构 atom 全局对象、优化样式表加载、预加载包体等等方面。( &lt;a href="https://parg.co/bft" target="_blank" rel="noopener">https://parg.co/bft&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bfQ" target="_blank" rel="noopener">《使用 create-graphql-server 快速搭建 GraphQL 服务器》&lt;/a>：本文介绍了如何用几个简单的命令快速搭建 GraphQL 服务器，其使用 Node.js 作为应用后端、Mongodb 作为数据存储。( &lt;a href="https://parg.co/bfQ" target="_blank" rel="noopener">https://parg.co/bfQ&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="深度阅读">深度阅读&lt;/h2>
&lt;p>&lt;code>深度思考，升华开发智慧&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bfC" target="_blank" rel="noopener">《应该知道的关于 Angular 中的变化检测的知识》&lt;/a>：本文探讨了 Angular 4.0 中使用的变化检测机制，介绍了其底层实现与常见的用户场景。本文主要包含两个部分，第一部分相对偏向于技术实现的介绍与链接分享，深入浅出地解释了 4.0.1 版本中变化检测的机制原理；第二部分则是介绍了变化检测如何被应用到真实的项目与用户使用案例中。( &lt;a href="https://parg.co/bfC" target="_blank" rel="noopener">https://parg.co/bfC&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bfN" target="_blank" rel="noopener">《单页应用的数据流方案探索》&lt;/a>：本文深入浅出地讨论了前端应用的数据流实践方案，首先引入了 MDV 以及响应式编程的概念，然后讨论了真实业务场景下数据来源的抽象层次，接下来又分析了组件内部状态与外置状态的常用处理方案的对比，最后介绍了 MVI 架构、组件化与分形、状态的分组与管理以及中前端数据建模等相关内容。( &lt;a href="https://parg.co/bfN" target="_blank" rel="noopener">https://parg.co/bfN&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bf8" target="_blank" rel="noopener">《Microsoft Edge 中的现代 DOM 树构建之道》&lt;/a>：DOM 是 Web 平台中基础的编程模型，其设计与性能会影响到浏览器中的方方面面。在过去的三年中，Microsoft Edge 团队一直致力于重构 IE 中过时且低效的 DOM 树数据结构。本文首先会回顾 IE 与 Microsoft Edge 中 DOM 的变迁历史，然后介绍了最新的 Microsoft Edge 中使用的 DOM 树的数据结构和其能够带来巨大性能提升的原因。( &lt;a href="https://parg.co/bf8" target="_blank" rel="noopener">https://parg.co/bf8&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bfk" target="_blank" rel="noopener">《Microsoft Edge 中的 JavaScript 性能、WebAssembly 以及 Shared Memory》&lt;/a>：JavaScript 的性能表现是 Web 开发中永恒的话题，而 Microsoft Edge 团队也在实时接收用户反馈以提升 Chakra JavaScript 引擎的性能表现。本文首先介绍了 Chakra 中的新特性，包括了一系列提升 JavaScript 性能表现的技巧；然后还讨论了 WebAssembly、Shared Memory 与 Atomics 等新特性在 Edge 中的具体实现。( &lt;a href="https://parg.co/bfk" target="_blank" rel="noopener">https://parg.co/bfk&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开源项目">开源项目&lt;/h2>
&lt;p>&lt;code>乐于分享，共推前端发展&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/pnpm/pnpm" target="_blank" rel="noopener">《pnpm》&lt;/a>：高性能、低空间占用的 npm install 替代实现。目前标准的 npm 与 Facebook 的提升版 yarn 都尚未解决系统中多 Node 项目时多个的 node_modules 带来的磁盘占用问题；而 pnpm 则会在 ~/.pnpm-store 中存储全部依赖，然后在需要的项目中以链接方式引入，从而减少整体的磁盘使用空间。( &lt;a href="https://github.com/pnpm/pnpm" target="_blank" rel="noopener">https://github.com/pnpm/pnpm&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/paulirish/pwmetrics" target="_blank" rel="noopener">《pwmetrics》&lt;/a>：基于 LightHouse 封装的能够在命令行中使用的 PWA 应用的性能评测工具。( &lt;a href="https://github.com/paulirish/pwmetrics" target="_blank" rel="noopener">https://github.com/paulirish/pwmetrics&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/callstack-io/haul" target="_blank" rel="noopener">《haul》&lt;/a>：Haul 是基于 Webpack 这样开源框架构建的 react-native 命令行工具的替代品，它支持从运行于开发时服务器到打包发布至生产环境等全生命周期的功能。Haul 的最大特性在于允许开发者使用 Webpack 生态系统中各种合影的加载器与插件，并且不需要 watchman 等外部工具的辅助，还优化了错误提示信息。( &lt;a href="https://github.com/callstack-io/haul" target="_blank" rel="noopener">https://github.com/callstack-io/haul&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/tannerlinsley/react-move" target="_blank" rel="noopener">《react-move》&lt;/a>：方便快捷地 React 组件动画库，支持 React、React Native 以及 React VR。React Move 允许开发者忽略具体的动画属性控制而完全托管于框架，同时它还提供了多个生命周期中的回调函数方便开发者进行控制。( &lt;a href="https://github.com/tannerlinsley/react-move" target="_blank" rel="noopener">https://github.com/tannerlinsley/react-move&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/xtuc/async-reactor" target="_blank" rel="noopener">《async-reactor》&lt;/a>：React 中异步无状态函数式组件加载工具，其支持在函数中使用 import 来引入模块或者 fetch 抓取第三方数据。( &lt;a href="https://github.com/xtuc/async-reactor" target="_blank" rel="noopener">https://github.com/xtuc/async-reactor&lt;/a> )&lt;/p>
&lt;h2 id="巅峰人生">巅峰人生&lt;/h2>
&lt;/li>
&lt;/ul>
&lt;h2 id="前端之巅">前端之巅&lt;/h2>
&lt;p>前端之巅是 InfoQ 旗下关注前端技术的垂直社群，加入前端之巅学习群请关注前端之巅公众号后回复“加群”。投稿请发邮件到 &lt;a href="mailto:editors@cn.infoq.com">editors@cn.infoq.com&lt;/a>，注明“前端之巅投稿”。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="http://upload-images.jianshu.io/upload_images/1647496-01712a993d2b23de.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="前端之巅微信底图－5.jpg" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p></description></item></channel></rss>