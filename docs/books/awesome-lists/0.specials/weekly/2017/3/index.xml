<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>3 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/3/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/3/index.xml" rel="self" type="application/rss+xml"/><description>3</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>3</title><link>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/3/</link></image><item><title>3.1</title><link>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/3/3.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/3/3.1/</guid><description>&lt;p>﻿# 某熊周刊系列:一周推荐外文技术资料(3.1)&lt;/p>
&lt;h1 id="技术纵横">技术纵横&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://medium.com/craft-academy/everything-i-learned-from-javascript30-d8d2db246b7?source=userActivityShare-fe48c4221a4c-1488448383" target="_blank" rel="noopener">Everything I learned from #Javascript30&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="编程语言">编程语言&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://blog.jetbrains.com/kotlin/2017/03/kotlin-1-1/" target="_blank" rel="noopener">Kotlin 1.1 Released with JavaScript Support, Coroutines and more&lt;/a>: Today we release Kotlin 1.1. It’s a big step forward enabling the use of Kotlin in many new scenarios, and we hope that you’ll enjoy it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.jonathanturner.org/2017/03/rls-alpha-2.html" target="_blank" rel="noopener">Rust Language Server Alpha 2 Release&lt;/a>: Today, we’re happy to announce the second alpha for the Rust Language Server, a project build to bring high-quality Rust IDE support to any IDE or editor. This release brings new features, better stability, and an easier installation than the first alpha.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://dzone.com/articles/factory-pattern-using-lambda-expression-in-java-8" target="_blank" rel="noopener">The Factory Pattern Using Lambda Expressions in Java 8&lt;/a>: The factory pattern is one of the best known patterns in Java. If you&amp;rsquo;re using lambda expressions, you can use those to implement the pattern, though beware scaling.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://auth0.com/blog/the-real-story-behind-es4/" target="_blank" rel="noopener">The Real Story Behind ECMAScript 4&lt;/a>: Our JavaScript history article sparked interesting comments regarding what really happened during the ECMAScript 4 era. Below you will find a more detailed perspective of what really went down between 1999 and 2008 in the world of JavaScript. Read on!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://lucasfcosta.com/2017/02/17/JavaScript-Errors-and-Stack-Traces.html" target="_blank" rel="noopener">JavaScript Errors and Stack Traces in Depth&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="编程基础">编程基础&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/cs01/gdbgui" target="_blank" rel="noopener">gdbgui&lt;/a>: A modern, browser-based frontend to gdb (gnu debugger). Add breakpoints, view stack traces, and more in C, C++, Go, and Rust! Simply run gdbgui from the terminal and a new tab will open in your browser.&lt;/li>
&lt;/ul>
&lt;h1 id="web">Web&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://new.gafferongames.com/post/why_cant_i_send_udp_packets_from_a_browser/" target="_blank" rel="noopener">Why can&amp;rsquo;t I send UDP packets from a browser?&lt;/a>: A solution for enabling UDP in the web&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://hackernoon.com/10-react-mini-patterns-c1da92f068c5#.5v2hpgurn" target="_blank" rel="noopener">10 React mini-patterns&lt;/a>: Over the last few years, I’ve worked on a handful of decent-sized React projects, and many, many pint-sized ones. Throughout this magical journey, a number of patterns have come up that I find myself repeating again and again.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://hacks.mozilla.org/2017/02/a-cartoon-intro-to-webassembly/" target="_blank" rel="noopener">A cartoon intro to WebAssembly&lt;/a>: WebAssembly is fast. You’ve probably heard this. But what is it that makes WebAssembly fast? In this series, I want to explain to you why WebAssembly is fast.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.freecodecamp.com/what-exactly-is-client-side-rendering-and-hows-it-different-from-server-side-rendering-bd5c786b340d#.n4zils8st" target="_blank" rel="noopener">Client-side vs. server-side rendering: why it’s not all black and white.&lt;/a>: Since the dawn of time, the conventional method for getting your HTML up onto a screen was by using server-side rendering. It was the only way. You loaded up your .html pages on your server, then your server went and turned them into useful documents on your users’ browsers.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://tympanus.net/codrops/css_reference/grid/" target="_blank" rel="noopener">CSS Grid Tutorial&lt;/a>: CSS Grid is a two-dimensional layout system created specifically to tackle grid-based user interfaces on the web.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://formidable.com/blog/2017/introducing-rapscallion/" target="_blank" rel="noopener">Introducing Rapscallion&lt;/a>: a new approach for server-side rendering React applications.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/dev-channel/progressive-web-app-libraries-in-production-b52cad37d34#.z5egf9m7v" target="_blank" rel="noopener">2017-Progressive Web App Libraries in Production&lt;/a>: This article is written by Addy Osmani. Two years ago, our team at Google started work on JavaScript libraries to reduce the friction for building Progressive Web Apps.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/coding-artist/vue-js-pokemon-battle-tutorial-380cd72eb681#.x8wnb4s0f" target="_blank" rel="noopener">Vue.js Pokemon Battle Tutorial&lt;/a>: A very detailed read that goes through the creation of a Pokemon Battle using Vue.js.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/barretlee/performance-column/issues" target="_blank" rel="noopener">Moving Airbnb Search to React&lt;/a>: Using experiments to tackle a large refactor with confidence&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://engineering.pivotal.io/post/tdd-mobx/" target="_blank" rel="noopener">TDD with React and MobX&lt;/a>: A look into testing MobX + React, plus why MobX is a viable alternative to Redux.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="服务端应用程序架构">服务端应用程序架构&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://chatbotsmagazine.com/design-framework-for-chatbots-aa27060c4ea3#.hzzim4enf" target="_blank" rel="noopener">Design Framework for Chatbots&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@thoszymkowiak/120-machine-learning-business-ideas-from-the-new-mckinsey-report-b81b239f336#.yud5yy5pq" target="_blank" rel="noopener">120 Machine Learning business ideas from the latest McKinsey report.&lt;/a>: 12 sectors where automation will take over in the short term.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/teesloane/Auth-Boss" target="_blank" rel="noopener">Auth-Boss&lt;/a>: Become an Auth Boss. Learn about different authentication methodologies on the web.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="数据科学与机器学习">数据科学与机器学习&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://janhuenermann.com/projects/learning-to-drive" target="_blank" rel="noopener">Self-driving cars in the browser&lt;/a>: The goal of this project was to create a fully self-learning agent, that would be able to control a car in a 2D bottom-down environment. Written solely in JavaScript.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://arxiv.org/abs/1701.07274" target="_blank" rel="noopener">Deep Reinforcement Learning: An Overview&lt;/a>: We give an overview of recent exciting achievements of deep reinforcement learning (RL). We start with background of deep learning and reinforcement learning, as well as introduction of testbeds. Next we discuss Deep Q-Network (DQN) and its extensions, asynchronous methods, policy optimization, reward, and planning. After that, we talk about attention and memory, unsupervised learning, and learning to learn. Then we discuss various applications of RL, including games, in particular, AlphaGo, robotics, spoken dialogue systems (a.k.a. chatbot), machine translation, text sequence prediction, neural architecture design, personalized web services, healthcare, finance, and music generation. We mention topics/papers not reviewed yet. After listing a collection of RL resources, we close with discussions.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://arxiv.org/abs/1702.08835" target="_blank" rel="noopener">Deep Forest: Towards An Alternative to Deep Neural Networks&lt;/a>: In this paper, we propose gcForest, a decision tree ensemble approach with performance highly competitive to deep neural networks. Discussion in &lt;a href="https://www.reddit.com/r/MachineLearning/comments/5x4a52/r_deep_forest_towards_an_alternative_to_deep/" target="_blank" rel="noopener">Reddit&lt;/a> and &lt;a href="https://news.ycombinator.com/item?id=13773127" target="_blank" rel="noopener">Hacker News&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/nanonets/nanonets-how-to-use-deep-learning-when-you-have-limited-data-f68c0b512cab#.wv6o4ysyf" target="_blank" rel="noopener">NanoNets&lt;/a>: NanoNets : How to use Deep Learning when you have Limited Data&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="基础架构">基础架构&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/jrothrock/server_notes" target="_blank" rel="noopener">Personal notes on building/configuring a server&lt;/a>: Here are various notes I&amp;rsquo;ve made for creating a server. These rules are for Ubuntu running nginx. I have some notes for Apache that I may add at another time.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://aws.amazon.com/cn/message/41926/" target="_blank" rel="noopener">Summary of the Amazon S3 Service Disruption in the Northern Virginia (US-EAST-1) Region&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="信息安全">信息安全&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://labs.detectify.com/2017/02/28/hacking-slack-using-postmessage-and-websocket-reconnect-to-steal-your-precious-token/" target="_blank" rel="noopener">Hacking Slack using postMessage and WebSocket-reconnect to steal your precious token&lt;/a>: Recently a bug I found in Slack was published on HackerOne and I wanted to explain it, and the method I used to discover it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/teesloane/Auth-Boss" target="_blank" rel="noopener">Auth-Boss&lt;/a>: Become an Auth Boss. Learn about different authentication methodologies on the web.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="移动开发">移动开发&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://rollout.io/blog/top-ios-development-bugs-and-how-to-avoid-them/" target="_blank" rel="noopener">Top 8 iOS Development Bugs and How to Avoid Them&lt;/a>: In this article, I bring you the eight most common iOS development bugs and crashes that you’ll probably face while being a junior developer, and also mid level or senior developer. After all, let’s be realistic, we can’t write perfect, flawless code all the time! I categorized the bugs by experience. These are just my opinion on them of course since development seniority level is something really arbitrary.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.freecodecamp.com/why-i-converted-my-app-to-a-chatbot-96355596725c#.4n6pobgj9" target="_blank" rel="noopener">I turned my mobile app into a chatbot. Here’s why.&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.cobeisfresh.com/top-5-ios-libraries-march-2017-3c4e4c8ddfad?gi=b13fad2838b#.tglly3ln7" target="_blank" rel="noopener">Top 5 iOS Libraries — March 2017&lt;/a>: After a long time of sitting inside, drinking coffee by the window and dreaming about the better times, we have finally had our first coffee break on the sunny balcony of our Osijek office. Hello sun, welcome back! And while we were in this dreamy, happy mood, we’ve prepared a new list with five iOS libraries, perfect for the springy month in front of us. Enjoy! :)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/tentone/nunuStudio" target="_blank" rel="noopener">nunuStudio&lt;/a>: nunuStudio is a JS based IDE for 3D and VR applications that run directly on the browser!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/the-react-native-log/comparing-the-performance-between-native-ios-swift-and-react-native-7b5490d363e2#.azcqq063o" target="_blank" rel="noopener">Comparing the Performance between Native iOS (Swift) and React-Native&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.androidauthority.com/performing-background-processing-750982/" target="_blank" rel="noopener">Android Concurrency: Performing Background Processing with Services&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@dmytrodanylyk/configuring-android-project-little-things-that-matter-d6a9d34c1ce0#.vvv88i233" target="_blank" rel="noopener">Configuring Android Project — Little Things That Matter&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>延伸阅读：&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/wx-chevalier" target="_blank" rel="noopener">知乎专栏：某熊的全栈之路&lt;/a>
&lt;blockquote>
&lt;/blockquote>
&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/c_67532981" target="_blank" rel="noopener">知乎专栏：前端当自强&lt;/a>
&lt;blockquote>
&lt;/blockquote>
&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/lotuc" target="_blank" rel="noopener">知乎专栏：lotuc 的编程之路&lt;/a>
&lt;blockquote>
&lt;/blockquote>
&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/24476917?refer=wx-chevalier" target="_blank" rel="noopener">2016-我的技术之路:编程知识体系结构&lt;/a>
&lt;blockquote>
&lt;/blockquote>
&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/24575395?refer=wx-chevalier" target="_blank" rel="noopener">2016-我的前端之路:工具化与工程化&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>3.1-Frontend</title><link>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/3/3.1-frontend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/3/3.1-frontend/</guid><description>&lt;p>﻿# 前端每周清单：Instant App 将至，WebAssembly 将获默认支持，PWA 实践渐增&lt;/p>
&lt;h2 id="新闻热点">新闻热点&lt;/h2>
&lt;p>&lt;code>前端领域最新动态&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://lists.w3.org/Archives/Public/public-webassembly/2017Feb/0002.html" target="_blank" rel="noopener">《WebAssembly 成员就 API 设计与二进制格式达成一致》&lt;/a>：近日，WebAssembly CG 成员单位 Chrome、Edge、Firefox 以及 Webkit 就初始版本的 WebAssembly API 以及 二进制格式达成一致，标志着浏览器预览阶段的结束，各大浏览器会开始默认支持 WebAssembly，让我们拭目以待。( &lt;a href="http://suo.im/AXQU" target="_blank" rel="noopener">http://suo.im/AXQU&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.stanforddaily.com/2017/02/28/cs-department-updates-introductory-courses/" target="_blank" rel="noopener">《斯坦福 CS 授课开始用 JavaScript 替换 Java》&lt;/a>：今年春学期，斯坦福计划将 CS106J 课程实验性地使用 JavaScript 而不是 Java 进行教学；并且将 CS106S: &amp;ldquo;Programming Abstraction and Social Good&amp;rdquo; 作为独立课程发布，鼓励学生思考他们未来能够承担的社会职位。( &lt;a href="http://suo.im/4DY8LJ" target="_blank" rel="noopener">http://suo.im/4DY8LJ&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.oschina.net/news/82352/ant-design-2-7-3" target="_blank" rel="noopener">《Ant Design 2.7.3 发布，阿里前端设计语言&amp;amp;前端框架》&lt;/a>：Ant Design 2.7.3 发布了，Ant Design 是蚂蚁金服开发和正在使用的一套企业级的前端设计语言和基于 React 的前端框架实现。( &lt;a href="http://suo.im/3hwBf9" target="_blank" rel="noopener">http://suo.im/3hwBf9&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s?__biz=MzAwODY4OTk2Mg==&amp;amp;mid=2652042552&amp;amp;idx=1&amp;amp;sn=8aeba91782656a43b52963ab6d836c00" target="_blank" rel="noopener">《备受瞩目的 Instant App 即将到来》&lt;/a>：Android 一向致力于让用户能以更加省力的方式发现并使用各种应用，而 Android Instant App 正是这一理念的集中体现——这是一种用户无需安装即可运行 Android 应用的全新方式。( &lt;a href="http://suo.im/1AddvL" target="_blank" rel="noopener">http://suo.im/1AddvL&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开发教程">开发教程&lt;/h2>
&lt;p>&lt;code>步步为营，掌握基础技能&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://tympanus.net/codrops/css_reference/grid/" target="_blank" rel="noopener">《CSS Grid 指南》&lt;/a>: 网格系统是布局设计的核心之一，在 Web 开发中我们经常需要借助第三方库来创建合适的网格系统。而 CSS Grid 则是一个二维布局系统，能够辅助开发者创建基于网格的用户界面，此文则是详细地介绍 CSS Grid 的语法细节以及调试实例。( &lt;a href="https://tympanus.net/codrops/css_reference/grid/" target="_blank" rel="noopener">https://tympanus.net/codrops/css_reference/grid/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/coding-artist/vue-js-pokemon-battle-tutorial-380cd72eb681#.x8wnb4s0f" target="_blank" rel="noopener">《基于 Vue.js 开发一个 Pokemon Battle 指南》&lt;/a>: 本文是非常详细的如何利用 Vue.js 开发一个宠物小精灵的战斗场景的教程，还是挺有意思的。( &lt;a href="http://suo.im/1jwicW" target="_blank" rel="noopener">http://suo.im/1jwicW&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/teesloane/Auth-Boss" target="_blank" rel="noopener">《Web 常见权限认证技术详解》&lt;/a>：此文详细阐述了 Web 开发中常用的权限认证技术，首先介绍了 Web 开发中与权限相关的常见名词，而后介绍了 HTTP Basic Authentication、基于 Session 的认知、基于 Token 的认证、JWT、OAuth 以及 OpenID。( &lt;a href="https://github.com/teesloane/Auth-Boss" target="_blank" rel="noopener">https://github.com/teesloane/Auth-Boss&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://auth0.com/blog/the-real-story-behind-es4/" target="_blank" rel="noopener">《ECMAScript 4 背后的故事》&lt;/a>: 本文是对于 1999 ~ 2008 年之间 JavaScript 世界发生的大事件的详细介绍，阐述了 ECMAScript 4 从提出到角力到流产的前世今生。( &lt;a href="http://suo.im/phBiE" target="_blank" rel="noopener">http://suo.im/phBiE&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/the-react-native-log/comparing-the-performance-between-native-ios-swift-and-react-native-7b5490d363e2#.azcqq063o" target="_blank" rel="noopener">《React Native 与 Swift 性能对比》&lt;/a>：作为混合式开发框架，React Native 在运行时仍然会实际调用 Objective-C 或者 Java。此文作者同时用 Swift 与 React Native 构建了相同的应用，并且从 CPU、GPU、内存使用、电池耗费等多个角度对这二者进行性能分析。结果表明二者性能相差无几，Swift 在 CPU 占用略占优势，二者的 GPU 占用不相伯仲，而 React Native 在内存上则有一定长处。( &lt;a href="http://suo.im/2MWZnA" target="_blank" rel="noopener">http://suo.im/2MWZnA&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://engineering.pivotal.io/post/tdd-mobx/" target="_blank" rel="noopener">《React 与 MobX 开发中的测试驱动开发》&lt;/a>: 本文对于 React 与 MobX 的基本使用进行了介绍，阐述了为何作者认为 MobX 是个不错的 Redux 的替代以及如何对 MobX 进行单元测试。( &lt;a href="http://suo.im/2PE2A6" target="_blank" rel="noopener">http://suo.im/2PE2A6&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/O6p" target="_blank" rel="noopener">《基于 React 与 GraphQL 的全栈开发指南》&lt;/a>：GraphQL 最早由 Facebook 提出以解决复杂多变的查询问题，弥补 REST 中的不足。它允许界面组件以声明式获取数据而忽略后端实现细节。本系列文章是由 Apollo 团队提供，讲解如何基于 React 与 GraphQL 开发应用。( &lt;a href="http://6me.us/O6p" target="_blank" rel="noopener">http://6me.us/O6p&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="工程实践">工程实践&lt;/h2>
&lt;p>&lt;code>立足实践，提示实际水平&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://hackernoon.com/10-react-mini-patterns-c1da92f068c5#.5v2hpgurn" target="_blank" rel="noopener">《React 开发中的 10 个微模式》&lt;/a>：此文是 Gilbertson 在工作中总结而来的 React 开发中常见的设计模式总结，譬如输入域的唯一标识分配、CSS 控制等等 。( &lt;a href="http://suo.im/42S8Kb" target="_blank" rel="noopener">http://suo.im/42S8Kb&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://tech.meituan.com/mt-mobile-analytics-practice.html" target="_blank" rel="noopener">《美团点评前端无痕埋点实践》&lt;/a>：构建一个数据平台大体上包括数据采集、数据上报、数据存储、数据计算，以及数据的可视化展示等几个重要的环节。前端数据采集与上报是整个流程中最重要的一环，只有确保前端数据生产的全面、准确、及时，最终产生的数据结果才是可靠的、有价值的。为了解决前端埋点的准确性、及时性、开发效率等问题，业内各家公司从不同角度，提出了多种技术方案，本文则是美团点评前端无痕埋点实践。( &lt;a href="http://suo.im/fVPpT" target="_blank" rel="noopener">http://suo.im/fVPpT&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/dev-channel/progressive-web-app-libraries-in-production-b52cad37d34#.3u42kd67r" target="_blank" rel="noopener">《工程实践中的 PWA 利器清单》&lt;/a>: 本文是 Google Chrome 团队的 Addy Osmani 所写，介绍了这两年来他们团队开发或者推荐的一系列能够用于生产环境的 PWA 开发工具或者辅助库。此文作者同时来列举了目前在很多主流站点应用 PWA 之后带来的一系列包括离线优先、首屏加载优化等提升用户体验的实践案例。( &lt;a href="http://suo.im/1IxGPJ" target="_blank" rel="noopener">http://suo.im/1IxGPJ&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://lucasfcosta.com/2017/02/17/JavaScript-Errors-and-Stack-Traces.html" target="_blank" rel="noopener">《深入了解 JavaScript 中错误对象与堆栈跟踪》&lt;/a>：JavaScript 中 Error 对象的堆栈跟踪信息包含了从异常抛出点到构造函数的所有栈帧信息，而手动地去捕获与操作堆栈跟踪信息有助于我们在开发测试或者异常处理相关的框架时有更好地实践。( &lt;a href="http://suo.im/MiMWd" target="_blank" rel="noopener">http://suo.im/MiMWd&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/2mS" target="_blank" rel="noopener">《Airbnb 使用 React 重构搜索功能的实践》&lt;/a>：早在 2015 年，Airbnb 的工程团队就决定将 React 作为主要的前端开发栈，不过因为其搜索页面过于复杂因此直到 2016 年初才开始迁移工作。本文就是 Airbnb 进行代码重构的经验介绍。( &lt;a href="http://6me.us/2mS" target="_blank" rel="noopener">http://6me.us/2mS&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/JS85s" target="_blank" rel="noopener">《百度搜索对 PWA 的探索和初步实践》&lt;/a>: 本文是百度搜索资深 Web 前端工程师沈洲在前端之巅微信群中的分享整理总结而成，介绍了百度天气 PWA 应用的开发实践，本周还分享了&lt;a href="http://6me.us/Ik5k1L" target="_blank" rel="noopener">《PWA 实践：从一个简单的页面开始》&lt;/a>与&lt;a href="http://6me.us/P5cB" target="_blank" rel="noopener">《PWA 实践：理解和创建 Service Worker 脚本》&lt;/a>等 PWA 相关内容 。(&lt;a href="http://6me.us/JS85s" target="_blank" rel="noopener">http://6me.us/JS85s&lt;/a>)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="深度阅读">深度阅读&lt;/h2>
&lt;p>&lt;code>深度思考，升华开发智慧&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://new.gafferongames.com/post/why_cant_i_send_udp_packets_from_a_browser/" target="_blank" rel="noopener">《对于在浏览器中使用 UDP 协议的一系列考虑》&lt;/a>: 现代浏览器与网站大多构建于 HTTP 协议之上，而对于类似 &lt;a href="https://agar.io/" target="_blank" rel="noopener">agar.io&lt;/a> 这样的实时游戏往往会选择 WebSockets 协议。此文作者首先介绍了下这些基于 TCP 的应用层协议面对的所谓对头阻塞问题，然后又讨论了 QUIC 以及 WebRTC 在构建专用服务器时的不足。最后，作者分析了使用 UDP 作为传输协议存在的问题，并且提出了 &lt;a href="http://netcode.io/" target="_blank" rel="noopener">netcode.io&lt;/a> 这个轻量级的传输加密的基于 UDP 封装的网络协议。( &lt;a href="http://suo.im/3j4EV6" target="_blank" rel="noopener">http://suo.im/3j4EV6&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://hacks.mozilla.org/2017/02/what-makes-webassembly-fast/" target="_blank" rel="noopener">《对比探秘 WebAssembly 性能优越之谜》&lt;/a>: 本系列文章通过有趣的漫画介绍了 WebAssembly 的前世今生，并且与 JavaScript 就加载、解析、编译、执行等浏览进行了详细对比，从而介绍 WebAssembly 的性能缘何相较于 JavaScript 会好上很多。同时作者也强调，WebAssembly 与 JavaScript 各有所长，未来并不会存在太多的竞争，更多的是相辅相成，各司其职。( &lt;a href="http://suo.im/3jsTUH" target="_blank" rel="noopener">http://suo.im/3jsTUH&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/the-node-js-collection/why-the-hell-would-you-use-node-js-4b053b94ab8e#.71g206imf" target="_blank" rel="noopener">《为何使用 Node.js》&lt;/a>：本文来自于 Node.js 的技术专家 Tomislav Capan，此文最早发布于 2013 年，详细介绍了 Node.js 的内部原理，并且论述了 Node.js 适用的业务场景与典型的范模式。( &lt;a href="http://suo.im/3sFwvm" target="_blank" rel="noopener">http://suo.im/3sFwvm&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@mattburgess/all-javascript-frameworks-are-terrible-e68d8865183e#.bl9akwprg" target="_blank" rel="noopener">《槽糕的 JavaScript 框架们》&lt;/a>：此文作者 Matt Burgess 严肃地吐槽批评了几乎所有的现今流行的 JavaScript 框架，与他上一篇文章&lt;a href="https://medium.com/@mattburgess/javascript-frameworks-are-great-2df4a3f0b24d#.qw54bvng0" target="_blank" rel="noopener">伟大的 JavaScript 框架&lt;/a>一起阅读效果更佳。当然，作者并不是想让大家回到茹毛饮血的岁月，而是希望能以辩证地态度去认识与使用框架。( &lt;a href="http://6me.us/e9R" target="_blank" rel="noopener">http://6me.us/e9R&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/5XC" target="_blank" rel="noopener">《当我们在谈大前端的时候，我们谈的是什么》&lt;/a>：大前端到底指的是什么？事实上大前端并没有明确的定义，它由国内业界发明，甚至没有对应的英文词汇。在客户端开发上，Native 与 HTML5 之争持续快十年，吵了人们都失去兴趣了，从现在来看，并没有谁取代谁，而是有融合的趋势，融合之后的产物就是大前端。本文则是对于大前端的一些探讨，还可以参考&lt;a href="http://6me.us/IT58a" target="_blank" rel="noopener">《大前端年终总结与展望：大前端时代即将来临？》&lt;/a>。( &lt;a href="http://6me.us/5XC" target="_blank" rel="noopener">http://6me.us/5XC&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/dgoI" target="_blank" rel="noopener">《来自 Google 的 API 设计指南》&lt;/a>：这是来自于 Google 的网络 API 设计指南，最早于 2014 在 Google 内部推行，指导了包括 Cloud APIs 等在内的一系列对外服务。该指南同时适用于 REST API 与 RPC API，特别是 gRPC API。( &lt;a href="http://6me.us/dgoI" target="_blank" rel="noopener">http://6me.us/dgoI&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开源项目">开源项目&lt;/h2>
&lt;p>&lt;code>乐于分享，共推前端发展&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/jaredreich/notie" target="_blank" rel="noopener">《notie》&lt;/a>：这是一个轻量级的、零依赖的面向 JavaScript 的通知、输入以及选择套件库。它允许弹出警示信息、确认输入框、允许用户输入信息、允许用户进行选择以及进行日期选择等。( &lt;a href="https://github.com/jaredreich/notie" target="_blank" rel="noopener">https://github.com/jaredreich/notie&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/marcuswestin/store.js" target="_blank" rel="noopener">《跨浏览器通用存储接口 Store.js》&lt;/a>：Store.js 能够根据浏览器情况自动选择合适的底层存储，并且提供了统一的 API 接口。Store.js 始于 2010 年，目前已经被运用到数以千计的站点中。而近日 Store.js 发布了 2.0 版本，其提供了完整的可插拔式的存储支持以及大量的附加功能。 ( &lt;a href="https://github.com/marcuswestin/store.js" target="_blank" rel="noopener">https://github.com/marcuswestin/store.js&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://formidable.com/blog/2017/introducing-rapscallion/" target="_blank" rel="noopener">《Rapscallion》&lt;/a>：React 服务端渲染的性能一直是广为诟病，相较于其他前端框架会满上很多，笔者在&lt;a href="https://zhuanlan.zhihu.com/p/25098455" target="_blank" rel="noopener">此文&lt;/a>中也进行过简要探讨。而 Rapscallion 则是新的支持 React 服务端渲染的开源包体，它支持异步非阻塞渲染，相较于&lt;code>renderToString&lt;/code>其能达到将近 50% 的性能提升。同时 Rapscallion 官方还为我们准备了基于 Redis 的缓存实例。( &lt;a href="http://suo.im/3YS6pz" target="_blank" rel="noopener">http://suo.im/3YS6pz&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://janhuenermann.com/projects/learning-to-drive" target="_blank" rel="noopener">《在浏览器中实现自动驾驶汽车》&lt;/a>：人工智能与深度学习的浪潮滚滚而来，也给我们带来了很多有趣的应用。该项目利用 JavaScript 创建了一个完整的自我学习的代理，能够在一个 2D 环境下控制某个车辆自动规避各种障碍 。用户还可以通过鼠标绘制出新的障碍，而小车可以通过强化学习不断进行自我更新，值得一试。( &lt;a href="http://suo.im/4egERz" target="_blank" rel="noopener">http://suo.im/4egERz&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/mattallty/Caporal.js" target="_blank" rel="noopener">《Caporal.js》&lt;/a>：特性全面的可用于创建 Node.js 命令行工具的框架，包括了帮助信息生成、自动补全等。 ( &lt;a href="https://github.com/mattallty/Caporal.js" target="_blank" rel="noopener">https://github.com/mattallty/Caporal.js&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/BafS/Gutenberg" target="_blank" rel="noopener">《Gutenberg》&lt;/a>：网页打印时的格式错乱一直是个头痛的问题，而 Gutenberg,css 提供了一系列基本的仅在打印时才会加载的样式，优化专用于打印的格式显示。( &lt;a href="https://github.com/BafS/Gutenberg" target="_blank" rel="noopener">https://github.com/BafS/Gutenberg&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="巅峰人生">巅峰人生&lt;/h2>
&lt;p>&lt;code>一览众山，聆听巅峰故事&lt;/code>&lt;/p></description></item><item><title>3.2-Frontend</title><link>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/3/3.2-frontend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/3/3.2-frontend/</guid><description>&lt;p>﻿# 前端每周清单：React Router 4.0 发布、Firefox 52 默认支持 WebAssembly、苹果热修复门盘点&lt;/p>
&lt;h2 id="新闻热点">新闻热点&lt;/h2>
&lt;p>&lt;code>前端领域最新动态&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://6me.us/ZXEz" target="_blank" rel="noopener">《苹果封杀带有热更新特性的应用》&lt;/a>：近日，部分使用 Rollout.js 或者 JSPatch 的开发者表示其应用在提交审核时受到了警告，表示因为应用可能会在运行时改变其功能特征而被打回。与此同时 React Native、Weex 等混合开发技术人员也表示了担心，不过 Rollout.js/JSPatch 都会暴露底层接口给 JavaScript 调用，而 RN 只是内部使用了原生方法，并且 Apple 也允许使用 JavaScriptCore 更新代码(CodePush 这类的是符合要求的)。( &lt;a href="http://6me.us/ZXEz" target="_blank" rel="noopener">http://6me.us/ZXEz&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/1Od" target="_blank" rel="noopener">《Let&amp;rsquo;s Encrypt 升至 SSL 证书提供商首位》&lt;/a>：随着 HTTPS 浪潮的来临，越来越多的金融站点、在线存储以及其他网站使用 SSL 来加密传输数据。而作为开源免费的 SSL 证书提供商，Let&amp;rsquo;s Encrypt 超越 COMODO CA Limited、GeoTrust Inc.、GoDaddy 成为了占据市场份额最多的厂商。( &lt;a href="http://6me.us/1Od" target="_blank" rel="noopener">http://6me.us/1Od&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/rtkX" target="_blank" rel="noopener">《Firefox 52 版本发布》&lt;/a>：本周 Mozilla Firefox 团队正式发布 Firefox 52 版本，自此 Firefox 成为第一个默认支持 WebAssembly 的浏览器。同时 Firefox 还优化了安全机制，当用户在非安全页面输入密码时会进行安全提示。此外本版本还引入了 CSS Grid、async/await 支持等特性。( &lt;a href="http://6me.us/rtkX" target="_blank" rel="noopener">http://6me.us/rtkX&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/dqiO1" target="_blank" rel="noopener">《React Native 中的 FlatList 组件》&lt;/a>：3 月 1 日开始 ReactNative 中的 FlatList 正式从测试包中移动至正式包中；我们在项目开发中可以使用 FlatList、SectionList、VirtualizedList 来替代传统的即将被移除的 ListView。( &lt;a href="http://6me.us/dqiO1" target="_blank" rel="noopener">http://6me.us/dqiO1&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/rov8c" target="_blank" rel="noopener">《React Router 4.0 正式版发布》&lt;/a>：今日 React Training 宣布 React Router 4.0 正式版发布，该版本相较于前面三个版本有根本性变化，遵循 Just Component 的 API 设计理念。( &lt;a href="http://6me.us/rov8c" target="_blank" rel="noopener">http://6me.us/rov8c&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开发教程">开发教程&lt;/h2>
&lt;p>&lt;code>步步为营，掌握基础技能&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://6me.us/alZ" target="_blank" rel="noopener">《Vue.js 实用技巧》&lt;/a>：本文来自于饿了么大前端的 cinwell， Vue.js 2.0 已经发布了有一段时间，生态链也日渐完善。作者在使用 Vue.js 开发项目时收集的一些工具和使用技巧，分享给各位。( &lt;a href="http://6me.us/alZ" target="_blank" rel="noopener">http://6me.us/alZ&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/K7SMyO" target="_blank" rel="noopener">《GraphQL 名词 101：解析 GraphQL 的查询语法》&lt;/a>：GraphQL 日渐成为数据查询的主流标准之一，整个生态圈也蓬勃发展。本文则由浅入深地详细介绍基础的 GraphQL 格式与关键字，有助于初学者对于 GraphQL 的使用形成体系认知。( &lt;a href="http://6me.us/K7SMyO" target="_blank" rel="noopener">http://6me.us/K7SMyO&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/PxWiA" target="_blank" rel="noopener">《结合 Firebase 构建完整 Angular 认证系统》&lt;/a>：该作者在视频中详细介绍了如何利用 Angular 2 构建前端界面，并且使用 Firebase 作为后端存储支撑来构建完整的认证系统。( &lt;a href="http://6me.us/PxWiA" target="_blank" rel="noopener">http://6me.us/PxWiA&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/DJgEx" target="_blank" rel="noopener">《循序渐进在 Sketch 中创建完整的 APP 设计项目》&lt;/a>：本文作者介绍了如何在 Sketch 创建完整的应用设计系统，从最简单的创建文件夹开始，到颜色选择、排版设置、网格配置到最后的页面到发布等等。( &lt;a href="http://6me.us/DJgEx" target="_blank" rel="noopener">http://6me.us/DJgEx&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/IrTKkz" target="_blank" rel="noopener">《使用 Service Worker 与 Background Sync 进行延迟请求》&lt;/a>：本文作者以信息发送为例，介绍了如何利用 Service Worker 与 Background Sync 来当用户离线时保留用户请求信息，直到用户重新在线时自动完成请求，将信息发送出去。( &lt;a href="http://6me.us/IrTKkz" target="_blank" rel="noopener">http://6me.us/IrTKkz&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/4uzz" target="_blank" rel="noopener">《Service Worker 测试》&lt;/a>：本文介绍了一些用于测试 Service Worker 的实践技巧与方法，来保证你的站点在离线时也能有正确地响应与操作。( &lt;a href="http://6me.us/4uzz" target="_blank" rel="noopener">http://6me.us/4uzz&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/jMVVqk" target="_blank" rel="noopener">《Angular 应用中的状态管理》&lt;/a>：本系列文章介绍了如何利用 ngrx/store 与 ngrx/effects 对典型的 Angular Todo 应用进行状态管理。( &lt;a href="http://6me.us/jMVVqk" target="_blank" rel="noopener">http://6me.us/jMVVqk&lt;/a> )&lt;/p>
&lt;h2 id="工程实践">工程实践&lt;/h2>
&lt;/li>
&lt;/ul>
&lt;p>&lt;code>立足实践，提示实际水平&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/bailicangdu/vue2-elm" target="_blank" rel="noopener">《vue2-elm》&lt;/a>：基于 vue2 + vuex 构建一个具有 45 个页面的大型单页面应用，涉及注册、登陆、商品展示、购物车、下单等等，是一个完整的流程。挺不错的学习参考资料。( &lt;a href="https://github.com/bailicangdu/vue2-elm" target="_blank" rel="noopener">https://github.com/bailicangdu/vue2-elm&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/qX63f" target="_blank" rel="noopener">《ReactNative 性能优化实践》&lt;/a>：日前有人表示 React Native 在 Android 上表现不佳，本文则是作者对于潜在的性能问题提出的优化方案。作者首先分析了常见的 Overdraw 问题以及可能的问题源与解决方案，然后介绍了列表中常见的 GPU 渲染瓶颈以及解决方案。( &lt;a href="http://6me.us/qX63f" target="_blank" rel="noopener">http://6me.us/qX63f&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/ylUyM" target="_blank" rel="noopener">《JavaScript 图片处理库盘点》&lt;/a>：图片处理一直是客户端开发中的常见问题，本文则是对基于 JavaScript 的常见的进行图片滤镜、裁剪等操作的库进行了盘点；本文横向比较了 CamanJS、glfx.js、grafi.js、Jimp 以及 Filtr2 这几个常用的图片处理库，并且给出了不同业务场景下的选用建议。( &lt;a href="http://6me.us/ylUyM" target="_blank" rel="noopener">http://6me.us/ylUyM&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/z0XSh3" target="_blank" rel="noopener">《Slack 是如何减少其客户端内存占用的》&lt;/a>：本文是 Slack 在其桌面应用的开发过程中探索出的如何减少应用内存开销的经验介绍。Slack 最初为用户的每个登录团队都启动了相同的处理进程，而后根据调研发现仅有部分用户会同时使用多个团队；因此 Slack 从卸载后台团队的 DOM 树、分拆 JavaScript 代码进行优雅降级、重构 JavaScript 代码库等多个方式来优化桌面应用的内存占用。( &lt;a href="http://6me.us/z0XSh3" target="_blank" rel="noopener">http://6me.us/z0XSh3&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/Kfj0wz" target="_blank" rel="noopener">《别被现在的密码设置原则骗了》&lt;/a>：最近 CIA 的黑客工具箱曝光于众，也引发了大家对于系统安全的担忧；本文作者则是从应用系统权限认证中密码设置原则的角度出发，首先指出现存的很多所谓密码原则(譬如必须是 8~32 个字符、必须包含字母数字等)还是存在一些漏洞，并不能完全依赖于这些原则，最后也提出了自己对于现在云计算与 GPU 运算的环境下如何构建有效地密码设置体系进行了介绍。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/wiLi5" target="_blank" rel="noopener">《React 中 setState 的函数式用法》&lt;/a>：React 生态圈中一直崇尚所谓函数式编程理念，而本文作者介绍了如何利用 setState 函数的回调来实现 setState 的函数式用法；就像 Redux 中的 reducer 一样，能够独立声明于组件外，然后声明式的使用，从而保证组件更新逻辑的清晰与可测试性。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="深度阅读">深度阅读&lt;/h2>
&lt;p>&lt;code>深度思考，升华开发智慧&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://6me.us/Md2" target="_blank" rel="noopener">《我理解的“大前端”或“大无线”》&lt;/a>：本文主要是介绍作者所在团队最近的一些变化和思考，包括前言、NodeJS 职能变化、ReactNative 的大规模应用、专门的架构组职能、总结五部分。。( &lt;a href="http://6me.us/Md2" target="_blank" rel="noopener">http://6me.us/Md2&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/vTB6A" target="_blank" rel="noopener">《Base64 编码与性能得失》&lt;/a>：在 HTTP 1.x 的时代，为了减少网络请求数，我们会将小图片以 Base64 编码的方式插入到网页中直接返回。本文则是对于 Base64 编码的基本原理、编码之后带来的包体增加与解析时间损耗、使用 preload 替代 Base64 等知识进行了分析。 ( &lt;a href="http://6me.us/vTB6A" target="_blank" rel="noopener">http://6me.us/vTB6A&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/25696969" target="_blank" rel="noopener">《ReactRouter-V4 构建之道与源码分析》&lt;/a>：本文介绍了 React Router V4 的设计思想，一步一步由浅入深地介绍如何从零开始构建一个类似于 React Router V4 这样的秉持路由即组件的思想的路由框架。( &lt;a href="http://6me.us/jfUwEw" target="_blank" rel="noopener">http://6me.us/jfUwEw&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/NjAHhu" target="_blank" rel="noopener">《大型可扩展系统的设计之道》&lt;/a>：本文深入浅出地介绍了大型可扩展系统的基本组成，我们从客户端发起的请求会在后端经过怎样的奇幻漂流之后形成响应数据，是个前端开发者不错的拓宽视野的阅读资料。( &lt;a href="http://6me.us/NjAHhu" target="_blank" rel="noopener">http://6me.us/NjAHhu&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/csu2da" target="_blank" rel="noopener">《流行网站上陈旧的 JavaScript 库留存调研》&lt;/a>：本文是 Tobias Laudinger 及其合作者对于客户端 JavaScript 库的使用现状的调研报告；基于对于超过 133K 个网站的调查结果，它们发现大约 37% 的站点仍然使用了某些存在已知漏洞的 JavaScript 客户端脚本，它们建议我们一定要慎重思量网站中引入的外部依赖，特别是对于那些已经运行了很久的站点。( &lt;a href="http://6me.us/csu2da" target="_blank" rel="noopener">http://6me.us/csu2da&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/yH2yE" target="_blank" rel="noopener">《来自 Formidable 的 2017 React Naive 技术栈》&lt;/a>：本文是来自 Formidable 的工程师 Jani Eväkallio 介绍的他们在 2017 选定的 React Native 开发技术栈，包括构建工具、组件库、状态管理等等方面。( &lt;a href="http://6me.us/yH2yE" target="_blank" rel="noopener">http://6me.us/yH2yE&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开源项目">开源项目&lt;/h2>
&lt;p>&lt;code>乐于分享，共推前端发展&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/lin-xin/manage-system" target="_blank" rel="noopener">《基于 Vue2 与 Element-UI》的管理系统模板&lt;/a>：基于 Vue.js 2.x 系列 + Element UI 的后台管理系统解决方案。( &lt;a href="https://github.com/lin-xin/manage-system" target="_blank" rel="noopener">https://github.com/lin-xin/manage-system&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/VW9nG" target="_blank" rel="noopener">《PWA Builder》&lt;/a>：随着 PWA 的日渐发展，Manifoldjs 也转型成为 PWA 应用在线构建工具；该工具为用户提供了在线构建 Manifest、自动生成多格式 Icon、创建 Service Worker、发布 PWA 等多种服务。( &lt;a href="http://6me.us/VW9nG" target="_blank" rel="noopener">http://6me.us/VW9nG&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/giakki/uncss" target="_blank" rel="noopener">《UnCSS》&lt;/a>：UnCSS 能够帮助你从样式表中移除 HTML 中未被用到的样式，它支持多文件以及 JavaScript 样式定义，并且提供了接口、命令行、构建插件、POSTCSS 插件等多种使用方式。( &lt;a href="https://github.com/giakki/uncss" target="_blank" rel="noopener">https://github.com/giakki/uncss&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/WYOP1" target="_blank" rel="noopener">《命令行图片压缩工具探讨》&lt;/a>：本文对于基于 ImageMagic 进行常见的图片、压缩转换任务进行了介绍。( &lt;a href="http://6me.us/WYOP1" target="_blank" rel="noopener">http://6me.us/WYOP1&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/5E8wN" target="_blank" rel="noopener">《Vue.js 前端框架比较》&lt;/a>：本文是对常用的基于 Vue.js 的前端框架的比较。( &lt;a href="http://6me.us/5E8wN" target="_blank" rel="noopener">http://6me.us/5E8wN&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="巅峰人生">巅峰人生&lt;/h2>
&lt;p>&lt;code>一览众山，聆听巅峰故事&lt;/code>&lt;/p></description></item><item><title>3.3-Frontend</title><link>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/3/3.3-frontend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/3/3.3-frontend/</guid><description>&lt;p>﻿- &lt;a href="https://zhuanlan.zhihu.com/p/25888775" target="_blank" rel="noopener">前端每周清单：jQuery 3.2 发布，滴滴采用 Vue 2.0 重构 Web App、饿了么 PWA 实践经验分享&lt;/a> 为 InfoQ 中文站特供稿件，首发地址为&lt;a href="https://parg.co/bsY" target="_blank" rel="noopener">这里&lt;/a>；如需转载，请与 InfoQ 中文站联系。从属于笔者的&lt;a href="https://github.com/wx-chevalier/Web-Frontend-Introduction-And-Engineering-Practices" target="_blank" rel="noopener">Web 前端入门与工程实践&lt;/a>。更多阅读清单请转向&lt;a href="http://6me.us/be8SUH" target="_blank" rel="noopener">往期索引&lt;/a>。&lt;/p>
&lt;h1 id="前端每周清单前端每周清单jquery-32-发布滴滴采用-vue-20-重构-web-app饿了么-pwa-实践经验分享">前端每周清单：前端每周清单：jQuery 3.2 发布，滴滴采用 Vue 2.0 重构 Web App、饿了么 PWA 实践经验分享&lt;/h1>
&lt;h2 id="新闻热点">新闻热点&lt;/h2>
&lt;p>&lt;code>前端领域最新动态&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://6me.us/29r" target="_blank" rel="noopener">《Facebook 发布 Create React Native App》&lt;/a>：类似于 Create-React-App，Create React Native App 能够为开发者快速创建零配置的 React Native 项目，并且与基于 Expo 构建了完整的可以屏蔽底层原生代码细节的 React Native 项目，使得开发者可以快速尝试上手 React Native 项目 。同时，开发者也可以使用 &lt;code>npm run eject&lt;/code>命令将项目切换到全配置状态，以方便自行添加原生组件。 ( &lt;a href="http://6me.us/29r" target="_blank" rel="noopener">http://6me.us/29r&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://conf.reactjs.org/livestream" target="_blank" rel="noopener">《2017 React 大会成功举办》&lt;/a>：2017 年 React Conf 于 3 月 13 日、14 日成功举办，会上来自世界各地的开发者就 React Fiber、Flow、Performance、React Native 等多个主题发表了演说与讨论，推荐选择自己喜欢的演讲视频观看。( &lt;a href="http://conf.reactjs.org/livestream" target="_blank" rel="noopener">http://conf.reactjs.org/livestream&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/BN8" target="_blank" rel="noopener">《jQuery 3.2.0 发布》&lt;/a>：jQuery 3.2.0 中包含了一系列的错误修复、性能提升以及部分弃用 API 的彻底移除 。重大的更新包括添加了对于自定义 CSS 属性操作的支持，彻底移除了 isArray、nodeName 等方法以及修复了&lt;code>.width()&lt;/code>等部分方法中的问题。( &lt;a href="http://6me.us/BN8" target="_blank" rel="noopener">http://6me.us/BN8&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/DyAYEC" target="_blank" rel="noopener">《Sketch 宣布开源其文件格式》&lt;/a>：随着近日发布的 Sketch 43 版本，Sketch 宣布开源其文件格式，这也意味着未来可能会有人基于该格式开发 Windows 版本应用或者简单的 Sketch 文件浏览器。鉴于其文件格式为 JSON，我们也可以畅想未来会出现自动构建的 Web Service。( &lt;a href="http://6me.us/DyAYEC" target="_blank" rel="noopener">http://6me.us/DyAYEC&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bO9" target="_blank" rel="noopener">《Chromium 即将支持 APNG》&lt;/a>：该 Commit 会为 Chromium 添加 APNG 格式的支持，该格式可以逐步替换现存的 Gif 格式 。( &lt;a href="https://parg.co/bO9" target="_blank" rel="noopener">https://parg.co/bO9&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.infoq.com/cn/news/2017/03/kotlin-11-released" target="_blank" rel="noopener">《Kotlin 1.1 新增协程、类型别名特性，提升了对 JavaScript 的支持》&lt;/a>：Kotlin 的新版本引入了多项新的语言特性(其中最值得注意的就是协程)，同时还提升了对其 JavaScript 目标环境的支持。( &lt;a href="http://www.infoq.com/cn/news/2017/03/kotlin-11-released" target="_blank" rel="noopener">http://www.infoq.com/cn/news/2017/03/kotlin-11-released&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开发教程">开发教程&lt;/h2>
&lt;p>&lt;code>步步为营，掌握基础技能&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://yoksel.github.io/flex-cheatsheet/" target="_blank" rel="noopener">《Flexbox 语法清单》&lt;/a>：该网页提供了交互式的 CSS Flexbox 教程，详细介绍了 Flexbox 的使用语法与经典案例。( &lt;a href="http://yoksel.github.io/flex-cheatsheet/" target="_blank" rel="noopener">http://yoksel.github.io/flex-cheatsheet/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/aGFX" target="_blank" rel="noopener">《Sketch：React Native 的 Playground 》&lt;/a>：随着 Create React Native App 的发布，Expo 发布了能够在线编辑 React Native 应用的工具 Sketch。开发者可以在 Web 上直接编辑 React Native 应用代码，或者拖拽方式加入组件，然后通过 Expo 客户端完成本地预览。( &lt;a href="http://6me.us/aGFX" target="_blank" rel="noopener">http://6me.us/aGFX&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bOL" target="_blank" rel="noopener">《编写 JavaScript 框架：客户端路由》&lt;/a>：本文是编写 JavaScript 框架系列的最后一篇，主要着眼于讨论如何实现 JavaScript 客户端路由及其与服务端路由的区别。( &lt;a href="https://parg.co/bOL" target="_blank" rel="noopener">https://parg.co/bOL&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://risonsimon.com/days-in-vr/" target="_blank" rel="noopener">《30 天学习 30 个 VR 项目》&lt;/a>：本系列作者介绍了从 0 到 1 如何开发 30 个常见的 VR 项目，从最基础的图片浏览、视频播放，到交互性动画等等 。( &lt;a href="https://risonsimon.com/days-in-vr/" target="_blank" rel="noopener">https://risonsimon.com/days-in-vr/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bOF" target="_blank" rel="noopener">《CORS 详细指南》&lt;/a>：本文是对于浏览器中跨域访问协议 CORS 进行详细介绍，并且以完整的代码交互示例演示 CORS 协议的效果与使用方法。( &lt;a href="https://parg.co/bOF" target="_blank" rel="noopener">https://parg.co/bOF&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bOD" target="_blank" rel="noopener">《Angular 的模块间通信》&lt;/a>：模块是 Angular 的构建单元，Angular 应用程序的所有可视化元素也是由模块构建的。当我们把模块拆散成更小的模块时，我们就要确保它们可以把数据传来传去。到那时候，恰当地模块间通信机制就成了我们应用程序的基础，可以让所有的数据都保持同步状态。( &lt;a href="https://parg.co/bOD" target="_blank" rel="noopener">https://parg.co/bOD&lt;/a> )&lt;/p>
&lt;h2 id="工程实践">工程实践&lt;/h2>
&lt;/li>
&lt;/ul>
&lt;p>&lt;code>立足实践，提示实际水平&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://6me.us/posk" target="_blank" rel="noopener">《前端代码测试概述》&lt;/a>：作者在本系列文章中介绍了前端代码测试的相关概念与实践技巧，包括了单元测试、集成测试、端到端测试等多个方面。( &lt;a href="http://6me.us/posk" target="_blank" rel="noopener">http://6me.us/posk&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/mNHi" target="_blank" rel="noopener">《以组件为中心的 React 懒加载》&lt;/a>：React Loadable 是以组件为中心的懒加载框架，其基于 Webpack 2 提供的 &lt;code>import&lt;/code> 提供的异步代码分割与加载功能进行了一系列的封装。( &lt;a href="http://6me.us/mNHi" target="_blank" rel="noopener">http://6me.us/mNHi&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://luisant.ca/remynifier" target="_blank" rel="noopener">《另一种 CSS 压缩思路》&lt;/a>：本文作者提出了一种新的 CSS 压缩思路，有可能会损坏原有的 CSS 文件，不过其压缩比率相较于现有的通用 CSS 压缩策略会更为优秀。( &lt;a href="https://luisant.ca/remynifier" target="_blank" rel="noopener">https://luisant.ca/remynifier&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/dx5" target="_blank" rel="noopener">《来自 Vixlet 的 React 优化策略》&lt;/a>：在过去的数年中，来自 Vixlet 的前端开发团队一直使用 React 与 Redux 的开发架构，本文即是该团队分享其在开发过程中发现的 React 优化策略的介绍。( &lt;a href="http://6me.us/dx5" target="_blank" rel="noopener">http://6me.us/dx5&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bO7" target="_blank" rel="noopener">《PWA 在饿了么的实践经验》&lt;/a>：本篇旨在和大家分享饿了么 M 站(&lt;a href="https://h5.ele.me/msite/" target="_blank" rel="noopener">https://h5.ele.me/msite/&lt;/a>)在 PWA 改造中的实践经验。涉及到的方面有：PWA 线上部署的准备工作、多页应用的 prerender 优化、实践过程中踩到的(和推进解决的)坑。( &lt;a href="https://parg.co/bO7" target="_blank" rel="noopener">https://parg.co/bO7&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/DDFE/DDFE-blog/issues/13" target="_blank" rel="noopener">《滴滴 webapp 5.0 Vue 2.0 重构经验分享》&lt;/a>：滴滴的 webapp 是运行在微信、支付宝、手 Q 以及其它第三方渠道的打车软件。借着产品层面的功能和视觉升级，我们用 Vue 2.0 对它进行了一次技术重构；本文即是本次重构中的经验分享。( &lt;a href="https://github.com/DDFE/DDFE-blog/issues/13" target="_blank" rel="noopener">https://github.com/DDFE/DDFE-blog/issues/13&lt;/a> )&lt;/p>
&lt;h2 id="深度阅读">深度阅读&lt;/h2>
&lt;/li>
&lt;/ul>
&lt;p>&lt;code>深度思考，升华开发智慧&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://6me.us/W0k" target="_blank" rel="noopener">《2017 成为专业 Web 开发者的学习路线图》&lt;/a>：作者在此文中以图表的方式展现了 2017 年中如果想成为专业的 Web 开发者，应该在 Web 前端、服务端以及 DevOps 领域所需要学习到的技术栈以及进阶路线图。( &lt;a href="http://6me.us/W0k" target="_blank" rel="noopener">http://6me.us/W0k&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/D0iKp" target="_blank" rel="noopener">《关于 JWE 安全漏洞的讨论》&lt;/a>：JSON Web Token 是基于 JSON 的访问令牌创建标准(RFC 7519)，本文则是介绍了 JWE 面对的 Invalid Curve Attack 原理以及受影响的开源库等内容。( &lt;a href="http://6me.us/D0iKp" target="_blank" rel="noopener">http://6me.us/D0iKp&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/vvanders/wasm_lua" target="_blank" rel="noopener">《wasm_lua》&lt;/a>：wasm_lua 提供了能够运行于 WASM 环境下的 Lua 虚拟机，未来基于 Lua 构建前端框架也是个可行的选择 。( &lt;a href="https://github.com/vvanders/wasm_lua" target="_blank" rel="noopener">https://github.com/vvanders/wasm_lua&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bO1" target="_blank" rel="noopener">《U.S. Web 设计标准》&lt;/a>：近日 U.S. 官方网站的样式与视觉设计指南 1.0.0 版本发布，包含了大量的 Bug 修复与反馈修正。( &lt;a href="https://parg.co/bO1" target="_blank" rel="noopener">https://parg.co/bO1&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bOj" target="_blank" rel="noopener">《Preact 内部原理探秘》&lt;/a>：Preact 是提供了类似于 React API 不过速度更快、包体更小的 React 替代包，本系列文章是 Preact 的开发者介绍其内部工作原理。( &lt;a href="https://parg.co/bOj" target="_blank" rel="noopener">https://parg.co/bOj&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bOn" target="_blank" rel="noopener">《扩展 JS 应用在架构性取舍上应关注八点要素》&lt;/a>：如果想要构建可扩展的软件，可以从很多角度来思考软件架构。但是如果每个角度都去考虑，根本不可能做出想要的软件。这就是为什么需要从架构的角度对设计进行取舍：取我们最需要的，舍次要的。。( &lt;a href="https://parg.co/bOn" target="_blank" rel="noopener">https://parg.co/bOn&lt;/a> )&lt;/p>
&lt;h2 id="开源项目">开源项目&lt;/h2>
&lt;/li>
&lt;/ul>
&lt;p>&lt;code>乐于分享，共推前端发展&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/alibaba/atlas" target="_blank" rel="noopener">《手淘发布 Atlas》&lt;/a>：手机淘宝安卓客户端容器化框架 Atlas 正式宣布开源。Atlas 由阿里巴巴移动团队自研，以容器化思路解决大规模团队协作问题，实现并行开发、快速迭代和动态部署，适用于 Android 4.x 以上系统版本的大小型 App 开发。(&lt;a href="https://github.com/alibaba/atlas" target="_blank" rel="noopener">https://github.com/alibaba/atlas&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://animista.net/" target="_blank" rel="noopener">《Animista》&lt;/a>：Animista 是开箱即用的 CSS 动画库，其作者还发布了非常易用的在线预览与选择站点，适合于设计人员选择合适的动画效果。( &lt;a href="http://animista.net/" target="_blank" rel="noopener">http://animista.net/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://quokkajs.com/" target="_blank" rel="noopener">《Quokka.js》&lt;/a>：Quokka 能够帮助我们在常用的编辑器(譬如 VSCode)中快速建立原型试验场，包括了行内错误提示、代码测试与覆盖率提示、富文本输出格式化等等。( &lt;a href="https://quokkajs.com/" target="_blank" rel="noopener">https://quokkajs.com/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/AM7a" target="_blank" rel="noopener">《Guetzli》&lt;/a>：Google 宣布开源新的 JPEG 编码器 Guetzli，与现有的压缩编码工具相比，其能够减少近 35% 的文件尺寸而依然保持图片质量。( &lt;a href="http://6me.us/AM7a" target="_blank" rel="noopener">http://6me.us/AM7a&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/ballercat/wasm-loader" target="_blank" rel="noopener">《wasm-loader》&lt;/a>：wasm-loader 是能够用于 Webpack 的 WASM 二进制模块导入工具，其能够允许你在 JavaScript 代码中导入 wasm 格式文件并且将二进制文件打包成为 JS Bundle 的一部分 。( &lt;a href="https://github.com/ballercat/wasm-loader" target="_blank" rel="noopener">https://github.com/ballercat/wasm-loader&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="巅峰人生">巅峰人生&lt;/h2>
&lt;p>&lt;code>一览众山，聆听巅峰故事&lt;/code>&lt;/p></description></item><item><title>3.4-Frontend</title><link>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/3/3.4-frontend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/0.specials/weekly/2017/3/3.4-frontend/</guid><description>&lt;p>﻿&amp;gt; url: FE-Weekly-6&lt;/p>
&lt;blockquote>
&lt;p>topicL 前端每周清单、前端、jQuery、Vue、PWA&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/26029047" target="_blank" rel="noopener">前端每周清单第 6 期：Angular 4.0 学习资源，Egg.js 1.0 发布，六问 CTO 程序员如何成长&lt;/a> 为 InfoQ 中文站特供稿件，首发地址为&lt;a href="https://parg.co/bQh" target="_blank" rel="noopener">这里&lt;/a>；如需转载，请与 InfoQ 中文站联系。从属于笔者的 &lt;a href="https://github.com/wx-chevalier/Web-Frontend-Introduction-And-Engineering-Practices" target="_blank" rel="noopener">Web 前端入门与工程实践&lt;/a>，更多前端知识图谱与学习路线图参考&lt;a href="https://zhuanlan.zhihu.com/p/25939682" target="_blank" rel="noopener">泛前端知识图谱(Web/iOS/Android/RN)&lt;/a> 。&lt;/li>
&lt;/ul>
&lt;h1 id="前端每周清单第-6-期angular-40-学习资源eggjs-10-发布六问-cto-程序员如何成长">前端每周清单第 6 期：Angular 4.0 学习资源，Egg.js 1.0 发布，六问 CTO 程序员如何成长&lt;/h1>
&lt;p>&lt;code>前端&lt;/code> &lt;code>前端每周清单&lt;/code>&lt;/p>
&lt;p>&lt;a href="http://www.infoq.com/cn/FE-Weekly" target="_blank" rel="noopener">前端每周清单&lt;/a>专注前端领域内容，分为新闻热点、开发教程、工程实践、深度阅读、开源项目、巅峰人生等栏目。关注【前端之巅】微信公众号(ID：frontshow)，及时获取前端每周清单。&lt;/p>
&lt;h2 id="新闻热点">新闻热点&lt;/h2>
&lt;p>&lt;code>国内国外，前端最新动态&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bsw" target="_blank" rel="noopener">《Angular 4.0.0 发布》&lt;/a>：今日 Angular 团队宣布发布 4.0.0 版本，该版本能够向后兼容绝大部分 2.x.x 应用。在 4.0.0 中，带来的主要改变包括应用更小并且速度更快、更新了视图引擎，减少了将近 60% 的生成代码、并且引入了动画库作为预置的核心库的一部分等 。( &lt;a href="https://parg.co/bsw" target="_blank" rel="noopener">https://parg.co/bsw&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/25860846" target="_blank" rel="noopener">《Egg.js 1.0.0 正式发布》&lt;/a>：Egg.js 是企业级 Node.js 框架沉淀自阿里各行各业不同领域最佳实践的插件，涵盖了常见的业务开发场景，稳定支撑了 15 和 16 年天猫双 11 大促，顶级流量压力。其秉持渐进式理念，极具伸缩性，既适合个人小项目快速开发，也适合企业级的团队开发协作。( &lt;a href="https://zhuanlan.zhihu.com/p/25860846" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25860846&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bQU" target="_blank" rel="noopener">《WebStorm 2017.1 增加对 Vue.js 的支持》&lt;/a>：近日，JetBrains 发布了其最受欢迎的 WebStorm IDE 的 2017.1 版本，毫不例外地增加了对 Vue.js 的支持。WebStorm 现在会识别 .vue 文件并在模板中增加代码补全功能。当引用其他视图组件时，WebStorm 也将能够自动补全代码并自动增加 import 声明。( &lt;a href="https://parg.co/bQU" target="_blank" rel="noopener">https://parg.co/bQU&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开发教程">开发教程&lt;/h2>
&lt;p>&lt;code>步步为营，掌握基础技能&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://sii.im/playground/css-grid/" target="_blank" rel="noopener">《CSS Grid 典型案例》&lt;/a>：该网站提供了一系列基于 React 编写的 CSS Grid 布局的测试样例，是个不错的从实例中学习 CSS Grid 语法与使用的教程。( &lt;a href="https://sii.im/playground/css-grid/#/" target="_blank" rel="noopener">https://sii.im/playground/css-grid/#/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bsL" target="_blank" rel="noopener">《Webpack 实践教程》&lt;/a>：本系列教程着眼于介绍真实应用中 Webpack 的使用，包含了三个部分：构建基础前端项目与添加编译支持、减少包体体积与缓存、加速构建与提升开发工作流。( &lt;a href="https://parg.co/bsL" target="_blank" rel="noopener">https://parg.co/bsL&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bsF" target="_blank" rel="noopener">《面向“远古” Web 开发者的现代 JavaScript 教程》&lt;/a>：本文主要是面向那些从 PHP、JSP、Rails 占据统治地位时开始进行 Web 技术的开发者进行常见的现代 JavaScript 基础概念的介绍。( &lt;a href="https://parg.co/bsF" target="_blank" rel="noopener">https://parg.co/bsF&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bQl" target="_blank" rel="noopener">《你应该知道的关于 Node.js 中模块导入的知识》&lt;/a>：在 Node.js 开发中我们时刻都在于其模块机制打交道，而本文作者则深入浅出地介绍了 Node.js 中负责处理模块依赖的两个核心模块：require 与 module；并且介绍了不同的导入对象在 Node.js 中实际的递归处理流程以及最终在 module 中形成的元数据描述。( &lt;a href="https://parg.co/bQl" target="_blank" rel="noopener">https://parg.co/bQl&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bQ0" target="_blank" rel="noopener">《Angular 4 学习资源》&lt;/a>：随着 Angular 4 的正式发布，本文也收集了部分学习 Angular 4 的资源，包括特性总结、服务端渲染、响应式编程、样式指南等等多个部分。( &lt;a href="https://parg.co/bQ0" target="_blank" rel="noopener">https://parg.co/bQ0&lt;/a> )&lt;/p>
&lt;h2 id="工程实践">工程实践&lt;/h2>
&lt;/li>
&lt;/ul>
&lt;p>&lt;code>立足实践，提示实际水平&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bs5" target="_blank" rel="noopener">《Dropbox：使用同域 Cookie 避免跨站攻击》&lt;/a>：跨站请求伪造(CSRF)是常见的网络渗透攻击手段之一，攻击者会误导用户在攻击站点上对目标站点发起非法请求。本文是 Dropbox 工程师分享他们在实践中常用的防御经验分享，包括使用动态表单令牌、同域 Cookie 等等。(&lt;a href="https://parg.co/bs5" target="_blank" rel="noopener">https://parg.co/bs5&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bsi" target="_blank" rel="noopener">《跨浏览器插件模板》&lt;/a>：随着 Firefox 也开始支持 WebExtensions，我们可以更加方便地编写跨浏览器插件，尽可能地复用代码。本仓库则提供了基础的插件模板，实现了一次编写，多处运行、热加载等多个便捷功能的预置。( &lt;a href="https://parg.co/bsi" target="_blank" rel="noopener">https://parg.co/bsi&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bsk" target="_blank" rel="noopener">《VS Code 使用贴士与技巧》&lt;/a>: VSCode 是非常轻量易用的软件开发工具，其丰富的插件系统能够极大地满足开发需求。本文则是作者总结的一系列 VS Code 使用技巧的总结与介绍，譬如常用命令操作、文件管理、Git 集成、调试与任务运行等等。(&lt;a href="https://parg.co/bsk" target="_blank" rel="noopener">https://parg.co/bsk&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bsz" target="_blank" rel="noopener">《解密 JavaScript 异步编程》&lt;/a>：JavaScript 中异步编程历经了多个大的迭代，从回调到 Promise 到生成器以及现在的 Async/Await；本文作者则是高屋建瓴地介绍了 JavaScript 异步编程的变迁历史以及简要的内部实现原理。( &lt;a href="https://parg.co/bsz" target="_blank" rel="noopener">https://parg.co/bsz&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bQb" target="_blank" rel="noopener">《Webpack CommonsChunkPlugin 与多入口公共代码提取》&lt;/a>：在构建基于 Webpack 的前端工作流时，CommonsChunkPlugin 是常用的公共代码提取插件。而本文则是 Webpack 开发团队对于社区反馈的 CommonsChunkPlugin 使用过程中的一些误区与同步/异步公共代码块提取的实践进行总结与分析。( &lt;a href="https://parg.co/bQb" target="_blank" rel="noopener">https://parg.co/bQb&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bQm" target="_blank" rel="noopener">《构建可维护的大型 Angular 2 应用》&lt;/a>：本文是来自 Versett 的工程师介绍其团队在基于 Angular 2 构建大型应用时的实践与总结。( &lt;a href="https://parg.co/bQm" target="_blank" rel="noopener">https://parg.co/bQm&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bQS" target="_blank" rel="noopener">《开发 React Native 与 Redux 应用一年来的错误总结》&lt;/a>：本文作者总结了他在过去一年中 React Native 与 Redux 开发中遇到的错误的复盘与总结，譬如布局文件分割、Redux Store 设计、项目目录结构、表单验证等多个方面。( &lt;a href="https://parg.co/bQS" target="_blank" rel="noopener">https://parg.co/bQS&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="深度阅读">深度阅读&lt;/h2>
&lt;p>&lt;code>深度思考，升华开发智慧&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bsv" target="_blank" rel="noopener">《浅析 WebAssembly 缘何优于 Asm.js》&lt;/a>：WebAssembly 是新的 Web 中可执行格式，逐现代浏览器纷纷地提供了对于 WebAssembly 的原生支持；本文则是对于 WebAssembly 相较于 asm.js 带来的性能提升背后的原理进行简要介绍。(&lt;a href="https://parg.co/bsv" target="_blank" rel="noopener">https://parg.co/bsv&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bsW" target="_blank" rel="noopener">《ES7 Async/Await 常见误区》&lt;/a>：ECMAScript 6 引入的 Promise 大大简化了 JavaScript 中异步编程语法，而 ES7 引入的 Async 则使其更为优雅；本文作者对于实践中常见的对于 Async/Await 的语法误用案例进行了解析。( &lt;a href="https://parg.co/bsW" target="_blank" rel="noopener">https://parg.co/bsW&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bsg" target="_blank" rel="noopener">《React Conf 2017 盘点》&lt;/a>：本文作者对于近日举办的 React Conf 2017 中的精彩演讲进行了盘点，包括 Redux 与 MobX 在状态管理领域的对比、ReactVR 等一系列优秀的基于 React 的扩展项目、代码格式化与样式组件、服务端渲染等等。( &lt;a href="https://parg.co/bsg" target="_blank" rel="noopener">https://parg.co/bsg&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bQH" target="_blank" rel="noopener">《百度 SSP 单页式应用性能优化实践》&lt;/a>：针对首页和部分页面打开速度慢的问题，百度 SSP 前端团队对单页式应用性能进行了优化。本文介绍其中一个方案：基于 HTTP Chunk 的首屏数据渐进式预加载方案，该方案总体减少了单页应用 1.2s 的首屏呈现时间。同时对比其与同构渲染方案的异同。( &lt;a href="https://parg.co/bQH" target="_blank" rel="noopener">https://parg.co/bQH&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bQY" target="_blank" rel="noopener">《Composing Software》&lt;/a>：本系列文章由 Eric Elliott 大神发布，着眼于介绍 JavaScript 函数式编程与大型软件项目中的可组织性技术的介绍，包括了函数式编程导论、高阶函数、Reduce、Functors &amp;amp; Categories 等几个部分，还在持续更新中。( &lt;a href="https://parg.co/bQY" target="_blank" rel="noopener">https://parg.co/bQY&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/reactjs/redux/issues/2295" target="_blank" rel="noopener">《Redux 实践大讨论》&lt;/a>：此篇是 Markerikson 在 Redux Issue 中发起的讨论，主要涉及 Redux 模板冗余、过度抽象、学习曲线过于曲折、太多的 Opinioned 最佳实践等问题。( &lt;a href="https://github.com/reactjs/redux/issues/2295" target="_blank" rel="noopener">https://github.com/reactjs/redux/issues/2295&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="开源项目">开源项目&lt;/h2>
&lt;p>&lt;code>乐于分享，共推前端发展&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/wix/react-native-interactable" target="_blank" rel="noopener">《react-native-interactable》&lt;/a>：react-native-interactable 是由 wix 发布的用于创建高性能用户交互效果的声明式接口。典型的用户场景包括滑动式卡片、抽屉菜单、伸缩式应用头、聊天头等。( &lt;a href="https://github.com/wix/react-native-interactable" target="_blank" rel="noopener">https://github.com/wix/react-native-interactable&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/opendigg/awesome-github-vue" target="_blank" rel="noopener">《awesome-github-vue》&lt;/a>：awesome-github-vue 是由 OpenDigg 整理并维护的 Vue 相关开源项目库集合。( &lt;a href="https://github.com/opendigg/awesome-github-vue" target="_blank" rel="noopener">https://github.com/opendigg/awesome-github-vue&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/berzniz/react-overdrive" target="_blank" rel="noopener">《react-overdrive》&lt;/a>：非常简单易用的 React 应用转场动画实现库，能够在不同的页面间指定相同 ID 的元素，Overdrive 会自动为这两个元素之间添加转场动画。( &lt;a href="https://github.com/berzniz/react-overdrive" target="_blank" rel="noopener">https://github.com/berzniz/react-overdrive&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/zulko/eagle.js/" target="_blank" rel="noopener">《Eagle.js》&lt;/a>：Eagle.js 是基于 Vue.js 构建的创建 Web 中幻灯片的库，支持动画、主题、交互插件等常用功能。( &lt;a href="https://github.com/zulko/eagle.js/" target="_blank" rel="noopener">https://github.com/zulko/eagle.js/&lt;/a> )&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/aweary/react-perimeter" target="_blank" rel="noopener">《react-perimeter》&lt;/a>：react-perimeter 能够为目标元素创建隐藏的栅栏，当用户的鼠标移动到目标元素的指定范围内时会触发预设时间，譬如可以执行组件预加载等操作。( &lt;a href="https://github.com/aweary/react-perimeter" target="_blank" rel="noopener">https://github.com/aweary/react-perimeter&lt;/a> )&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="巅峰人生">巅峰人生&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://parg.co/bQp" target="_blank" rel="noopener">《六问 CTO，程序员的个人、职业成长如何抉择？》&lt;/a>：本文是声网 Agora.io CTO 陶思明对于程序员的自我成长、KPI 考核机制、技术管理与创业选择等相关问题进行的回答与分享。( &lt;a href="https://parg.co/bQp" target="_blank" rel="noopener">https://parg.co/bQp&lt;/a>)&lt;/li>
&lt;/ul>
&lt;h2 id="前端之巅">前端之巅&lt;/h2>
&lt;p>前端之巅是 InfoQ 旗下关注前端技术的垂直社群，加入前端之巅学习群请关注前端之巅公众号后回复“加群”。投稿请发邮件到 &lt;a href="mailto:editors@cn.infoq.com">editors@cn.infoq.com&lt;/a>，注明“前端之巅投稿”。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="http://upload-images.jianshu.io/upload_images/1647496-01712a993d2b23de.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="前端之巅微信底图－5.jpg" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p></description></item></channel></rss>