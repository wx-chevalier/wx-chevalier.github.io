<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Stream | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/3.distributedcompute/stream/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/3.distributedcompute/stream/index.xml" rel="self" type="application/rss+xml"/><description>Stream</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Stream</title><link>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/3.distributedcompute/stream/</link></image><item><title>Pravega-List</title><link>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/3.distributedcompute/stream/pravega-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/3.distributedcompute/stream/pravega-list/</guid><description>&lt;h1 id="pravega">Pravega&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/1LQMi1qATnGh2HLT2hAUfA" target="_blank" rel="noopener">2019-如何利用开源 Flink 和 Pravega 搭建完整的流处理架构？&lt;/a>: Pravega 与 Flink 的设计理念类似，都以流为基础实现流批统一的接口便于应用使用。Pravega 团队也希望与 Flink 一起打造从底层存储到上层计算的统一大数据流水线架构。&lt;/li>
&lt;/ul></description></item><item><title>SparkStreaming-List</title><link>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/3.distributedcompute/stream/sparkstreaming-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/3.distributedcompute/stream/sparkstreaming-list/</guid><description>&lt;h1 id="spark-streaming-list">Spark Streaming List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.gitbook.com/book/yourtion/sparkinternals/details" target="_blank" rel="noopener">Apache Spark 的设计与实现&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://tech.meituan.com/spark-tuning-pro.html" target="_blank" rel="noopener">Spark 性能优化指南——高级篇&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.jesse-anderson.com/2016/04/unit-testing-spark-with-java/" target="_blank" rel="noopener">unit-testing-spark-with-java&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="www.cnblogs.com/Leo_wl/p/3530464.html">Spark Streaming 实时计算框架介绍&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/lw-lin/CoolplaySpark" target="_blank" rel="noopener">2017-Structured Streaming 源码解析系列&lt;/a>: 谨以此《Structured Streaming 源码解析系列》和以往的《Spark Streaming 源码解析系列》，向“把大数据变得更简单 (make big data simple) ”的创新者们，表达感谢和敬意。&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Storm-List</title><link>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/3.distributedcompute/stream/storm-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/3.distributedcompute/stream/storm-list/</guid><description>&lt;h1 id="storm-learning--practices-list">Storm Learning &amp;amp; Practices List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://mp.weixin.qq.com/s?__biz=MzAwNjQwNzU2NQ==&amp;amp;mid=402753092&amp;amp;idx=1&amp;amp;sn=a6a1190241481357a3adc29f1733b550&amp;amp;scene=23&amp;amp;srcid=0417uaylfxnig869nCTaCkMs#rd" target="_blank" rel="noopener">Storm 内部原理分析&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://ifeve.com/storm-concepts/comment-page-1/#comment-26721" target="_blank" rel="noopener">Apache Storm 官方文档：基础概念&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://mp.weixin.qq.com/s?__biz=MzAwOTcwOTI4Ng==&amp;amp;mid=400324669&amp;amp;idx=1&amp;amp;sn=8ad2aefc75a09d9060e7ed985afb0fe1&amp;amp;scene=0#wechat_redirect" target="_blank" rel="noopener">微博推荐的 storm 实践&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/wurstmeister/storm-docker" target="_blank" rel="noopener">storm-docker&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://ifeve.com/getting-started-with-storm-2/" target="_blank" rel="noopener">getting-started-with-storm&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>StreamProcessing-List</title><link>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/3.distributedcompute/stream/streamprocessing-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/3.distributedcompute/stream/streamprocessing-list/</guid><description>&lt;h1 id="streaming-processing-list--流处理资料索引">Streaming Processing List | 流处理资料索引&lt;/h1>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://www.oreilly.com/ideas/the-world-beyond-batch-streaming-102" target="_blank" rel="noopener">2015-Streaming 101 &amp;amp; 102&lt;/a>: In this post, I want to focus further on the data-processing patterns from last time, but in more detail, and within the context of concrete examples.&lt;/li>
&lt;/ul>
&lt;h1 id="resource">Resource&lt;/h1>
&lt;h2 id="collection">Collection&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/manuzhang/awesome-streaming" target="_blank" rel="noopener">awesome-streaming&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="book">Book&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.safaribooksonline.com/library/view/stream-processing-with/9781491974285/" target="_blank" rel="noopener">2018-Kalavri-Stream Processing with Apache Flink 📚&lt;/a>: With this practical guide, you’ll learn how to use Apache Flink’s stream processing APIs to implement, continuously run, and maintain real-world applications.&lt;/li>
&lt;/ul>
&lt;h2 id="course">Course&lt;/h2>
&lt;h2 id="blog">Blog&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://blog.madhukaraphatak.com/" target="_blank" rel="noopener">Madhukara Phatak: 某个大数据咨询师的博客&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="mechanism--机制">Mechanism | 机制&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="http://blog.csdn.net/anzhsoft/article/details/38168025" target="_blank" rel="noopener">2014-从 Storm 和 Spark 学习流式实时分布式计算的设计&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="comparison--对比">Comparison | 对比&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/dRzPtdEqI6h3lRzmxsxEnw" target="_blank" rel="noopener">2018-Spark 比拼 Flink：下一代大数据计算引擎之争，谁主沉浮？&lt;/a>: 本文对 Spark 和 Flink 的技术与场景进行了全面分析与对比，且看下一代大数据计算引擎之争，谁主沉浮？&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.cakesolutions.net/teamblogs/comparison-of-apache-stream-processing-frameworks-part-1" target="_blank" rel="noopener">2016-comparison-of-apache-stream-processing-frameworks&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="engineering-practices--工程实践">Engineering Practices | 工程实践&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/lHm" target="_blank" rel="noopener">How the end-to-end back-pressure mechanism inside Wallaroo works&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/frankmcsherry/blog/blob/master/posts/2016-07-26.md" target="_blank" rel="noopener">Differential dataflow roadmap&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.microsoft.com/en-us/research/publication/differential-dataflow/" target="_blank" rel="noopener">Microsoft differential-dataflow&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>