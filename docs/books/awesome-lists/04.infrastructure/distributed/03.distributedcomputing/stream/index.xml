<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stream | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/03.distributedcomputing/stream/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/03.distributedcomputing/stream/index.xml" rel="self" type="application/rss+xml" />
    <description>Stream</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>Stream</title>
      <link>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/03.distributedcomputing/stream/</link>
    </image>
    
    <item>
      <title>Pravega-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/03.distributedcomputing/stream/pravega-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/03.distributedcomputing/stream/pravega-list/</guid>
      <description>&lt;h1 id=&#34;pravega&#34;&gt;Pravega&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/1LQMi1qATnGh2HLT2hAUfA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-如何利用开源 Flink 和 Pravega 搭建完整的流处理架构？&lt;/a&gt;: Pravega 与 Flink 的设计理念类似，都以流为基础实现流批统一的接口便于应用使用。Pravega 团队也希望与 Flink 一起打造从底层存储到上层计算的统一大数据流水线架构。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>SparkStreaming-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/03.distributedcomputing/stream/sparkstreaming-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/03.distributedcomputing/stream/sparkstreaming-list/</guid>
      <description>&lt;h1 id=&#34;spark-streaming-list&#34;&gt;Spark Streaming List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.gitbook.com/book/yourtion/sparkinternals/details&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apache Spark 的设计与实现&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://tech.meituan.com/spark-tuning-pro.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spark 性能优化指南——高级篇&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.jesse-anderson.com/2016/04/unit-testing-spark-with-java/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;unit-testing-spark-with-java&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;www.cnblogs.com/Leo_wl/p/3530464.html&#34;&gt;Spark Streaming 实时计算框架介绍&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lw-lin/CoolplaySpark&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Structured Streaming 源码解析系列&lt;/a&gt;: 谨以此《Structured Streaming 源码解析系列》和以往的《Spark Streaming 源码解析系列》，向“把大数据变得更简单 (make big data simple) ”的创新者们，表达感谢和敬意。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Storm-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/03.distributedcomputing/stream/storm-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/03.distributedcomputing/stream/storm-list/</guid>
      <description>&lt;h1 id=&#34;storm-learning--practices-list&#34;&gt;Storm Learning &amp;amp; Practices List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzAwNjQwNzU2NQ==&amp;amp;mid=402753092&amp;amp;idx=1&amp;amp;sn=a6a1190241481357a3adc29f1733b550&amp;amp;scene=23&amp;amp;srcid=0417uaylfxnig869nCTaCkMs#rd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Storm 内部原理分析&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://ifeve.com/storm-concepts/comment-page-1/#comment-26721&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apache Storm 官方文档：基础概念&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzAwOTcwOTI4Ng==&amp;amp;mid=400324669&amp;amp;idx=1&amp;amp;sn=8ad2aefc75a09d9060e7ed985afb0fe1&amp;amp;scene=0#wechat_redirect&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;微博推荐的 storm 实践&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wurstmeister/storm-docker&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;storm-docker&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://ifeve.com/getting-started-with-storm-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;getting-started-with-storm&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>StreamProcessing-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/03.distributedcomputing/stream/streamprocessing-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/04.infrastructure/distributed/03.distributedcomputing/stream/streamprocessing-list/</guid>
      <description>&lt;h1 id=&#34;streaming-processing-list--流处理资料索引&#34;&gt;Streaming Processing List | 流处理资料索引&lt;/h1&gt;
&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.oreilly.com/ideas/the-world-beyond-batch-streaming-102&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-Streaming 101 &amp;amp; 102&lt;/a&gt;: In this post, I want to focus further on the data-processing patterns from last time, but in more detail, and within the context of concrete examples.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;resource&#34;&gt;Resource&lt;/h1&gt;
&lt;h2 id=&#34;collection&#34;&gt;Collection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/manuzhang/awesome-streaming&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;awesome-streaming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;book&#34;&gt;Book&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.safaribooksonline.com/library/view/stream-processing-with/9781491974285/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Kalavri-Stream Processing with Apache Flink》📚&lt;/a&gt;: With this practical guide, you’ll learn how to use Apache Flink’s stream processing APIs to implement, continuously run, and maintain real-world applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;course&#34;&gt;Course&lt;/h2&gt;
&lt;h2 id=&#34;blog&#34;&gt;Blog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.madhukaraphatak.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Madhukara Phatak: 某个大数据咨询师的博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mechanism--机制&#34;&gt;Mechanism | 机制&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/anzhsoft/article/details/38168025&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2014-从 Storm 和 Spark 学习流式实时分布式计算的设计&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;comparison--对比&#34;&gt;Comparison | 对比&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/dRzPtdEqI6h3lRzmxsxEnw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Spark 比拼 Flink：下一代大数据计算引擎之争，谁主沉浮？&lt;/a&gt;: 本文对 Spark 和 Flink 的技术与场景进行了全面分析与对比，且看下一代大数据计算引擎之争，谁主沉浮？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.cakesolutions.net/teamblogs/comparison-of-apache-stream-processing-frameworks-part-1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-comparison-of-apache-stream-processing-frameworks&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;engineering-practices--工程实践&#34;&gt;Engineering Practices | 工程实践&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/lHm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How the end-to-end back-pressure mechanism inside Wallaroo works&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/frankmcsherry/blog/blob/master/posts/2016-07-26.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Differential dataflow roadmap&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/research/publication/differential-dataflow/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Microsoft differential-dataflow&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
