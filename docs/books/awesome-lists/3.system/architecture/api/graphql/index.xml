<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GraphQL | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/index.xml" rel="self" type="application/rss+xml" />
    <description>GraphQL</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>GraphQL</title>
      <link>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/</link>
    </image>
    
    <item>
      <title>GraphQL-Client-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-client-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-client-list/</guid>
      <description>&lt;h1 id=&#34;graphql-client-list&#34;&gt;GraphQL Client List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://itnext.io/exploring-different-graphql-clients-d1bc69de305f&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Exploring different GraphQL Clients&lt;/a&gt;: I wanted to study how these clients work, so I aimed to implement the same query using different clients and share my experience.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/Ug0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Structure and implementation of GraphQL servers #Series#&lt;/a&gt;: When starting out with GraphQL — one of the first questions to ask is how do I build a GraphQL server?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;apollo&#34;&gt;Apollo&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev-blog.apollodata.com/a-first-look-at-async-react-apollo-10a82907b48e?source=userActivityShare-fe48c4221a4c-1519979306&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A first look at Async React + Apollo&lt;/a&gt;: The suspense was killing us, so we built async React Apollo!&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;devops&#34;&gt;DevOps&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev-blog.apollodata.com/universal-graphql-5d4260a9a1b5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-How to use GraphQL beyond the frontend, from GraphQL Summit 2017&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev-blog.apollodata.com/caching-graphql-results-in-your-cdn-54299832b8e2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Caching GraphQL results in your CDN&lt;/a&gt;: How putting together Apollo Cache Control, Engine, and Automatic Persisted Queries makes it easy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://jsjaspreet.com/blog/graphql-best-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-GraphQL Best Practices&lt;/a&gt;: For the purposes of this guide, I&amp;rsquo;m going to assume you&amp;rsquo;re using Apollo&amp;rsquo;s GraphQL ecosystem, though the general ideas are applicable regardless of which GraphQL flavor you&amp;rsquo;re using.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>GraphQL-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-list/</guid>
      <description>&lt;h1 id=&#34;graphql-list&#34;&gt;GraphQL List&lt;/h1&gt;
&lt;p&gt;This file aggregates curated popular links for learning GraphQL. More reference about ITCS can turn to &lt;a href=&#34;https://github.com/wx-chevalier/Awesome-Lists&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AwesomeList: Guide to Galaxy&lt;/a&gt;, which collects valuable, popular and up-to-date links for CS, including Programming Language, Software Engineering, Server Side Application, Infrastructure, InfoSecurity, Industrial Application, DataScienceAI, Frontend Technology(iOS, Android, RN, Electron), etc.&lt;/p&gt;
&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/apollo-stack/why-graphql-is-the-future-3bec28193807#.kcsxfgfhm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Why GraphQL is the future&lt;/a&gt;: 阐述了 GraphQL 与 REST 的对比&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/U6S&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-The GraphQL stack: How everything fits together&lt;/a&gt;: A look at caching, tracing, schema stitching, and GraphQL’s future from GraphQL Summit 2017.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.freecodecamp.org/rest-apis-are-rest-in-peace-apis-long-live-graphql-d412e559d8e4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-REST APIs are REST-in-Peace APIs. Long Live GraphQL.&lt;/a&gt;: This article is not actually 100% in favor of GraphQL. There is a very important section about the cost of GraphQL’s flexibility.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UvI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-GraphQL at the REST-aurant&lt;/a&gt;: A tasty introduction to GraphQL.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backend-for-frontend&#34;&gt;Backend for Frontend&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/g5zHRLFSBvHWaKLLhedtvQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;微服务下使用 GraphQL 构建 BFF 的实践&lt;/a&gt;: Backend for Frontends(以下简称 BFF) 顾名思义，是为前端而存在的后端 (服务) 中间层。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.thoughtworks.com/radar/techniques/bff-backend-for-frontends&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BFF - backend for frontends&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://samnewman.io/patterns/architectural/bff/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pattern: Backends For Frontends&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.thoughtworks.com/insights/blog/bff-soundcloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BFF@SoundCloud&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vs-rest&#34;&gt;vs REST&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.jacobwgillespie.com/from-rest-to-graphql-b4e95e94c26b#.klx32whu6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-From REST to GraphQL&lt;/a&gt;：从 REST 到 GraphQL 的思维变迁。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@ottovw/rest-api-downfalls-and-dawn-of-graphql-dd00991a0eb8#.9e5dhww7z&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rest-api-downfalls-and-dawn-of-graphql&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev-blog.apollodata.com/graphql-vs-rest-5d425123e34b&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-GraphQL vs. REST&lt;/a&gt;: Two ways to send data over HTTP: What’s the difference?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@davidcelis/give-it-a-rest-use-graphql-for-your-apis-40a2761e6336#.4shk2q5lq&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Give it a REST: use GraphQL for your APIs!&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;resource&#34;&gt;Resource&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://facebook.github.io/graphql/October2016/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GraphQL Specification&lt;/a&gt;: This is a Draft RFC Specification for GraphQL, a query language created by Facebook in 2012 for describing the capabilities and requirements of data models for client‐server applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/chentsulin/awesome-graphql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Awesome GraphQL 🗃️&lt;/a&gt;: Awesome list of GraphQL &amp;amp; Relay.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/howtographql/howtographql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-How to GraphQL #Series#&lt;/a&gt;: How to GraphQL is a fullstack tutorial website to learn all around GraphQL! It was built by Graphcool and many amazing contributors.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;case-study&#34;&gt;Case Study&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://hackernoon.com/how-graphql-replaces-redux-3fff8289221d&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-How GraphQL Replaces Redux&lt;/a&gt;: GraphQL is a server side query language. Redux is a client-side state management library. How could one replace the other?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev-blog.apollodata.com/graphql-first-in-practice-at-quri-7bf84b260135&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-GraphQL First in practice at Quri&lt;/a&gt;: Bringing GraphQL efficiencies to non JavaScript environment&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://engineering.universe.com/why-were-betting-on-graphql-233ddf1a0779&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Why We’re Betting on GraphQL&lt;/a&gt;: Universe is betting big on GraphQL. We’ve been hard at work this quarter aiming to deliver a richly typed, documented, publicly available GraphQL interface into our existing event ticketing platform.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev-blog.apollodata.com/courseras-journey-to-graphql-a5ad3b77f39a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Adding GraphQL to a REST and microservices backend&lt;/a&gt;: Client developers at Coursera love GraphQL’s flexibility, type-safety, and community of support, and we’ve made that well known.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/7WTtx9qsHT1HC6XDxxIb5w&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-PayPal：如何在你的公司扩展 GraphQL？&lt;/a&gt;: 去年，PayPal 将 GraphQL 引入了技术堆栈，彻底改变了开发人员思考数据、获取数据和构建应用程序的方式。本文作者在一年前曾写过一篇 GraphQL 最佳实践的文章，当时受到了广大读者的欢迎。这篇文章同样也是一篇精彩的总结，可以当作公司部署 GraphQL 的指南。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;showcase&#34;&gt;Showcase&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/clintonwoo/hackernews-react-graphql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Hacker News Clone React/GraphQL&lt;/a&gt;: This project is a clone of hacker news rewritten with universal JavaScript, using React and GraphQL.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/oIZ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-基于 SPA 架构的 GraphQL 工程实践&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tutorial&#34;&gt;Tutorial&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://css-tricks.com/front-end-developers-guide-graphql/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-A Front End Developer’s Guide to GraphQL&lt;/a&gt;: In this post, we’ll walk through a couple of hands-on examples to show you how integrating GraphQL into your application will solve many pain points working with remote data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://hackernoon.com/an-introduction-to-graphql-2c3f7d8fb4e0?source=userActivityShare-fe48c4221a4c-1518927834&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-An Introduction to GraphQL&lt;/a&gt;: It is a methodology that directly competes with REST (Representational state transfer) APIs, much like REST competed with SOAP at first.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@weblab_tech/graphql-everything-you-need-to-know-58756ff253d8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-GraphQL: Everything You Need to Know&lt;/a&gt;: The purpose of this article is to highlight the major features associated with GraphQL along with discussing the significant pros and cons associated with this particular API specification.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/apollographql/launchpad&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Launchpad 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Launchpad is an in-browser GraphQL server playground. You can write a GraphQL schema example in JavaScript, and instantly create a serverless, publicly-accessible GraphQL endpoint. We call these code snippets that live on Launchpad “pads”.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;schema&#34;&gt;Schema&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev-blog.apollodata.com/modularizing-your-graphql-schema-code-d7f71d5ed5f2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Modularizing your GraphQL schema code&lt;/a&gt;: How to split up your schema definition, resolvers, and Query type into multiple files&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mutation&#34;&gt;Mutation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://techblog.commercetools.com/modeling-graphql-mutations-52d4369f73b1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Modeling GraphQL Mutations&lt;/a&gt;: In this article, I would like to explore one possible way how you can approach this challenge with examples from our own GraphQL API.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>GraphQL-OpenSource-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-opensource-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-opensource-list/</guid>
      <description>&lt;h1 id=&#34;graphql-opensource-list&#34;&gt;GraphQL OpenSource List&lt;/h1&gt;
&lt;h1 id=&#34;schema&#34;&gt;Schema&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/graphql-tag&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;graphql-tag 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Helpful utilities for parsing GraphQL queries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/rexxars/sql-to-graphql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sql-to-graphql 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Generate GraphQL schemas and server based on SQL table structure.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;server-side&#34;&gt;Server Side&lt;/h1&gt;
&lt;h2 id=&#34;framework&#34;&gt;Framework&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/graphql/express-graphql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;express-graphql 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Facebook’s Express middleware released in 2015, alongside the official GraphQL spec and GraphQL.js reference implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/apollographql/apollo-server&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;apollo-server 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: GraphQL server for Express, Connect, Hapi, Koa and more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/graphcool/graphql-yoga&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;graphql-yoga 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Fully-featured GraphQL Server with focus on easy setup, performance &amp;amp; great developer experience.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/19majkel94/type-graphql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;type-graphql 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Create GraphQL schema and resolvers with TypeScript, using classes and decorators!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;automation&#34;&gt;Automation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/prisma/prisma&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prisma 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Prisma turns your database into a realtime GraphQL API.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/apollographql/apollo-codegen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apollo GraphQL code generator 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;:
This is a tool to generate API code or type annotations based on a GraphQL schema and query documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/graphile/postgraphile&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PostGraphile 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A GraphQL API created by reflection over a PostgreSQL schema.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Urigo/graphql-mesh/blob/master/README.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GraphQL Mesh 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: GraphQL Mesh allows you to use GraphQL query language to access data in remote APIs that don&amp;rsquo;t run GraphQL (and also ones that do run GraphQL). It can be used as a gateway to other services, or run as a local GraphQL schema that aggregates data from remote APIs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hasura/graphql-engine&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-Hasura GraphQL Engine 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Blazing fast, instant realtime GraphQL APIs on your DB with fine grained access control, also trigger webhooks on database events.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;utility&#34;&gt;Utility&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/facebook/dataloader&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dataloader 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: DataLoader is a generic utility to be used as part of your application&amp;rsquo;s data fetching layer to provide a consistent API over various backends and reduce requests to those backends via batching and caching.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;client&#34;&gt;Client&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/apollographql/apollo-client&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apollo Client 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A fully-featured, production ready caching GraphQL client for every UI framework and GraphQL server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/f/graphql.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-graphql.js 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A Simple and Isomorphic GraphQL Client for JavaScript.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>GraphQL-Server-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-server-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-server-list/</guid>
      <description>&lt;h1 id=&#34;graphql-server-list&#34;&gt;GraphQL Server List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/swalkinshaw/3a33e2d292b60e68fcebe12b62bbb3e2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Tutorial: Designing a GraphQL API&lt;/a&gt;: This tutorial was created by Shopify for internal purposes. We&amp;rsquo;ve created a public version of it since we think it&amp;rsquo;s useful to anyone creating a GraphQL API.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;concepts--specification&#34;&gt;Concepts &amp;amp; Specification&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/apollo-stack/graphql-explained-5844742f195e#.rsa2k61tx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GraphQL explained How GraphQL turns a query into a response&lt;/a&gt;: GraphQL 简单的原理介绍，可以有助于理解 GraphQL 的设计理念与作用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UIv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GraphQL Concepts Visualized&lt;/a&gt;: Our mental model of GraphQL, explained in diagrams.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UXd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Five Common Problems in GraphQL Apps (And How to Fix Them)&lt;/a&gt;: In this article, we will learn to unlock the power of GraphQL without suffering its drawbacks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/U3X&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Improve GraphQL Performance with Automatic Persisted Queries&lt;/a&gt;: Lighten up your queries and get faster response times with new Apollo tools&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/U1t&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Securing Your GraphQL API from Malicious Queries&lt;/a&gt;: In this guest post he describes how they secured their GraphQL API from attackers.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;schema&#34;&gt;Schema&lt;/h1&gt;
&lt;h1 id=&#34;server&#34;&gt;Server&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://techblog.commercetools.com/building-an-ecommerce-graphql-api-the-challenges-6d652a95f478?source=reading_list---------99-3---------&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Building an Ecommerce GraphQL API: The Challenges&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/apollo-stack/tutorial-building-a-graphql-server-cddaa023c035#.w6r1huy4b&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tutorial-building-a-graphql-server&lt;/a&gt;: 从零开始构建一个 GraphQL 服务端，包含了 SQL 查询、Mongodb 查询以及 REST Endpoint 的支持&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/apollo-stack/how-do-i-graphql-2fcabfc94a01#.wzt7u46uc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;how-do-i-graphql&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/the-graphqlhub/graphql-and-authentication-b73aed34bbeb#.qgau20poo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;graphql-and-authentication&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UIg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to build a GraphQL Server with &lt;code&gt;graphql-yoga&lt;/code&gt;&lt;/a&gt;: In this post, you’ll learn how to build your own GraphQL server using graphql-yoga from scratch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.graph.cool/how-to-wrap-a-rest-api-with-graphql-8bf3fb17547d&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to wrap a REST API with GraphQL&lt;/a&gt;: 3-step tutorial how to easily turn a REST API into a GraphQL API.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bWY&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Apollo Server 1.0 — A GraphQL Server for all Node.js frameworks&lt;/a&gt;: Use GraphQL with Express, Hapi, Koa, Lambda, Micro, Restify, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.graph.cool/tutorial-building-a-realtime-graphql-server-with-subscriptions-2758cfc6d427&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Building a Realtime GraphQL Server with Subscriptions&lt;/a&gt;: GraphQL subscriptions allow clients to receive realtime updates from a GraphQL API upon specific events。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/apollo-stack/how-to-build-graphql-servers-87587591ded5#.za2zqmq0i&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-How To Build GraphQL Servers&lt;/a&gt;: 一些使用 GraphQL 进行服务端构建的最佳实践。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.apollographql.com/how-to-build-graphql-servers-87587591ded5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-How to structure GraphQL server code&lt;/a&gt;: Using resolvers, models, connectors, and measuring performance.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;apollo-server&#34;&gt;Apollo Server&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hackernoon.com/creating-a-structured-hot-reloadable-graphql-api-with-express-js-de62c859643&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Creating a structured, hot-reloadable GraphQL API with Express.js, Apollo Server and Webpack&lt;/a&gt;: We’ll walk through how to set up an API with Express and Apollo Server&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
