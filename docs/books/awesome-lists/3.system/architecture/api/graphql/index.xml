<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GraphQL | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/index.xml" rel="self" type="application/rss+xml"/><description>GraphQL</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>GraphQL</title><link>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/</link></image><item><title>GraphQL-Client-List</title><link>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-client-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-client-list/</guid><description>&lt;h1 id="graphql-client-list">GraphQL Client List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://itnext.io/exploring-different-graphql-clients-d1bc69de305f" target="_blank" rel="noopener">Exploring different GraphQL Clients&lt;/a>: I wanted to study how these clients work, so I aimed to implement the same query using different clients and share my experience.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/Ug0" target="_blank" rel="noopener">Structure and implementation of GraphQL servers #Series#&lt;/a>: When starting out with GraphQL — one of the first questions to ask is how do I build a GraphQL server?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="apollo">Apollo&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://dev-blog.apollodata.com/a-first-look-at-async-react-apollo-10a82907b48e?source=userActivityShare-fe48c4221a4c-1519979306" target="_blank" rel="noopener">A first look at Async React + Apollo&lt;/a>: The suspense was killing us, so we built async React Apollo!&lt;/li>
&lt;/ul>
&lt;h1 id="devops">DevOps&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://dev-blog.apollodata.com/universal-graphql-5d4260a9a1b5" target="_blank" rel="noopener">2017-How to use GraphQL beyond the frontend, from GraphQL Summit 2017&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://dev-blog.apollodata.com/caching-graphql-results-in-your-cdn-54299832b8e2" target="_blank" rel="noopener">2018-Caching GraphQL results in your CDN&lt;/a>: How putting together Apollo Cache Control, Engine, and Automatic Persisted Queries makes it easy.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://jsjaspreet.com/blog/graphql-best-practices" target="_blank" rel="noopener">2018-GraphQL Best Practices&lt;/a>: For the purposes of this guide, I&amp;rsquo;m going to assume you&amp;rsquo;re using Apollo&amp;rsquo;s GraphQL ecosystem, though the general ideas are applicable regardless of which GraphQL flavor you&amp;rsquo;re using.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>GraphQL-List</title><link>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-list/</guid><description>&lt;h1 id="graphql-list">GraphQL List&lt;/h1>
&lt;p>This file aggregates curated popular links for learning GraphQL. More reference about ITCS can turn to &lt;a href="https://github.com/wx-chevalier/Awesome-Lists" target="_blank" rel="noopener">AwesomeList: Guide to Galaxy&lt;/a>, which collects valuable, popular and up-to-date links for CS, including Programming Language, Software Engineering, Server Side Application, Infrastructure, InfoSecurity, Industrial Application, DataScienceAI, Frontend Technology(iOS, Android, RN, Electron), etc.&lt;/p>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://medium.com/apollo-stack/why-graphql-is-the-future-3bec28193807#.kcsxfgfhm" target="_blank" rel="noopener">Why GraphQL is the future&lt;/a>: 阐述了 GraphQL 与 REST 的对比&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/U6S" target="_blank" rel="noopener">2017-The GraphQL stack: How everything fits together&lt;/a>: A look at caching, tracing, schema stitching, and GraphQL’s future from GraphQL Summit 2017.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.freecodecamp.org/rest-apis-are-rest-in-peace-apis-long-live-graphql-d412e559d8e4" target="_blank" rel="noopener">2017-REST APIs are REST-in-Peace APIs. Long Live GraphQL.&lt;/a>: This article is not actually 100% in favor of GraphQL. There is a very important section about the cost of GraphQL’s flexibility.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UvI" target="_blank" rel="noopener">2018-GraphQL at the REST-aurant&lt;/a>: A tasty introduction to GraphQL.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="backend-for-frontend">Backend for Frontend&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/g5zHRLFSBvHWaKLLhedtvQ" target="_blank" rel="noopener">微服务下使用 GraphQL 构建 BFF 的实践&lt;/a>: Backend for Frontends(以下简称 BFF) 顾名思义，是为前端而存在的后端 (服务) 中间层。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.thoughtworks.com/radar/techniques/bff-backend-for-frontends" target="_blank" rel="noopener">BFF - backend for frontends&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://samnewman.io/patterns/architectural/bff/" target="_blank" rel="noopener">Pattern: Backends For Frontends&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.thoughtworks.com/insights/blog/bff-soundcloud" target="_blank" rel="noopener">BFF@SoundCloud&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="vs-rest">vs REST&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://blog.jacobwgillespie.com/from-rest-to-graphql-b4e95e94c26b#.klx32whu6" target="_blank" rel="noopener">2016-From REST to GraphQL&lt;/a>：从 REST 到 GraphQL 的思维变迁。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@ottovw/rest-api-downfalls-and-dawn-of-graphql-dd00991a0eb8#.9e5dhww7z" target="_blank" rel="noopener">rest-api-downfalls-and-dawn-of-graphql&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://dev-blog.apollodata.com/graphql-vs-rest-5d425123e34b" target="_blank" rel="noopener">2017-GraphQL vs. REST&lt;/a>: Two ways to send data over HTTP: What’s the difference?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@davidcelis/give-it-a-rest-use-graphql-for-your-apis-40a2761e6336#.4shk2q5lq" target="_blank" rel="noopener">Give it a REST: use GraphQL for your APIs!&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="resource">Resource&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://facebook.github.io/graphql/October2016/" target="_blank" rel="noopener">GraphQL Specification&lt;/a>: This is a Draft RFC Specification for GraphQL, a query language created by Facebook in 2012 for describing the capabilities and requirements of data models for client‐server applications.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/chentsulin/awesome-graphql" target="_blank" rel="noopener">Awesome GraphQL 🗃️&lt;/a>: Awesome list of GraphQL &amp;amp; Relay.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/howtographql/howtographql" target="_blank" rel="noopener">2017-How to GraphQL #Series#&lt;/a>: How to GraphQL is a fullstack tutorial website to learn all around GraphQL! It was built by Graphcool and many amazing contributors.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="case-study">Case Study&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://hackernoon.com/how-graphql-replaces-redux-3fff8289221d" target="_blank" rel="noopener">2018-How GraphQL Replaces Redux&lt;/a>: GraphQL is a server side query language. Redux is a client-side state management library. How could one replace the other?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://dev-blog.apollodata.com/graphql-first-in-practice-at-quri-7bf84b260135" target="_blank" rel="noopener">2017-GraphQL First in practice at Quri&lt;/a>: Bringing GraphQL efficiencies to non JavaScript environment&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://engineering.universe.com/why-were-betting-on-graphql-233ddf1a0779" target="_blank" rel="noopener">2017-Why We’re Betting on GraphQL&lt;/a>: Universe is betting big on GraphQL. We’ve been hard at work this quarter aiming to deliver a richly typed, documented, publicly available GraphQL interface into our existing event ticketing platform.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://dev-blog.apollodata.com/courseras-journey-to-graphql-a5ad3b77f39a" target="_blank" rel="noopener">2017-Adding GraphQL to a REST and microservices backend&lt;/a>: Client developers at Coursera love GraphQL’s flexibility, type-safety, and community of support, and we’ve made that well known.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/7WTtx9qsHT1HC6XDxxIb5w" target="_blank" rel="noopener">2019-PayPal：如何在你的公司扩展 GraphQL？&lt;/a>: 去年，PayPal 将 GraphQL 引入了技术堆栈，彻底改变了开发人员思考数据、获取数据和构建应用程序的方式。本文作者在一年前曾写过一篇 GraphQL 最佳实践的文章，当时受到了广大读者的欢迎。这篇文章同样也是一篇精彩的总结，可以当作公司部署 GraphQL 的指南。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="showcase">Showcase&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/clintonwoo/hackernews-react-graphql" target="_blank" rel="noopener">2017-Hacker News Clone React/GraphQL&lt;/a>: This project is a clone of hacker news rewritten with universal JavaScript, using React and GraphQL.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/oIZ" target="_blank" rel="noopener">2018-基于 SPA 架构的 GraphQL 工程实践&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="tutorial">Tutorial&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://css-tricks.com/front-end-developers-guide-graphql/" target="_blank" rel="noopener">2017-A Front End Developer’s Guide to GraphQL&lt;/a>: In this post, we’ll walk through a couple of hands-on examples to show you how integrating GraphQL into your application will solve many pain points working with remote data.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://hackernoon.com/an-introduction-to-graphql-2c3f7d8fb4e0?source=userActivityShare-fe48c4221a4c-1518927834" target="_blank" rel="noopener">2018-An Introduction to GraphQL&lt;/a>: It is a methodology that directly competes with REST (Representational state transfer) APIs, much like REST competed with SOAP at first.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@weblab_tech/graphql-everything-you-need-to-know-58756ff253d8" target="_blank" rel="noopener">2018-GraphQL: Everything You Need to Know&lt;/a>: The purpose of this article is to highlight the major features associated with GraphQL along with discussing the significant pros and cons associated with this particular API specification.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/apollographql/launchpad" target="_blank" rel="noopener">Launchpad
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Launchpad is an in-browser GraphQL server playground. You can write a GraphQL schema example in JavaScript, and instantly create a serverless, publicly-accessible GraphQL endpoint. We call these code snippets that live on Launchpad “pads”.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="schema">Schema&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://dev-blog.apollodata.com/modularizing-your-graphql-schema-code-d7f71d5ed5f2" target="_blank" rel="noopener">2018-Modularizing your GraphQL schema code&lt;/a>: How to split up your schema definition, resolvers, and Query type into multiple files&lt;/li>
&lt;/ul>
&lt;h2 id="mutation">Mutation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://techblog.commercetools.com/modeling-graphql-mutations-52d4369f73b1" target="_blank" rel="noopener">2017-Modeling GraphQL Mutations&lt;/a>: In this article, I would like to explore one possible way how you can approach this challenge with examples from our own GraphQL API.&lt;/li>
&lt;/ul></description></item><item><title>GraphQL-OpenSource-List</title><link>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-opensource-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-opensource-list/</guid><description>&lt;h1 id="graphql-opensource-list">GraphQL OpenSource List&lt;/h1>
&lt;h1 id="schema">Schema&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.npmjs.com/package/graphql-tag" target="_blank" rel="noopener">graphql-tag
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Helpful utilities for parsing GraphQL queries.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/rexxars/sql-to-graphql" target="_blank" rel="noopener">sql-to-graphql
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Generate GraphQL schemas and server based on SQL table structure.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="server-side">Server Side&lt;/h1>
&lt;h2 id="framework">Framework&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/graphql/express-graphql" target="_blank" rel="noopener">express-graphql
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Facebook’s Express middleware released in 2015, alongside the official GraphQL spec and GraphQL.js reference implementation.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/apollographql/apollo-server" target="_blank" rel="noopener">apollo-server
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: GraphQL server for Express, Connect, Hapi, Koa and more.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/graphcool/graphql-yoga" target="_blank" rel="noopener">graphql-yoga
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Fully-featured GraphQL Server with focus on easy setup, performance &amp;amp; great developer experience.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/19majkel94/type-graphql" target="_blank" rel="noopener">type-graphql
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Create GraphQL schema and resolvers with TypeScript, using classes and decorators!&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="automation">Automation&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/prisma/prisma" target="_blank" rel="noopener">Prisma
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Prisma turns your database into a realtime GraphQL API.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/apollographql/apollo-codegen" target="_blank" rel="noopener">Apollo GraphQL code generator
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>:
This is a tool to generate API code or type annotations based on a GraphQL schema and query documents.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/graphile/postgraphile" target="_blank" rel="noopener">PostGraphile
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A GraphQL API created by reflection over a PostgreSQL schema.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/Urigo/graphql-mesh/blob/master/README.md" target="_blank" rel="noopener">GraphQL Mesh
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: GraphQL Mesh allows you to use GraphQL query language to access data in remote APIs that don&amp;rsquo;t run GraphQL (and also ones that do run GraphQL). It can be used as a gateway to other services, or run as a local GraphQL schema that aggregates data from remote APIs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/hasura/graphql-engine" target="_blank" rel="noopener">2021-Hasura GraphQL Engine
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Blazing fast, instant realtime GraphQL APIs on your DB with fine grained access control, also trigger webhooks on database events.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="utility">Utility&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/facebook/dataloader" target="_blank" rel="noopener">dataloader
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: DataLoader is a generic utility to be used as part of your application&amp;rsquo;s data fetching layer to provide a consistent API over various backends and reduce requests to those backends via batching and caching.&lt;/li>
&lt;/ul>
&lt;h1 id="client">Client&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/apollographql/apollo-client" target="_blank" rel="noopener">Apollo Client
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A fully-featured, production ready caching GraphQL client for every UI framework and GraphQL server.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/f/graphql.js" target="_blank" rel="noopener">2018-graphql.js
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A Simple and Isomorphic GraphQL Client for JavaScript.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>GraphQL-Server-List</title><link>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-server-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/3.system/architecture/api/graphql/graphql-server-list/</guid><description>&lt;h1 id="graphql-server-list">GraphQL Server List&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://gist.github.com/swalkinshaw/3a33e2d292b60e68fcebe12b62bbb3e2" target="_blank" rel="noopener">2018-Tutorial: Designing a GraphQL API&lt;/a>: This tutorial was created by Shopify for internal purposes. We&amp;rsquo;ve created a public version of it since we think it&amp;rsquo;s useful to anyone creating a GraphQL API.&lt;/li>
&lt;/ul>
&lt;h1 id="concepts--specification">Concepts &amp;amp; Specification&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://medium.com/apollo-stack/graphql-explained-5844742f195e#.rsa2k61tx" target="_blank" rel="noopener">GraphQL explained How GraphQL turns a query into a response&lt;/a>: GraphQL 简单的原理介绍，可以有助于理解 GraphQL 的设计理念与作用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UIv" target="_blank" rel="noopener">GraphQL Concepts Visualized&lt;/a>: Our mental model of GraphQL, explained in diagrams.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UXd" target="_blank" rel="noopener">2018-Five Common Problems in GraphQL Apps (And How to Fix Them)&lt;/a>: In this article, we will learn to unlock the power of GraphQL without suffering its drawbacks.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/U3X" target="_blank" rel="noopener">2017-Improve GraphQL Performance with Automatic Persisted Queries&lt;/a>: Lighten up your queries and get faster response times with new Apollo tools&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/U1t" target="_blank" rel="noopener">2018-Securing Your GraphQL API from Malicious Queries&lt;/a>: In this guest post he describes how they secured their GraphQL API from attackers.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="schema">Schema&lt;/h1>
&lt;h1 id="server">Server&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://techblog.commercetools.com/building-an-ecommerce-graphql-api-the-challenges-6d652a95f478?source=reading_list---------99-3---------" target="_blank" rel="noopener">Building an Ecommerce GraphQL API: The Challenges&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/apollo-stack/tutorial-building-a-graphql-server-cddaa023c035#.w6r1huy4b" target="_blank" rel="noopener">tutorial-building-a-graphql-server&lt;/a>: 从零开始构建一个 GraphQL 服务端，包含了 SQL 查询、Mongodb 查询以及 REST Endpoint 的支持&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/apollo-stack/how-do-i-graphql-2fcabfc94a01#.wzt7u46uc" target="_blank" rel="noopener">how-do-i-graphql&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/the-graphqlhub/graphql-and-authentication-b73aed34bbeb#.qgau20poo" target="_blank" rel="noopener">graphql-and-authentication&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UIg" target="_blank" rel="noopener">How to build a GraphQL Server with &lt;code>graphql-yoga&lt;/code>&lt;/a>: In this post, you’ll learn how to build your own GraphQL server using graphql-yoga from scratch.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.graph.cool/how-to-wrap-a-rest-api-with-graphql-8bf3fb17547d" target="_blank" rel="noopener">How to wrap a REST API with GraphQL&lt;/a>: 3-step tutorial how to easily turn a REST API into a GraphQL API.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bWY" target="_blank" rel="noopener">2017-Apollo Server 1.0 — A GraphQL Server for all Node.js frameworks&lt;/a>: Use GraphQL with Express, Hapi, Koa, Lambda, Micro, Restify, etc.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.graph.cool/tutorial-building-a-realtime-graphql-server-with-subscriptions-2758cfc6d427" target="_blank" rel="noopener">2018-Building a Realtime GraphQL Server with Subscriptions&lt;/a>: GraphQL subscriptions allow clients to receive realtime updates from a GraphQL API upon specific events。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/apollo-stack/how-to-build-graphql-servers-87587591ded5#.za2zqmq0i" target="_blank" rel="noopener">2018-How To Build GraphQL Servers&lt;/a>: 一些使用 GraphQL 进行服务端构建的最佳实践。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.apollographql.com/how-to-build-graphql-servers-87587591ded5" target="_blank" rel="noopener">2018-How to structure GraphQL server code&lt;/a>: Using resolvers, models, connectors, and measuring performance.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="apollo-server">Apollo Server&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://hackernoon.com/creating-a-structured-hot-reloadable-graphql-api-with-express-js-de62c859643" target="_blank" rel="noopener">2017-Creating a structured, hot-reloadable GraphQL API with Express.js, Apollo Server and Webpack&lt;/a>: We’ll walk through how to set up an API with Express and Apollo Server&lt;/li>
&lt;/ul></description></item></channel></rss>