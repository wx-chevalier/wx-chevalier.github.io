<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CloudNative | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/3.system/2.microcn/cloudnative/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/3.system/2.microcn/cloudnative/index.xml" rel="self" type="application/rss+xml"/><description>CloudNative</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>CloudNative</title><link>https://ng-tech.icu/books/awesome-lists/3.system/2.microcn/cloudnative/</link></image><item><title>CloudNative-List</title><link>https://ng-tech.icu/books/awesome-lists/3.system/2.microcn/cloudnative/cloudnative-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/3.system/2.microcn/cloudnative/cloudnative-list/</guid><description>&lt;h1 id="cloud-native-list">Cloud Native List&lt;/h1></description></item><item><title>Istio-List</title><link>https://ng-tech.icu/books/awesome-lists/3.system/2.microcn/cloudnative/istio-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/3.system/2.microcn/cloudnative/istio-list/</guid><description>&lt;h1 id="istio">Istio&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://yq.aliyun.com/articles/599874" target="_blank" rel="noopener">2018-阿里云 Kubernetes Service Mesh 实践，Istio 篇&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://www.infoq.cn/article/iCLxbfNWd3FlxcAFWD3h" target="_blank" rel="noopener">2020-Service Mesh 化繁为简：基于 Istiod 回归单体设计&lt;/a>: 作为 Service Mesh 领域最具权威的控制面，Istio 从 2017 年发布第一个版本后，就有着一个堪称“非常优雅”的架构设计。但在推出近 3 年后，其开发团队却“意外”推翻之前的架构，重新用上“复古的”单体应用设计。这里面究竟遇到什么不可逾越的鸿沟？ 笔者从几个简单问题（WHY、WHAT、WHEN）出发，为大家揭开这次算是 Istio 诞生以来最大一次“自我革命”的来龙去脉。&lt;/li>
&lt;/ul>
&lt;h1 id="resource">Resource&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://www.servicemesher.com/istio-handbook/" target="_blank" rel="noopener">2018-Istio Handbook——Istio 服务网格进阶实战 📚&lt;/a>: ServiceMesher 社区作为中国最早的一批在研究和推广 Service Mesh 技术的开源社区决定整合社区资源，合作撰写一本开源电子书作为服务网格智库。&lt;/li>
&lt;/ul></description></item><item><title>Serverless-List</title><link>https://ng-tech.icu/books/awesome-lists/3.system/2.microcn/cloudnative/serverless-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/3.system/2.microcn/cloudnative/serverless-list/</guid><description>&lt;h1 id="serverless-list">Serverless List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://read.acloud.guru/challenges-of-serverless-in-2017-1086275165ec#.s7q05y9z6" target="_blank" rel="noopener">Challenges of Serverless in 2017&lt;/a>: Bringing serverless into the mainstream will require breaking with old habits — especially around tooling and documentation&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.simform.com/serverless-architecture-guide/" target="_blank" rel="noopener">2017-The Comprehensive Guide to Serverless Architecture&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="resource">Resource&lt;/h1>
&lt;h2 id="book">Book&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://serverless.ink/" target="_blank" rel="noopener">Serverless 应用开发指南 📚&lt;/a>: Serverless 架构是指大量依赖第三方服务（也叫做后端即服务，即“BaaS”）或暂存容器中运行的自定义代码（函数即服务，即“FaaS”）的应用程序。&lt;/li>
&lt;/ul>
&lt;h1 id="theory">Theory&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://medium.com/cloud-academy-inc/serverless-beyond-functions-cd81ee4c6b8d" target="_blank" rel="noopener">2017-Serverless beyond Functions&lt;/a>: Most of the time, when talking about serverless, people thinks of functions, such as those provided by AWS Lambda.&lt;/li>
&lt;/ul>
&lt;h1 id="patterns">Patterns&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://serverless.com/blog/serverless-architecture-code-patterns/" target="_blank" rel="noopener">2018-Serverless Code Patterns&lt;/a>: In this post, we&amp;rsquo;ll share the best ways to structure your Serverless applications by applying the patterns directly on a simple example app we’re building — A Serverless Social Network.&lt;/li>
&lt;/ul>
&lt;h1 id="aws">AWS&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://serverless.com/blog/anatomy-of-a-serverless-app/" target="_blank" rel="noopener">2017-Anatomy of a Serverless Application&lt;/a>: In this post, I&amp;rsquo;ll walk you through how to get up and running on your first application.&lt;/li>
&lt;/ul>
&lt;h1 id="opensource">OpenSource&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/baidu/EasyFaaS" target="_blank" rel="noopener">2021-EasyFaaS
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: EasyFaaS 是一个依赖轻、适配性强、资源占用少、无状态且高性能的函数计算服务引擎。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/alexellis/faas" target="_blank" rel="noopener">2017-faas
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Functions as a Service - a serverless framework for Docker &amp;amp; Kubernetes&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/1backend/1backend" target="_blank" rel="noopener">1Backend
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Run your web apps with the ease of git repos. Build reusable microservices and functions.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/apache/incubator-openwhisk" target="_blank" rel="noopener">OpenWhisk
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: OpenWhisk is a cloud-first distributed event-based programming service. It provides a programming model to upload event handlers to a cloud service, and register the handlers to respond to various events.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/firecracker-microvm/firecracker" target="_blank" rel="noopener">Firecracker
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Secure and fast microVMs for serverless computing.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/drifting-in-space/plane" target="_blank" rel="noopener">Plane
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Plane is a container orchestrator for ambitious browser-based applications. Plane implements an architecture we call session backends.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>ServiceMesh-List</title><link>https://ng-tech.icu/books/awesome-lists/3.system/2.microcn/cloudnative/servicemesh-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/3.system/2.microcn/cloudnative/servicemesh-list/</guid><description>&lt;h1 id="service-mesh-list--服务网格资料索引">Service Mesh List | 服务网格资料索引&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://avinetworks.com/what-are-microservices-and-containers/" target="_blank" rel="noopener">What is a Service Mesh?&lt;/a>: Why Microservices Architecture Needs a Service Mesh.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/ur3PmLZ6VjP5L5FatIYYmg" target="_blank" rel="noopener">解读 2017 之 Service Mesh：群雄逐鹿烽烟起&lt;/a>: 2017 年的 Service Mesh 历程，在平淡中开始，如戏剧般结束，留给我们一个充满想象和憧憬的 2018。让我们一起来回顾这堪称精彩的一年。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/5j-1B5U8q2kE7f_DvPrBaw" target="_blank" rel="noopener">2018-下一代微服务！ServiceMesh 的 2018 年度总结&lt;/a>: 本次年度总结将由来自聚集国内 ServiceMesh 爱好者的 ServiceMesher 社区 的多位嘉宾共襄盛举，希望能为 Service Mesh 2018 年的发展做一个系统而全面的总结。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://xie.infoq.cn/article/a45f21af564c3ceb83af2ee0a" target="_blank" rel="noopener">2020-服务网格的最佳实践&lt;/a>: 微服务发展的这几年，新的技术和概念层出不穷，这些技术的引入本质上都是在围绕服务稳定性和业务开发效率提升，最近两年服务网格越来越被广大的微服务用户所认知。&lt;/li>
&lt;/ul>
&lt;h1 id="k8s">K8s&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/GJLS4PQEeu4bV898rNv5jg" target="_blank" rel="noopener">2018-深入解读 Service Mesh 背后的技术细节&lt;/a>: 概念的多，讲技术细节的少，所以专门写一篇文章，来解析 Service Mesh 背后的技术细节&lt;/li>
&lt;/ul>
&lt;h1 id="envoy">Envoy&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/LDVwqOHUISulXNppClmduA" target="_blank" rel="noopener">2018-深入解读 Service Mesh 的数据面 Envoy&lt;/a>: 但是对于数据面的关键组件 Envoy 没有详细解读，这篇文章补上。&lt;/li>
&lt;/ul>
&lt;h1 id="opensource">OpenSource&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://kuma.io/docs/0.4.0/overview/what-is-kuma/" target="_blank" rel="noopener">Kuma
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Kuma is a platform agnostic open-source control plane for Service Mesh and Microservices. It can run and be operated natively across both Kubernetes and VM environments, making it easy to adopt by every team in the organization.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://istio.io/about/intro.html" target="_blank" rel="noopener">Istio
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Istio is an open platform that provides a uniform way to connect, manage, and secure microservices. Istio supports managing traffic flows between microservices, enforcing access policies, and aggregating telemetry data, all without requiring changes to the microservice code.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/Microsoft/service-fabric" target="_blank" rel="noopener">Service Fabric
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Service Fabric is a distributed systems platform for packaging, deploying, and managing stateless and stateful distributed applications and containers at large scale.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/openservicemesh/osm" target="_blank" rel="noopener">Open Service Mesh
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Open Service Mesh (OSM) is a lightweight, extensible, cloud native service mesh that allows users to uniformly manage, secure, and get out-of-the-box observability features for highly dynamic microservice environments.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="sidecar">Sidecar&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.envoyproxy.io/" target="_blank" rel="noopener">Envoy
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Envoy is an OpenSource Egde and Service Proxy, Design for Cloud-Native Applications.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://kuma.io/docs/0.1.0/#what-is-kuma" target="_blank" rel="noopener">2019-Kuma
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Kuma is a universal open-source control plane for Service Mesh and Microservices.&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>