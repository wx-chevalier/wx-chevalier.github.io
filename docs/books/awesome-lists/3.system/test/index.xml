<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Test | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/3.system/test/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/3.system/test/index.xml" rel="self" type="application/rss+xml"/><description>Test</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Test</title><link>https://ng-tech.icu/books/awesome-lists/3.system/test/</link></image><item><title>PerformanceTest-List</title><link>https://ng-tech.icu/books/awesome-lists/3.system/test/performancetest-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/3.system/test/performancetest-list/</guid><description>&lt;h1 id="performance-test-list">Performance Test List&lt;/h1>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://m.aliyun.com/yunqi/articles/714997?spm=5176.11156470.0.0.1be06c5cmJf0ha" target="_blank" rel="noopener">2019-阿里巴巴在应用性能测试场景设计和实现上的实践 #Series#&lt;/a>: 该专题将从性能压测的设计、实现、执行、监控、问题定位和分析、应用场景等多个纬度对性能压测的全过程进行拆解，以帮助大家构建完整的性能压测的理论体系，并提供有例可依的实战。&lt;/li>
&lt;/ul></description></item><item><title>Test-List</title><link>https://ng-tech.icu/books/awesome-lists/3.system/test/test-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/3.system/test/test-list/</guid><description>&lt;h1 id="backend-test-list--软件测试资料索引">Backend Test List | 软件测试资料索引&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="http://mp.weixin.qq.com/s/0qEBWuZa2fpybCjV52Qi1g" target="_blank" rel="noopener">一名资深质量工程师总结的 4 个工作思路&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="unit-test--单元测试">Unit Test | 单元测试&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://martinfowler.com/articles/mocksArentStubs.html" target="_blank" rel="noopener">mocksArentStubs&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://testerhome.com/topics/6804" target="_blank" rel="noopener">BDD 从踢弟弟到逼弟弟&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://martinfowler.com/articles/testing-culture.html" target="_blank" rel="noopener">2014-Goto Fail, Heartbleed, and Unit Testing Culture&lt;/a>: This article considers the role unit testing could play, showing how unit tests, and more importantly a unit testing culture, could have identified these particular bugs.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="test-strategy">Test Strategy&lt;/h1>
&lt;h2 id="unit-test--单元测试-1">Unit Test | 单元测试&lt;/h2>
&lt;h2 id="integration-test--集成测试">Integration Test | 集成测试&lt;/h2>
&lt;h2 id="e2e-test--端到端测试">E2E Test | 端到端测试&lt;/h2>
&lt;h1 id="apirpc">API/RPC&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="http://139.196.14.76/t/mock/285" target="_blank" rel="noopener">高性能分布式 Mock 平台的框架与设计&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="性能压测">性能压测&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/xiaojiaqi/10billionhongbaos/wiki/%E6%89%9B%E4%BD%8F100%E4%BA%BF%E6%AC%A1%E8%AF%B7%E6%B1%82%EF%BC%9F%E6%88%91%E4%BB%AC%E6%9D%A5%E8%AF%95%E4%B8%80%E8%AF%95" target="_blank" rel="noopener">扛住 100 亿次请求？我们来试一试&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://yq.aliyun.com/articles/54004" target="_blank" rel="noopener">蚂蚁金服技术专家对性能优化的常见模式及趋势的思考&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/21348220" target="_blank" rel="noopener">高并发性能调试经验分享&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://coolshell.cn/articles/17381.html" target="_blank" rel="noopener">性能测试应该怎么做？&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://mp.weixin.qq.com/s?__biz=MzAxMTEyOTQ5OQ==&amp;amp;mid=2650610655&amp;amp;idx=1&amp;amp;sn=4f38ef56ff57054ab9745b0725351159#rd" target="_blank" rel="noopener">认清性能问题&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="工具模拟与使用">工具模拟与使用&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/clh604/article/details/12108477" target="_blank" rel="noopener">sysbench 0.5 性能测试工具使用手册&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.softlayer.com/2011/using-iperf-to-troubleshoot-speedthroughput-issues" target="_blank" rel="noopener">Using iPerf to Troubleshoot Speed/Throughput Issues&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="系统构建">系统构建&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://mp.weixin.qq.com/s?__biz=MzAwMDU1MTE1OQ==&amp;amp;mid=405352450&amp;amp;idx=1&amp;amp;sn=77485a9f0d1e504c8a6068e3b60f81c7&amp;amp;scene=23&amp;amp;srcid=0417zuijO8QFRZo2rVYeqltv#rd" target="_blank" rel="noopener">基于 Locust、Tsung 的百万并发秒杀压测案例&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.jobbole.com/87509/" target="_blank" rel="noopener">如何生成每秒百万级别的 HTTP 请求？&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://mp.weixin.qq.com/s?__biz=MzIxMjAzMDA1MQ==&amp;amp;mid=2648945745&amp;amp;idx=1&amp;amp;sn=422c7dd658ba83a42f5753669716378f&amp;amp;chksm=8f5b535db82cda4b281dfab3858e4afa6e6b453d0b77f5dd5d3f8ca3e33184fa470803d4d21e#rd" target="_blank" rel="noopener">模拟百万级 TCP 并发&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/hyXfme7Y5vz1x_viu1IbIQ" target="_blank" rel="noopener">2019-压测环境的设计和搭建 #Series#&lt;/a>: 从性能压测的设计、实现、执行、监控、问题定位和分析、应用场景等多个纬度对性能压测的全过程进行拆解，以帮助大家构建完整的性能压测的理论体系，并提供有例可依的实战。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="database">Database&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://dl.acm.org/citation.cfm?id=3127479.3128603" target="_blank" rel="noopener">Analysis of TPC-DS&lt;/a>: Analysis of TPC-DS: the first standard benchmark for SQL-based big data systems&lt;/li>
&lt;/ul>
&lt;h1 id="chaos-engineering">Chaos Engineering&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="http://principlesofchaos.org" target="_blank" rel="noopener">2018-Chaos Engineering&lt;/a>: Chaos Engineering is the discipline of experimenting on a system in order to build confidence in the system’s capability to withstand turbulent conditions in production.&lt;/li>
&lt;/ul></description></item><item><title>Test-OpenSource-List</title><link>https://ng-tech.icu/books/awesome-lists/3.system/test/test-opensource-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/3.system/test/test-opensource-list/</guid><description>&lt;h1 id="quality-assurance-opensource-list">Quality Assurance OpenSource List&lt;/h1>
&lt;h1 id="platform">Platform&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/metersphere/metersphere" target="_blank" rel="noopener">Metersphere
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: An open source continuous testing platform. MeterSphere 是一站式的开源企业级持续测试平台，涵盖测试跟踪、接口测试、性能测试、团队协作等功能，全面兼容 JMeter、Postman 等开源、主流标准。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/getgauge/gauge" target="_blank" rel="noopener">Gauge
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Gauge is a light weight cross-platform test automation tool. It provides the ability to author test cases in the business language.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/intuit/karate" target="_blank" rel="noopener">Karate
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Karate is the only open-source tool to combine API test-automation, mocks, performance-testing and even UI automation into a single, unified framework. The BDD syntax popularized by Cucumber is language-neutral, and easy for even non-programmers. Powerful JSON &amp;amp; XML assertions are built-in, and you can run tests in parallel for speed.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="api-test">API Test&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://mockjs.com/" target="_blank" rel="noopener">Mock.js
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: 生成随机数据，拦截 Ajax 请求&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/stepci/stepci" target="_blank" rel="noopener">Step CI
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Step CI is an open-source tool, which helps you automate API testing and monitoring.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/stoplightio/prism" target="_blank" rel="noopener">Prism
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Turn any OpenAPI2/3 and Postman Collection file into an API server with mocking, transformations and validations.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/postmanlabs/newman" target="_blank" rel="noopener">newman
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Manage all of your organization&amp;rsquo;s APIs in Postman, with the industry&amp;rsquo;s most complete API development environment.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/httprunner/httprunner" target="_blank" rel="noopener">HttpRunner
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: HttpRunner 是一个开源的 API 测试工具，支持 HTTP(S) / HTTP2 / WebSocket / RPC 等网络协议，涵盖接口测试、性能测试、数字体验监测等测试类型。简单易用，功能强大，具有丰富的插件化机制和高度的可扩展能力。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/Orange-OpenSource/hurl" target="_blank" rel="noopener">Hurl
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Hurl is a command line tool that runs HTTP requests defined in a simple plain text format.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="load-testing">Load Testing&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/wg/wrk" target="_blank" rel="noopener">wrk
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: wrk is a modern HTTP benchmarking tool capable of generating significant load when run on a single multi-core CPU.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/EZLippi/WebBench" target="_blank" rel="noopener">Webbench
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Webbench 是 Radim Kolar 在 1997 年写的一个在 linux 下使用的非常简单的网站压测工具。它使用 fork() 模拟多个客户端同时访问我们设定的 URL，测试网站在压力下工作的性能，最多可以模拟 3 万个并发连接去测试网站的负载能力。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/tsenart/vegeta" target="_blank" rel="noopener">Vegeta
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: HTTP load testing tool and library. It&amp;rsquo;s over 9000!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/locustio/locust" target="_blank" rel="noopener">Locust
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Scalable user load testing tool written in Python&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/loadimpact/k6" target="_blank" rel="noopener">k6
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: k6 is a modern load testing tool, building on Load Impact&amp;rsquo;s years of experience. It provides a clean, approachable scripting API, distributed and cloud execution, and orchestration via a REST API.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/six-ddc/plow" target="_blank" rel="noopener">plow
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A high-performance HTTP benchmarking tool with real-time web UI and terminal displaying.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="fuzz--diff">Fuzz &amp;amp; Diff&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/twitter/diffy" target="_blank" rel="noopener">Twitter-Diffy
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: 比较新老系统之间服务差异&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/google/fuzzbench" target="_blank" rel="noopener">FuzzBench
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: FuzzBench is a free service that evaluates fuzzers on a wide variety of real-world benchmarks, at Google scale.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="mock">Mock&lt;/h1>
&lt;h2 id="data-generator">Data Generator&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/Marak/faker.js" target="_blank" rel="noopener">faker.js
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Generate massive amounts of realistic fake data in Node.js and the browser.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/clh604/article/details/12108477" target="_blank" rel="noopener">sysbench 0.5 性能测试工具使用手册&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.softwaretestingmagazine.com/tools/open-source-database-testing-tools/" target="_blank" rel="noopener">open-source-database-testing-tools&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/minimaxir/big-list-of-naughty-strings/" target="_blank" rel="noopener">big-list-of-naughty-strings&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="database">Database&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://www.softwaretestingmagazine.com/tools/open-source-database-testing-tools/" target="_blank" rel="noopener">open-source-database-testing-tools&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.tpc.org/tpcds/" target="_blank" rel="noopener">TPC-DS
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: The TPC Benchmark DS (TPC-DS) is a decision support benchmark that models several generally applicable aspects of a decision support system, including queries and data maintenance.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/great-expectations/great_expectations" target="_blank" rel="noopener">Great Expectations
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Great Expectations helps data teams eliminate pipeline debt, through data testing, documentation, and profiling.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="system-test">System Test&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/axboe/fio" target="_blank" rel="noopener">fio
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Hence I needed a tool that would be able to simulate a given IO workload without resorting to writing a tailored test case again and again.&lt;/li>
&lt;/ul>
&lt;h1 id="chaos-engineering">Chaos Engineering&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/jepsen-io/jepsen" target="_blank" rel="noopener">Jepsen
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A framework for distributed systems verification, with fault injection.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/chaosblade-io" target="_blank" rel="noopener">ChaosBlade
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: ChaosBlade 是一款遵循混沌工程实验原理，提供丰富故障场景实现，帮助分布式系统提升容错性和可恢复性的混沌工程工具，可实现底层故障的注入，特点是操作简洁、无侵入、扩展性强。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/pingcap/chaos-mesh" target="_blank" rel="noopener">Chaos Mesh
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Chaos Mesh is a cloud-native Chaos Engineering platform that orchestrates chaos on Kubernetes environments.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/alexei-led/pumba" target="_blank" rel="noopener">Pumba
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Chaos testing, network emulation and stress testing tool for containers.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://litmuschaos.io/" target="_blank" rel="noopener">Litmus
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Chaos engineering is fundamental to increasing the resilience of today’s cloud native, highly dynamic applications and infrastructure. Kubernetes developers and SREs use Litmus to create, manage and monitor chaos workflows by extending Kubernetes itself.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="e2e-test--端到端测试">E2E Test | 端到端测试&lt;/h1>
&lt;h2 id="web-app">Web App&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/cypress-io/cypress" target="_blank" rel="noopener">Cypress
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Fast, easy and reliable testing for anything that runs in a browser.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/bbc-news/wraith" target="_blank" rel="noopener">Wraith
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A responsive screenshot comparison tool.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/marmelab/gremlins.js" target="_blank" rel="noopener">Gremlins.js
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Monkey testing library for web apps and Node.js.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="cross-browser-test--跨浏览器测试">Cross Browser Test | 跨浏览器测试&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/airtap/airtap" target="_blank" rel="noopener">Airtap
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Airtap is an easy way to test your JavaScript in browsers, using a TAP-producing harness like tap or tape.&lt;/li>
&lt;/ul>
&lt;h2 id="mobile-app">Mobile App&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/hyb1996/Auto.js" target="_blank" rel="noopener">Auto.js
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A UiAutomator on android, does not need root access(安卓平台上的 JavaScript 自动化工具)&lt;/li>
&lt;/ul>
&lt;h2 id="acceptance-test--接受度测试">Acceptance Test | 接受度测试&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/codeception/codeceptjs/" target="_blank" rel="noopener">CodeceptJS
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: CodeceptJS is a new testing framework for end-to-end testing with WebDriver (or others). It abstracts browser interaction to simple steps which is written from a user perspective.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/teamcapybara/capybara" target="_blank" rel="noopener">Capybara
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Capybara helps you test web applications by simulating how a real user would interact with your app. It is agnostic about the driver running your tests and comes with Rack::Test and Selenium support built in. WebKit is supported through an external gem.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="page-comparison--界面比较">Page Comparison | 界面比较&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/yahoo/blink-diff" target="_blank" rel="noopener">Blink-Diff
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A lightweight image comparison tool.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/gemini-testing/gemini" target="_blank" rel="noopener">Gemini
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Gemini is a utility for regression testing the visual appearance of web pages.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/Huddle/PhantomCSS" target="_blank" rel="noopener">PhantomCSS
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: CSS regression testing.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/garris/BackstopJS" target="_blank" rel="noopener">garris/BackstopJS
&lt;img src="https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/garris/BackstopJS" style="max-width: 100px;display: inline-flex;"/> &lt;/a>: BackstopJS automates visual regression testing of your responsive web UI by comparing DOM screenshots over time.&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>