<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CodeStyle | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/01.cs/codestyle/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/01.cs/codestyle/index.xml" rel="self" type="application/rss+xml"/><description>CodeStyle</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>CodeStyle</title><link>https://ng-tech.icu/books/awesome-lists/01.cs/codestyle/</link></image><item><title>CleanCode-List</title><link>https://ng-tech.icu/books/awesome-lists/01.cs/codestyle/cleancode-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/01.cs/codestyle/cleancode-list/</guid><description>&lt;h1 id="clean-code-list">Clean Code List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://smalldata.tech/blog/2018/09/16/clean-code-notes" target="_blank" rel="noopener">CLEAN CODE - NOTES&lt;/a>: The following is a list of notes taken on writing clean code, i.e. code that is maintainable and extensible.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://tech.meituan.com/clean-code.html" target="_blank" rel="noopener">美团点评技术团队 - 聊聊 clean code&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://hackernoon.com/software-complexity-naming-6e02e7e6c8cb" target="_blank" rel="noopener">Software Complexity: The Art of Naming&lt;/a>: There are only two hard things in Computer Science: cache invalidation and naming things.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.techug.com/anti-if-the-missing-patterns" target="_blank" rel="noopener">编程时避免使用 if 语句的五种模式&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://hackernoon.com/you-might-not-need-if-statements-a-better-approach-to-branching-logic-59b4f877697f#.pnmxdconp" target="_blank" rel="noopener">You might not need if statements: a better approach to branching logic&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/24543157" target="_blank" rel="noopener">如何跟老代码友好相处&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://www.planetgeek.ch/wp-content/uploads/2014/11/Clean-Code-V2.4.pdf" target="_blank" rel="noopener">Clean Code CheatSheet&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>CodeStyle-OpenSource-List</title><link>https://ng-tech.icu/books/awesome-lists/01.cs/codestyle/codestyle-opensource-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/01.cs/codestyle/codestyle-opensource-list/</guid><description>&lt;h1 id="refactor-opensource-list">Refactor OpenSource List&lt;/h1>
&lt;p>用于重构的一系列工具的集合。&lt;/p>
&lt;h1 id="code-analysis">Code Analysis&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/phodal/coca" target="_blank" rel="noopener">Coca
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Coca is a toolbox which is design for legacy system refactoring and analysis, includes call graph, concept analysis, api tree, design patterns suggest. Coca 是一个用于系统重构、系统迁移和系统分析的瑞士军刀。它可以分析代码中的 badsmell，行数统计，分析调用与依赖，进行 Git 分析，以及自动化重构等。&lt;/li>
&lt;/ul>
&lt;h1 id="codemod">Codemod&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/facebook/jscodeshift" target="_blank" rel="noopener">jscodeshift
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: jscodeshift is a toolkit for running codemods over multiple JavaScript or TypeScript files.&lt;/li>
&lt;/ul></description></item><item><title>SecurityGuide-List</title><link>https://ng-tech.icu/books/awesome-lists/01.cs/codestyle/securityguide-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/01.cs/codestyle/securityguide-list/</guid><description>&lt;h1 id="code-security-guide-list">Code Security Guide List&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Tencent/secguide" target="_blank" rel="noopener">2021-代码安全指南 #Series#&lt;/a>: 面向开发人员梳理的代码安全指南，旨在梳理 API 层面的风险点并提供详实可行的安全编码方案。&lt;/li>
&lt;/ul></description></item></channel></rss>