<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/c/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/01.cs/language/c/index.xml" rel="self" type="application/rss+xml" />
    <description>C</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>C</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/c/</link>
    </image>
    
    <item>
      <title>C-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/c/c-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/01.cs/language/c/c-list/</guid>
      <description>&lt;h1 id=&#34;c-list&#34;&gt;C List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wangdoc/clang-tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-Clang Tutorial #Series#&lt;/a&gt;: C 语言入门教程。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/rJVEKjxIrfiV-nSluvXZVg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-C 语言发展史的点点滴滴&lt;/a&gt;: 一直想写一篇关于 C 语言的文章，里面包含 C 语言的发展史、创始人等相关事迹。但是却迟迟未写，主要原因是因为：在我看来，这个语言太过于伟大、耀眼。作为一个仅仅使用过 C 语言的普通开发来说，完全没资格去写。但是，最近在看过一篇丹尼斯.里奇写的《C 语言发展史》之后，坚定了我写这篇文章的决心。不是歌功颂德，仅仅是以一种客观的视角去欣赏。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;resource&#34;&gt;Resource&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://beej.us/guide/bgc/html/split/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2023-《Beej&amp;rsquo;s Guide to C Programming》》📚&lt;/a&gt;: In the old days, C was a simpler language. A good number of the features contained in this book and a lot of the features in the Library Reference volume didn’t exist when K&amp;amp;R wrote the famous second edition of their book in 1988. Nevertheless, the language remains small at its core, and I hope I’ve presented it here in a way that starts with that simple core and builds outward.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tutorial&#34;&gt;Tutorial&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://brennan.io/2015/01/16/write-a-shell-in-c/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-Write a Shell in C #Series#&lt;/a&gt;: University students beware! Many classes have assignments that ask you to write a shell, and some faculty are aware of this tutorial and code. If you’re a student in such a class, you shouldn’t copy (or copy then modify) this code without permission. And even then, I would advise against heavily relying on this tutorial.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.ehoneahobed.com/building-a-simple-shell-in-c-part-1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-Building a simple shell in C #Series#&lt;/a&gt;: A basic shell that prints a prompt, waits for user to enter command and prints what they entered on the next line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://tmewett.com/c-tips/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-Everything I wish I knew when learning C&lt;/a&gt;: This page is a living collection of summaries, signposts, and advice for these broader points that made my journey with C and other compiled languages easier. I hope it’s useful to you!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
