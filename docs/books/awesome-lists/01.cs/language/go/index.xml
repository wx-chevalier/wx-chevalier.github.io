<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/01.cs/language/go/index.xml" rel="self" type="application/rss+xml" />
    <description>Go</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>Go</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/</link>
    </image>
    
    <item>
      <title>Go-Architecture-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-architecture-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-architecture-list/</guid>
      <description>&lt;h1 id=&#34;go-architecture-list&#34;&gt;Go Architecture List&lt;/h1&gt;
&lt;h2 id=&#34;styleguide&#34;&gt;StyleGuide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xxjwxc/uber_go_guide_cn/blob/master/README.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Uber Go 语言编码规范&lt;/a&gt;: Uber 是一家美国硅谷的科技公司，也是 Go 语言的早期 adopter. 其开源了很多 golang 项目，诸如被 Gopher 圈熟知的 zap、jaeger 等。2018 年年末 Uber 将内部的 Go 风格规范 开源到 GitHub。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Go-Collection-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-collection-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-collection-list/</guid>
      <description>&lt;h1 id=&#34;go-collection-list&#34;&gt;Go Collection List&lt;/h1&gt;
&lt;h1 id=&#34;hashmap&#34;&gt;HashMap&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://draveness.me/golang-hashmap&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;理解 Golang 哈希表 Map 的原理&lt;/a&gt;: 哈希表是除了数组之外，最常见的数据结构，几乎所有的语言都会有数组和哈希表这两种集合元素，有的语言将数组实现成列表，有的语言将哈希表称作结构体或者字典，但是它们其实就是两种设计集合元素的思路，数组用于表示一个元素的序列，而哈希表示的是键值对之间映射关系&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Go-ConcurrentProgramming-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-concurrentprogramming-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-concurrentprogramming-list/</guid>
      <description>&lt;h1 id=&#34;go-concurrent-programming-list&#34;&gt;Go Concurrent Programming List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://divan.github.io/posts/go_concurrency_visualize/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Visualizing Concurrency in Go · divan&amp;rsquo;s blog&lt;/a&gt;: One of the strongest sides of Go programming language is a built-in concurrency based on Tony Hoare’s CSP paper. Go is designed with concurrency in mind and allows us to build complex concurrent pipelines. But have you ever wondered - how various concurrency patterns look like?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://colobu.com/2018/03/26/channel-patterns&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Go Channel 应用模式&lt;/a&gt;: 除了正常的在 goroutine 之间安全地传递共享数据，Channel 还可以玩出很多的花样(模式)，本文列举了一些 channel 的应用模式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/golang/go/wiki/LearnConcurrency&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-LearnConcurrency&lt;/a&gt;: This page links to resources for learning about concurrency in Go. The items are presented in order, from beginner material to advanced topics.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;primitive&#34;&gt;Primitive&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.taohuawu.club/article/42&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Goroutine 并发调度模型深度解析&amp;amp;手撸一个协程池&lt;/a&gt;: 本文将通过 runtime 对 goroutine 的调度分析，帮助大家理解它的机理和发现一些内存和调度的原理和问题，并且基于此提出一种个人的解决方案 — 一个高性能的 Goroutine Pool（协程池）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;memory-model&#34;&gt;Memory Model&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/ref/mem&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Go Memory Model&lt;/a&gt;: The Go memory model specifies the conditions under which reads of a variable in one goroutine can be guaranteed to observe values produced by writes to the same variable in a different goroutine.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Go-Dev-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-dev-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-dev-list/</guid>
      <description>&lt;h1 id=&#34;go-development-practices-list&#34;&gt;Go Development Practices List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://peter.bourgon.org/go-best-practices-2016/#development-environment&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Go best practices, six years in&lt;/a&gt;: I reviewed the best practices from 2014 and took a look at how Go has evolved in 2016.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/U5Z&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Go tools &amp;amp; GitLab — how to do Continuous Integration like a boss&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.integralist.co.uk/posts/profiling-go/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Profiling Go&lt;/a&gt;: We dive into the techniques and tools available for profiling Go applications&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;test&#34;&gt;Test&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.alexellis.io/golang-writing-unit-tests/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Golang basics - writing unit tests&lt;/a&gt;: This post is a continuation of that theme, which covers unit testing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;profile&#34;&gt;Profile&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/DataDog/go-profiler-notes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;go-profiler-notes 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: I found that Go has a lot of profilers and there are many tools for looking at the data, but that there is very little information on what any of it means. So in order to make sure that I know what I&amp;rsquo;m talking about, I&amp;rsquo;ve started to research the existing profilers and how they work. This repository is my attempt to summarize my findings in the hope that it might be useful to others.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;style-guide&#34;&gt;Style Guide&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://sheepbao.github.io/post/golang_code_specification/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Golang 代码规范&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s/MVxleQ7HufBo46eKFzygKA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Go coding in Go way－Gopher China 演讲分享&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://draveness.me/golang-101&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-如何写出优雅的 Golang 代码&lt;/a&gt;: 写什么语言都像自己学过的语言其实是有问题的，想要真正融入生态写出优雅的代码就一定要花一些时间和精力了解语言背后的设计哲学和最佳实践。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Go-Internals-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-internals-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-internals-list/</guid>
      <description>&lt;h1 id=&#34;go-internals-list&#34;&gt;Go Internals List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://about.sourcegraph.com/go/gophercon-2018-allocator-wrestling/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-GopherCon 2018 - Allocator Wrestling&lt;/a&gt;: A whirlwind tour of the Go memory allocator and garbage collector, with tools and tips on how to optimize.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;compilation--编译&#34;&gt;Compilation | 编译&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://draveness.me/golang-compile-intro&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-Go 语言编译过程概述&lt;/a&gt;: 这一节会先对 Go 语言编译的过程进行概述，从顶层介绍编译器执行的几个步骤，随后的章节会分别剖析各个步骤完成的工作和实现原理，同时也会对一些需要预先掌握的知识进行介绍和准备，确保后面的章节能够被更好的理解。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assembly&#34;&gt;Assembly&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://davidwong.fr/goasm/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Go Assembly by Example #Series#&lt;/a&gt;: Go Assembly by Example is a hands-on introduction to Go&amp;rsquo;s Assembly language using annotated example programs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;compiler&#34;&gt;Compiler&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://eli.thegreenplace.net/2019/go-compiler-internals-adding-a-new-statement-to-go-part-1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-Go compiler internals: adding a new statement to Go&lt;/a&gt;: This is the first post in a two-part series that takes a tutorial-based approach to exploring the Go compiler.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;runtime&#34;&gt;Runtime&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/95056679&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-万字长文深入浅出 Golang Runtime&lt;/a&gt;: Golang Runtime 是个什么? Golang Runtime 的发展历程, 每个版本的改进。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;memory-management&#34;&gt;Memory Management&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s/9Uj1E3VO7Cd-6G_xZS_zoQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Go 语言的垃圾回收算法被吹过头了？与 Java 相比如何？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Go-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-list/</guid>
      <description>&lt;h1 id=&#34;awesome-go-links-list&#34;&gt;Awesome Go Links List&lt;/h1&gt;
&lt;p&gt;This file aggregates curated popular links for learning Golang. More reference about ITCS can turn to &lt;a href=&#34;https://github.com/wx-chevalier/Awesome-Lists&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AwesomeList: Guide to Galaxy&lt;/a&gt;, which collects valuable, popular and up-to-date links for CS, including Programming Language, Software Engineering, Server Side Application, Infrastructure, InfoSecurity, Industrial Application, DataScienceAI, Frontend Technology(iOS, Android, RN, Electron), etc.&lt;/p&gt;
&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://hackernoon.com/the-beauty-of-go-98057e3f0a7d&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-The beauty of Go&lt;/a&gt;: So if you’re an engineer or a startup trying to decide what language you want to explore or try out, do give Go a serious thought.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://juejin.im/post/5a6873fb518825733e60a1ae&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Golang 工程经验&lt;/a&gt;: 转战 Golang 一年有余，经历了两个线上项目的洗礼，总结出一些工程经验，一个是总结出一些实战经验，一个是用来发现自我不足之处。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://bluxte.net/musings/2018/04/10/go-good-bad-ugly/#go-is-easy-to-learn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Go: the Good, the Bad and the Ugly&lt;/a&gt;: Go does have some nice features, hence the &amp;ldquo;The Good&amp;rdquo; part in this post, but overall I find it cumbersome and painful to use when we go beyond API or network server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/34263871&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Go 语言发展史及史上最全 Go 语言知识图谱！&lt;/a&gt;: 今天和大家一起聊聊 Go 的发展历史，同时发布我们 Gopher China 整理的 Go 知识图谱。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/golang/proposal/blob/master/design/28221-go2-transitions.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Proposal: Go 2 transition&lt;/a&gt;: A proposal for how to make incompatible changes from Go 1 to Go 2 while breaking as little as possible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://benjamincongdon.me/blog/2019/11/11/The-Value-in-Gos-Simplicity/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-The Value in Go&amp;rsquo;s Simplicity&lt;/a&gt;: After using Go for a couple years, I’ve really come to appreciate its simplicity. I started writing Go at work a couple months ago, and have found it really easy to iterate on – much more so than Python and Java.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.infoq.cn/article/GvIGDDGavtU4KGmRQf9G?hmsr=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-解读 Go 语言的 2019：如果惊喜不再 还有哪些值得关注？&lt;/a&gt;: 作为紧跟时代步伐的软件开发者，我们还是应该务实一些，多做一些脚踏实地的事情，尤其是在构建底层的基础设施方面。而 Go 语言正是我们做这类事情时所需要的强大工具。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;case-study&#34;&gt;Case Study&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://eng.uber.com/schemaless-rewrite/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Uber-Code Migration in Production&lt;/a&gt;: Rewriting the Sharding Layer of Uber’s Schemaless Datastore.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kairos.com/blog/php-to-go-how-we-boosted-api-performance-by-8x&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-PHP to Go: How we boosted API performance by 8X&lt;/a&gt;: In this article we share why we made the move, how it’s radically improved performance, and some lessons learned along the way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/gopherchina/conference&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gopher China Conference 🗃️&lt;/a&gt;: Gopher China Conference Presentations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cheatsheet&#34;&gt;CheatSheet&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/a8m/go-lang-cheat-sheet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Go Cheat Sheet&lt;/a&gt;: An overview of Go syntax and features.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;resource&#34;&gt;Resource&lt;/h1&gt;
&lt;h2 id=&#34;book&#34;&gt;Book&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.golang-book.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-《An Introduction to Programming in Go》📚&lt;/a&gt;: A short, concise introduction to computer programming using the language Go. Designed by Google, Go is a general purpose programming language with modern features, clean syntax and a robust well-documented common library, making it an ideal language to learn as your first programming language.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.gopl.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-《The Go Programming Language》 📚&lt;/a&gt;: This book is meant to help you start using Go effec tive ly rig ht away and to use it well, taking full advantage of Go’s langu age features and stand ard librar ies to write clear, idiomatic, and efficient programs. &lt;a href=&#34;https://docs.hacknode.org/gopl-zh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中文译本地址&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/b21&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-《Learning Go Programming》📚&lt;/a&gt;: An insightful guide to learning the Go programming language&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://astaxie.gitbooks.io/build-web-application-with-golang/content/zh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-《Go Web 编程》📚&lt;/a&gt;: Go web 编程是因为我喜欢 Web 编程,所以写了这本书,希望大家喜欢。English Version is &lt;a href=&#34;https://legacy.gitbook.com/book/astaxie/build-web-application-with-golang/details&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Build web application with Golang&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://tiancaiamao.gitbooks.io/go-internals/content/zh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-《深入解析 Go》📚&lt;/a&gt;: 因为自己对 Go 底层的东西比较感兴趣，所以抽空在写一本开源的书籍《深入解析 Go》。写这本书不表示我能力很强，而是我愿意分享，和大家一起分享对 Go 语言的内部实现的一些研究。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://drive.wps.cn/view/l/576006e7ef6c4c4e8fe19663ded5e944&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Webapp with Golang Anti Textbook》📚&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kancloud.cn/mutouzhang/go/596804&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-《Concurrency in Go 中文笔记》📚&lt;/a&gt;: 以希望大家能够了解并掌握有关 Go 中并发性的高质量、全面的信息：如何使用它，如何将最佳实践和模式整合到系统中，以及它们如何在所有系统中运行。我尽力在这些考量之间取得平衡。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.programming-books.io/essential/go/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-《Essential Go》📚&lt;/a&gt;: a free Go programming book, a continuation of Stack Overflow Documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/teh-cmc/go-internals&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-《Go Internals》📚&lt;/a&gt;: go-internals is a work-in-progress book about the internals of the Go (1.10+) programming language.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/chai2010/advanced-go-programming-book&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-《Go 语言高级编程》📚&lt;/a&gt;: 开源图书，涵盖 CGO、Go 汇编语言、RPC 实现、Protobuf 插件实现、Web 框架实现、分布式系\统等高阶主题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ffhelicopter/Go42&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-《Go 语言四十二章经》📚&lt;/a&gt;: 这本书适合 Go 语言新手来细细阅读，对于有一定经验的开发人员，也可以根据自己的情况，选择一些章节来看。最后，希望更多的人了解和使用 Go 语言，也希望阅读本书的朋友们多多交流。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/chai2010/go2-book&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-《Go2 编程指南》📚&lt;/a&gt;: 本书重点讲解 Go2 新特性，以及 Go1 教程中较少涉及的特性。本书适合对 Go 语言有一定基础的用户学习。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/KeKe-Li/For-learning-Go-Tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-《For learning Go Tutorial》📚&lt;/a&gt;: 准备写一本 Go 的书针对初学者快速入门开发和使用 go！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dgryski/go-perfbook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-《go perfbook 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: The first sections cover writing optimized code in any language. The later sections cover Go-specific techniques.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/golang101/golang101&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-《Go 语言 101》📚&lt;/a&gt;: 一本侧重于 Go 语言语法和语义的编程解释和指导书。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://golang2.eddycjy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-《Go 语言编程之旅：一起用 Go 做项目》📚&lt;/a&gt;: 本书不直接介绍 Go 语言的语法基础，内容将面向项目实践，同时会针对核心细节进行分析。而在实际项目迭代中，常常会出现或多或少的事故，因此本书也针对 Go 语言的大杀器（分析工具）以及常见问题进行了全面讲解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://golang.design/under-the-hood/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-《Go 语言原本》📚&lt;/a&gt;: 本书就是一本讨论 Go 语言源码工程中的技术原理及其演进历程的书籍。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.practical-go-lessons.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-《Practical Go Lessons》📚&lt;/a&gt;: This book is about Go. My main objective is to teach you the language in a progressive way. I also tried to clarify and explain some common computer science notions that can be difficult to grasp, especially for newcomers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://geektutu.com/post/high-performance-go.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-《Go 语言高性能编程》📚&lt;/a&gt;: 通过学习一些著名的开源项目和 Go 的源码，也掌握了很多编程的技巧，知道怎么写才能获得更好的性能。这些技巧是零散的，我一直希望能够将这些技巧系统地整理出来，不断地完善，最终形成一本高性能编程的指南。因此，开启了 Go 语言高性能编程 这个电子书项目。这个项目刚起步，处于一个逐步完善的过程，与各位童鞋共勉。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/cch123/golang-notes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-《golang-notes》📚&lt;/a&gt;: 主要是源码分析，可能也会有一些使用上的知识点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/quii/learn-go-with-tests&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-《Learn Go with Tests 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Get a grounding with TDD. Go is a good language for learning TDD because it is a simple language to learn and testing is built-in&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;blog&#34;&gt;Blog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://draveness.me&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Draveness&amp;rsquo;s Blog #Blog#&lt;/a&gt;: 非常不错的 Go 系列博客。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://eli.thegreenplace.net/pages/about&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Eli Bendersky&amp;rsquo;s website #Blog#&lt;/a&gt;: 偏向于 Go 与 C++。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;collection&#34;&gt;Collection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/enocom/gopher-reading-list&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-A Gopher&amp;rsquo;s Reading List 🗃️&lt;/a&gt;: A curated selection of blog posts on Go.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/avelino/awesome-go&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Awesome Go 🗃️&lt;/a&gt;: A curated list of awesome Go frameworks, libraries and software.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/oGO&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Golang Guide: A List of Top Golang Frameworks, IDEs &amp;amp; Tools 🗃️&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/0voice/Introduction-to-Golang&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-最全空降 Golang 资料补给包 🗃️&lt;/a&gt;: 【未来服务器端编程语言】最全空降 golang 资料补给包（满血战斗），包含文章，书籍，作者论文，理论分析，开源框架，云原生，大佬视频，大厂实战分享 ppt&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dariubs/GoBooks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-Awesome Go Books 🗃️&lt;/a&gt;: List of Golang books.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://go.dev/learn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-Go.dev 🗃️&lt;/a&gt;: Install the latest version of Go. For instructions to download and install the Go compilers, tools, and libraries, view the install documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;course&#34;&gt;Course&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://parg.co/oZc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Beginner Solutions in Go - The Basics, Clients, and Servers 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;series&#34;&gt;Series&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gobyexample.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Go by Example #Series#&lt;/a&gt;: Go by Example is a hands-on introduction to Go using annotated example programs. Check out the first example or browse the full list below.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://tour.golang.org/welcome/1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-A tour of Go 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: The tour is divided into a list of modules and interactive, These example programs demonstrate different aspects of Go. The programs in the tour are meant to be starting points for your own experimentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://golangbot.com/learn-golang-series/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Golang tutorial series by GolangBot.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/GoesToEleven/GolangTraining&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-GolangTraining #Series#&lt;/a&gt;: Training for Golang (go language)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ardanlabs/gotraining-studyguide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-The Ultimate Go Study Guide #Series#&lt;/a&gt;: The project is a collection of my notes while learning Go programming language from Ardan Labs&amp;rsquo;s Ultimate Go course.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/geektutu/7days-golang&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-7 days golang programs from scratch 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 7 days golang programs from scratch (web framework Gee, distributed cache GeeCache, object relational mapping ORM framework GeeORM, rpc framework GeeRPC etc) 7 天用 Go 动手写/从零实现系列&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://c.biancheng.net/golang/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-C 语言中文网-Golang 入门教程 #Series#&lt;/a&gt;: Go 语言也称 Golang，兼具效率、性能、安全、健壮等特性。这套 Go 语言教程（Golang 教程）通俗易懂，深入浅出，既适合没有基础的读者快速入门，也适合工作多年的程序员查阅知识点。这套教程在讲解一些知识点时，将 Go 语言和其他多种语言进行对比，让掌握其它编程语言的读者能迅速理解 Go 语言的特性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/geektutu/7days-golang&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-7days-golang #Series#&lt;/a&gt;: 7 days golang apps from scratch (web framework Gee, distributed cache GeeCache, object relational mapping ORM framework GeeORM etc) 7 天用 Go 动手写/从零实现系列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mojotv.cn/404#Go%E8%BF%9B%E9%98%B6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Go 进阶 #Series#&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/teivah/100-go-mistakes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;100 Go Mistakes #Series#&lt;/a&gt;: Source code and community space of 📖 100 Go Mistakes&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tutorial&#34;&gt;Tutorial&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.karanpratapsingh.com/courses/go&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-Learn Go #Series#&lt;/a&gt;: Master the fundamentals and advanced features of the Go programming language&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;Quick Start&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/alco/gostart&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2014-Go Start&lt;/a&gt;: A getting started guide for Go newcomers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/campoy/go-tooling-workshop&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Go Tooling in Action&lt;/a&gt;: A workshop covering all the tools gophers use in their day to day life.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hyper0x/go_command_tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Golang command tutorial in Chinese.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/quii/learn-go-with-tests&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Learn go with tests&lt;/a&gt;: Explore the Go language by writing tests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://outcrawl.com/go-elastic-search-service/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-How to Build a Search Service with Go and Elasticsearch&lt;/a&gt;: This article shows how to build a simple search service in Go using Elasticsearch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://boyter.org/posts/how-to-start-go-project-2018/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-How to start a Go project in 2018&lt;/a&gt;: Getting started with a Go project in 2018 is frankly a little more painful then getting anything else started IMHO.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://arslan.io/2017/09/14/the-ultimate-guide-to-writing-a-go-tool/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-The ultimate guide to writing a Go tool ·Fatih Arslan&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/inancgumus/learngo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-learngo 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A Huge Number of Go Examples, Exercises and Quizzes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;links&#34;&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/23486344/answer/830242071&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.zhihu.com/question/23486344/answer/830242071&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Go-OpenSource-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-opensource-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-opensource-list/</guid>
      <description>&lt;h1 id=&#34;go-opensource-list--go-开源工具与框架索引&#34;&gt;Go OpenSource List | Go 开源工具与框架索引&lt;/h1&gt;
&lt;h1 id=&#34;showcase&#34;&gt;Showcase&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/erroneousboat/slack-term&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slack-Term 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A Slack client for your terminal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tophubs/TopList&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-TopList 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 今日热榜，一个获取各大热门网站热门头条的聚合网站，使用 Go 语言编写，多协程异步快速抓取信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/xinliangnote/go-gin-api&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;go-gin-api 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 基于 Gin 进行模块化设计的 API 框架，封装了常用功能，使用简单，致力于进行快速的业务研发。比如，支持 cors 跨域、jwt 签名验证、zap 日志收集、panic 异常捕获、trace 链路追踪、prometheus 监控指标、swagger 文档生成、viper 配置文件解析、gorm 数据库组件、gormgen 代码生成工具、graphql 查询语言、errno 统一定义错误码、gRPC 的使用 等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/geektutu/7days-golang&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-7 days golang programs from scratch 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 7 days golang programs from scratch (web framework Gee, distributed cache GeeCache, object relational mapping ORM framework GeeORM, rpc framework GeeRPC etc) 7 天用 Go 动手写/从零实现系列&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dundee/gdu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gdu 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Disk usage analyzer with console interface written in Go&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/maaslalani/slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;slides 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Terminal based presentation tool, This project is heavily inspired by lookatme. slides is a more minimal version of lookatme and written in Go.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/filebrowser/filebrowser&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;filebrowser 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: filebrowser provides a file managing interface within a specified directory and it can be used to upload, delete, preview, rename and edit your files. It allows the creation of multiple users and each user can have its own directory. It can be used as a standalone app or as a middleware.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wtfutil/wtf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-wtf 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/wtfutil/wtf&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: WTF (aka &amp;lsquo;wtfutil&amp;rsquo;) is the personal information dashboard for your terminal, providing at-a-glance access to your very important but infrequently-needed stats and data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/monkeyWie/gopeed&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-gopeed 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: High speed downloader that supports all platforms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/projectdiscovery/katana&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-katana 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A next-generation crawling and spidering framework.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/niudaii/zpscan&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-zpscan 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 一个有点好用的信息收集工具。A somewhat useful information gathering tool.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tailscale/golink&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-tailscale/golink 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/tailscale/golink&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: golink is a private shortlink service for your tailnet. It lets you create short, memorable links for the websites you and your team use most. If you&amp;rsquo;re new to golink, learn more in our announcement blog post.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cmd&#34;&gt;CMD&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/six-ddc/plow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;plow 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A high-performance HTTP benchmarking tool with real-time web UI and terminal displaying.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/schollz/croc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;croc 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Easily and securely send things from one computer to another 🐊 📦&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;storage&#34;&gt;Storage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/geohot/minikeyvalue&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;minikeyvalue 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A distributed key value store in under 1000 lines. Used in production at comma.ai&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/golang/groupcache&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;groupcache 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: groupcache is a caching and cache-filling library, intended as a replacement for memcached in many cases.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;game&#34;&gt;Game&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tristangoossens/snake-go&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-Snake 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: This is a Terminal based snake game made by tristangoossens.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/OpenDiablo2/OpenDiablo2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-OpenDiablo2 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: OpenDiablo2 is an ARPG game engine in the same vein of the 2000&amp;rsquo;s games, and supports playing Diablo 2. The engine is written in golang and is cross platform.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;admin&#34;&gt;Admin&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flipped-aurora/gin-vue-admin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gin-vue-admin 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 基于 gin+vue 搭建的后台管理系统框架，集成 jwt 鉴权，权限管理，动态路由，分页封装，多点登录拦截，资源权限，上传下载，代码生成器，表单生成器等基础功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;template&#34;&gt;Template&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/go-eagle/eagle&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;go-eagle 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 🦅 一款小巧的基于 Go 构建的开发框架，可以快速构建 API 服务或者 Web 网站进行业务开发，遵循 SOLID 设计原则。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;dev&#34;&gt;Dev&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.oschina.net/p/goplus&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GoPlus 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: GoPlus（Go+）是一门静态类型语言，与 Go 语言完全兼容。其代码样式类似脚本，并且比 Go 更具可读性，专门用于数据科学。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/alibaba/IOC-golang&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IOC-golang 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 一款服务于 Go 开发者的依赖注入框架，方便搭建任何 Go 应用。A Golang depenedency injection framework, helps developers to build any go application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/loov/lensm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;lensm 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A tool for viewing assembly and source.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;debug&#34;&gt;Debug&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/derekparker/delve&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Delve 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Delve is a debugger for the Go programming language.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/praetorian-inc/gokart&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GoKart 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: GoKart is a static analysis tool for Go that finds vulnerabilities using the SSA (single static assignment) form of Go source code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;dependence-management&#34;&gt;Dependence Management&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/golang/dep&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;golang/dep 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: dep is a prototype dependency management tool for Go. It requires Go 1.8 or newer to compile. dep is safe for production use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Masterminds/glide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;glide 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Glide is a tool for managing the vendor directory within a Go package.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/codegangsta/gin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gin 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: gin is a simple command line utility for live-reloading Go web applications.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;test&#34;&gt;Test&lt;/h2&gt;
&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/goreleaser/goreleaser&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2023-GoReleaser 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/goreleaser/goreleaser&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: GoReleaser builds Go binaries for several platforms, creates a GitHub release and then pushes a Homebrew formula to a tap repository. All that wrapped in your favorite CI.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;framework&#34;&gt;Framework&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gitee.com/kevwan/go-zero&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;go-zero 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: go-zero 是一个集成了各种工程实践的 web 和 rpc 框架。通过弹性设计保障了大并发服务端的稳定性，经受了充分的实战检验。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/go-kratos/kratos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-Kratos 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Kratos 一套轻量级 Go 微服务框架，包含大量微服务相关框架及工具。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;utils&#34;&gt;Utils&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/thoas/go-funk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;go-funk #{rpkecy 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: go-funk is a modern Go library based on reflect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/samber/lo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;lo 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 💥 A Lodash-style Go library based on Go 1.18+ Generics (map, filter, contains, find&amp;hellip;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dependence-injection&#34;&gt;Dependence Injection&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/wire&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-wire 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Compile-time Dependency Injection for Go&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/viper&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;viper 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Go configuration with fangs!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;command-line&#34;&gt;Command Line&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/manifoldco/promptui&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;promptui 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Interactive prompt for command-line applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/urfave/cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cli 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A simple, fast, and fun package for building command line apps in Go.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;concurrency&#34;&gt;Concurrency&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sourcegraph/conc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2023-conc 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/sourcegraph/conc&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: conc is your toolbelt for structured concurrency in go, making common tasks easier and safer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;log&#34;&gt;Log&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sirupsen/logrus&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;logrus 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Logrus is a structured logger for Go (golang), completely API compatible with the standard library logger.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mattn/anko&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Anko 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Anko is a scriptable interpreter written in Go.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/gperftools/gperftools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gperftools 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Main gperftools repository.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;data-structure&#34;&gt;Data Structure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/francoispqt/gojay&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gojay 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Highly performant JSON encoder/decoder with powerful stream API for Golang.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bcicen/jstream&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-jstream 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: jstream is a streaming JSON parser and value extraction library for Go.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/go-playground/validator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-Package validator 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 💯Go Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;network&#34;&gt;Network&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/imroc/req&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-req 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A golang http request library for humans.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/rhaidiz/broxy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Broxy 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Broxy is an open source intercept proxy written in Go.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tcp-server&#34;&gt;TCP Server&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aceld/zinx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Zinx 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Zinx 是一个基于 Golang 的轻量级并发服务器框架。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rpc&#34;&gt;RPC&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cloudwego/netpoll&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-netpoll 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A high-performance non-blocking I/O networking framework, which focused on RPC scenarios, developed by ByteDance.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;storage-1&#34;&gt;Storage&lt;/h1&gt;
&lt;h2 id=&#34;filesystem&#34;&gt;FileSystem&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/fsnotify/fsnotify&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-fsnotify 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Cross-platform file system notifications for Go.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/rakyll/statik&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-statik 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: statik allows you to embed a directory of static files into your Go binary to be later served from an http.FileSystem.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;database&#34;&gt;Database&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/boltdb/bolt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bolt 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: An embedded key/value database for Go.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/spy16/fabric&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fabric 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Fabric is a triple-store written in Go. Fabric provides simple functions and store options to deal with &amp;ldquo;Subject-&amp;gt;Predicate-&amp;gt;Object&amp;rdquo; relations or so called triples.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/256dpi/lungo/blob/master/README.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;lungoDB 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A MongoDB compatible embeddable database and toolkit for Go.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;orm&#34;&gt;ORM&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/xo/xo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;xo 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Command line tool to generate idiomatic Go code for SQL databases supporting PostgreSQL, MySQL, SQLite, Oracle, and Microsoft SQL Server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/didi/gendry&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gendry 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: a golang library for sql builder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://entgo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ent 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: An entity framework for Go. Simple, yet powerful ORM for modeling and querying data.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;web-framework&#34;&gt;Web Framework&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://beego.me/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Beego 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: An open source framework to build and develop your applications in the Go way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/gin-gonic/gin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gin 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Gin is a HTTP web framework written in Go (Golang). It features a Martini-like API with much better performance &amp;ndash; up to 40 times faster. If you need smashing performance, get yourself some Gin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kataras/iris&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;iris 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: The fastest community-driven web framework for Go. Webassembly, Automatic HTTPS with Public Domain, MVC, Sessions, Caching, Versioning API, Problem API, Websocket, Dependency Injection and more. Fully compatible with the standard library and 3rd-party middleware packages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/julienschmidt/httprouter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HttpRouter 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A high performance HTTP request router that scales well.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/caicloud/nirvana&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nirvana 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Golang Restful API Framework for Productivity. &lt;a href=&#34;https://mp.weixin.qq.com/s/NWGsPhVXuOW2t8cukP3TJQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;才云正式开源其 Golang API 框架 Nirvana&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bilibili/sniper/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sniper 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 轻量级业务框架。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/gofiber/fiber&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fiber 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Fiber is an Express inspired web framework build on top of Fasthttp, the fastest HTTP engine for Go. Designed to ease things up for fast development with zero memory allocation and performance in mind.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tal-tech/go-zero&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;go-zero 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: go-zero is a web and rpc framework written in Go. It&amp;rsquo;s born to ensure the stability of the busy sites with resilient design. Builtin goctl greatly improves the development productivity.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;microservice&#34;&gt;MicroService&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/go-kit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;go-kit 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A Go toolkit for microservices.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ServiceComb/go-chassis&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Go-Chassis 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Go-Chassis is a Software Development Kit(SDK) for rapid development of microservices in GoLang, providing service-discovery, fault-tolerance, circuit breaker, load balancing, monitoring, hot-reconfiguration features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/douyu/jupiter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jupiter 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Jupiter 是斗鱼开源的面向服务治理的 Golang 微服务框架。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;websocket&#34;&gt;WebSocket&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gobwas/ws&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ws 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Tiny WebSocket library for Go.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;https&#34;&gt;HTTPS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mholt/certmagic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-CertMagic 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Caddy&amp;rsquo;s automagic TLS features, now for your own Go programs, in one powerful and easy-to-use library!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;graphql&#34;&gt;GraphQL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gqlgen.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gqlgen 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: gqlgen is a golang library for building graphql servers without any fuss.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;auth&#34;&gt;Auth&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/casbin/casbin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Casbin 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: An authorization library that supports access control models like ACL, RBAC, ABAC in Golang.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/markbates/goth&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Goth 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Package goth provides a simple, clean, and idiomatic way to write authentication packages for Go web applications.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;ui-framework&#34;&gt;UI Framework&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fyne-io/fyne&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fyne 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Cross platform GUI in Go inspired by Material Design&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;other&#34;&gt;Other&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/appleboy/gorush&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gorush 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A push notification server written in Go (Golang).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/claudiodangelis/qr-filetransfer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;qr-filetransfer 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Transfer files over wifi from your computer to your mobile device by scanning a QR code without leaving the terminal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/schollz/find3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;find3 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: The Framework for Internal Navigation and Discovery (FIND) is like indoor GPS for your house or business, using only a simple smartphone or laptop.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hellofresh/janus&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Janus 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: This is a lightweight API Gateway and Management Platform that enables you to control who accesses your API, when they access it and how they access it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FiloSottile/mkcert&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mkcert 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: mkcert is a simple tool for making locally-trusted development certificates. It requires no configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ebitengine/purego&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-PureGo 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/ebitengine/purego&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A library for calling C functions from Go without Cgo.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Go-Syntax-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-syntax-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-syntax-list/</guid>
      <description>&lt;h1 id=&#34;go-syntax-list&#34;&gt;Go Syntax List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://thenewstack.io/understanding-golang-packages/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2014-Understanding Golang Packages&lt;/a&gt;: In this post, we will take a look at packages in the Go programming language.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parthdesai.me/articles/2015/08/30/go-generic-functions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-Design generic functions in golang&lt;/a&gt;: In this article, I will describe how to write generic functions in golang, as well as disadvantages of it, compared to static functions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;meta-programming元编程&#34;&gt;Meta Programming（元编程）&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.drewolson.org/dependency-injection-in-go/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Dependency Injection in Go&lt;/a&gt;: In this post I&amp;rsquo;ll give an introduction to DI and then show an example application before and after using DI (via the dig library).&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Go-Tuning-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-tuning-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-tuning-list/</guid>
      <description>&lt;h1 id=&#34;go-tuning-list&#34;&gt;Go Tuning List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://xiaorui.cc/archives/6955&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-技术分享之 golang 构建分布式任务系统&lt;/a&gt;: 如何使用 golang 构建一个分布式的任务系统 ? 该任务系统搞了几个月，有一些经验心得分享给大家。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cubox.pro/c/H15uYJ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-字节跳动 Go RPC 框架 KiteX 性能优化实践&lt;/a&gt;: KiteX 自 2020.04 正式发布以来，公司内部服务数量 8k+，QPS 过亿。经过持续迭代，KiteX 在吞吐和延迟表现上都取得了显著收益。本文将简单分享一些较有成效的优化方向，希望为大家提供参考。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;profile&#34;&gt;Profile&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/DataDog/go-profiler-notes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-go-profiler-notes 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/DataDog/go-profiler-notes&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: I found that Go has a lot of profilers and there are many tools for looking at the data, but that there is very little information on what any of it means. So in order to make sure that I know what I&amp;rsquo;m talking about, I&amp;rsquo;ve started to research the existing profilers and how they work. This repository is my attempt to summarize my findings in the hope that it might be useful to others.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;performance-optimization--性能优化&#34;&gt;Performance Optimization | 性能优化&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://colobu.com/2017/12/13/A-Million-WebSockets-and-Go/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[转][译]百万级 WebSockets 和 Go 语言&lt;/a&gt;: 即使你对 WebSockets 熟悉但对 Go 语言知之甚少，我还是希望这篇文章里讲到的性能优化的思路和技术对你有所启发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.slideshare.net/rfyiamcool/golang-93339108&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Golang 高性能实战&lt;/a&gt;: CDN 刷新系统 是一个高性能、可扩 展的分布式系统. 支持全网刷新及预缓存业务。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Go-Web-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-web-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/go-web-list/</guid>
      <description>&lt;h1 id=&#34;go-web-development-list&#34;&gt;Go Web Development List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gowebexamples.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Go Web Examples #Series#&lt;/a&gt;: Go Web Examples provides easy to understand code snippets on how to do web development in the Go programming language.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/U1h&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Building a JSON API in Go&lt;/a&gt;: I&amp;rsquo;ve recently been building more and more complex things with the Go programming language. It&amp;rsquo;s been a lot of fun!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hyper0x/go_command_tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Golang command tutorial in Chinese.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.cloudflare.com/using-go-as-a-scripting-language-in-linux/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Using Go as a scripting language in Linux&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/smallnest/go-web-framework-benchmark&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Go web framework benchmark 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: This benchmark suite aims to compare the performance of Go web frameworks. It is inspired by Go HTTP Router Benchmark but this benchmark suite is different with that.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@mlowicki/http-s-proxy-in-golang-in-less-than-100-lines-of-code-6a51c2f2c38c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-HTTP(S) Proxy in Golang in less than 100 lines of code&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;grpc&#34;&gt;grpc&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@amsokol.com/tutorial-how-to-develop-go-grpc-microservice-with-http-rest-endpoint-middleware-kubernetes-daebb36a97e9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-How to develop Go gRPC microservice with HTTP/REST endpoint, middleware, Kubernetes deployment, etc.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Gopher-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/gopher-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/01.cs/language/go/gopher-list/</guid>
      <description>&lt;h1 id=&#34;cute-go-gopher-images-list&#34;&gt;Cute Go gopher Images List&lt;/h1&gt;
&lt;p&gt;The Go gopher is an iconic mascot and one of the most distinctive features of the Go project. In &lt;a href=&#34;https://blog.golang.org/gopher&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;that post&lt;/a&gt; you can give sight in its origins, evolution, and behavior. And in this post, i gather some cute images about Gopher.&lt;/p&gt;
&lt;h1 id=&#34;collection&#34;&gt;Collection&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/MariaLetta/free-gophers-pack&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-Free Gophers Pack&lt;/a&gt;: This pack of 100+ gopher pictures and elements will help you to build own design of almost anything related to Go Programming Language.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;images&#34;&gt;Images&lt;/h1&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5803001/38185442-a75b7dfc-3680-11e8-86af-2565496779fb.jpg&#34; alt=&#34;fiveyears&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;http://colobu.com/images/logos/golang.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;http://colobu.com/images/logos/golang1.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;http://colobu.com/images/logos/golang2.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;http://colobu.com/images/logos/golang3.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;http://colobu.com/images/logos/golang4.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;http://colobu.com/images/logos/golang5.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;http://colobu.com/images/logos/golang6.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;http://colobu.com/images/logos/golang7.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5803001/38185302-1d77e17a-3680-11e8-95ab-c26053c180f6.png&#34; alt=&#34;fcf0693653f50a9db3d0ee7ec305c1d8&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://i.pinimg.com/originals/de/4d/af/de4daf20b7e43fc4bca3450d86a1a32c.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://i.pinimg.com/originals/2c/ee/c5/2ceec58b62b9132d924948b5eb0e0d4f.jpg&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://cdn.dribbble.com/users/135160/screenshots/1864294/fukuokago_01_1x.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://i.pinimg.com/736x/24/43/6d/24436ddcba1c5c0c6453d34332182352.jpg&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://i.pinimg.com/originals/88/1b/11/881b118ca4ddf4bd870847568637df36.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://blog.golang.org/gophergala/fancygopher.jpg&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5803001/38185480-cf3f299a-3680-11e8-8d5c-082580ad96eb.png&#34; alt=&#34;03cbc1a9f9178055093eb0c25ba9df2c29611671&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSsduVGQkzg6rvdVT7ErErVXw1o2ljhjcuEgtNFZuk4YCaKgKdZug&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS51gl1YZOA7s1o0RECmm_hpfmPtwiP7ulRzneW2nDPCpPdEtKN&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS5Ur032B58P6-QXrStO4n2FoHNwxUIZ8h9KBcuPIonzp5Hxqsu&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT7IiiP4O53o8WS2Cj3wRylrYN0hAf9n7YIQGqKLmB-xSobHBxDGA&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTRwtsRYv0wXI7Vl1470RfJPknvARk2gXXkXJtaW84q_om5ExNc&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
