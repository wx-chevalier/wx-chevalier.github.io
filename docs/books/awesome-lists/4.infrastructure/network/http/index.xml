<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTTP | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/network/http/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/4.infrastructure/network/http/index.xml" rel="self" type="application/rss+xml" />
    <description>HTTP</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>HTTP</title>
      <link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/network/http/</link>
    </image>
    
    <item>
      <title>DNS-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/network/http/dns-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/4.infrastructure/network/http/dns-list/</guid>
      <description>&lt;h1 id=&#34;dns-list--dns-资料索引&#34;&gt;DNs List | DNS 资料索引&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2016/06/dns.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DNS 原理入门&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://scotch.io/tutorials/dns-explained-how-your-browser-finds-websites&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DNS Explained – How Your Browser Finds Websites&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://howdns.works/episodes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Episodes: How DNS Works&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/mb7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-A cartoon intro to DNS over HTTPS&lt;/a&gt;: So let’s look at how DNS over HTTPS and Trusted Recursive Resolver protect our users.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;internals&#34;&gt;Internals&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.cyeam.com/network/2015/01/29/dns&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DNS 协议分析&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/K7rdF82yi-yGk5-aN9Se8A&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;从 Chrome 源码看 DNS 解析过程&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/U8z&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-DNS 报文详解&lt;/a&gt;: DNS【域名系统：(英文：Domain Name System，缩写：DNS)】是互联网的一项服务。它作为将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS 使用 TCP 和 UDP 端口 53。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;opensource&#34;&gt;OpenSource&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jedisct1/edgedns&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EdgeDNS 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>HTTP-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/network/http/http-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/4.infrastructure/network/http/http-list/</guid>
      <description>&lt;h1 id=&#34;http-list&#34;&gt;HTTP List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/pyyhRkaWtMhGR9Yh6lP-lw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;互联网协议的演变之路&lt;/a&gt;: 网络协议诞生至今，已经发生了哪些变化、未来还将迎来哪些演进，这会给网络带来怎样的影响，以及网络又会如何左右协议的设计思路？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s/27zpNIGhVbx-on9FDs_6dw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTTP 协议详解&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;HTTP://www.epubit.com.cn/article/378&#34;&gt;全栈工程师眼中的 HTTP&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;HTTP://www.ruanyifeng.com/blog/2016/08/HTTP.html&#34;&gt;阮一峰 HTTP 协议入门&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;HTTP://chimera.labs.oreilly.com/books/1230000000545/index.html&#34;&gt;High Performance Browser Networking&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;resource&#34;&gt;Resource&lt;/h1&gt;
&lt;h2 id=&#34;book&#34;&gt;Book&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://http3-explained.haxx.se/en/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-HTTP/3 explained 📚&lt;/a&gt;: This book effort was started in March 2018. The plan is to document HTTP/3 and its underlying protocol: QUIC. Why, how they work, protocol details, the implementations and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;request&#34;&gt;Request&lt;/h2&gt;
&lt;h2 id=&#34;response&#34;&gt;Response&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.infoq.com/cn/news/2015/12/how-to-choose-http-status-code/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;how-to-choose-http-status-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;cache--缓存&#34;&gt;Cache | 缓存&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching?hl=zh-cn#cache-control-&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Developer HTTP 缓存&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.cnblogs.com/vajoy/p/5341664.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;浅谈浏览器 http 的缓存机制&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s/qOMO0LIdA47j3RjhbCWUEQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;彻底弄懂 Http 缓存机制 - 基于缓存策略三要素分解法&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/23281814&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;web 性能优化之：no-cache 与 must-revalidate 深入探究&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://calendar.perfplanet.com/2017/clearing-cache-in-the-browser/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Clearing cache in the browser&lt;/a&gt;: Caching assets in the browser is the most common and most obvious way to improve front end performance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/8jg4X-cymkIpn0zVaMDf6Q&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-深入理解浏览器的缓存机制&lt;/a&gt;: 接下来的内容中我们将通过缓存位置、缓存策略以及实际场景应用缓存策略来探讨浏览器缓存机制。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>HTTP2-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/network/http/http2-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/4.infrastructure/network/http/http2-list/</guid>
      <description>&lt;h1 id=&#34;http2-学习与资料索引&#34;&gt;HTTP/2 学习与资料索引&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.smashingmagazine.com/2017/04/guide-http2-server-push/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-A Comprehensive Guide To HTTP/2 Server Push&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bi4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-HTTP/2 push is tougher than I thought&lt;/a&gt;: HTTP/2 push is more complicated and low-level than I initially thought, but what really caught me off-guard is how inconsistent it is between browsers – I&amp;rsquo;d assumed it was a done deal &amp;amp; totally ready for production.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@WebdesignerDepot/speed-up-your-sites-with-http-2-f6ee33cef6bd#.yzdpzial0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;speed-up-your-sites-with-http-2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://m12.io/blog/http-2-with-haproxy-and-nginx-guide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The complete guide to HTTP/2 with HAProxy and Nginx&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://io.upyun.com/2015/05/13/http2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTTP/2 新特性解析&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@asyncmax/the-right-way-to-bundle-your-assets-for-faster-sites-over-http-2-437c37efe3ff#.512pz6h3y&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Right Way to Bundle Your Assets for Faster Sites over HTTP/2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://auth0.com/blog/what-is-http2-all-about/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;What is HTTP/2 All About?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-with-http-2-support-on-ubuntu-16-04&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;how-to-set-up-nginx-with-http-2-support-on-ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://kamranahmed.info/blog/2016/08/13/http-in-depth/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Journey to HTTP/2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/creeperyang/blog/issues/23&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTTP2 简介和基于 HTTP2 的 Web 优化&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://taozj.org/201612/http2-spec.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTTP/2 协议规范和特性解读 &lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000007637735&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;未来已到 ——HTTP/2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/http2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Introduction to HTTP/2&lt;/a&gt;: HTTP/2 will make our applications faster, simpler, and more robust — a rare combination — by allowing us to undo many of the HTTP/1.1 workarounds previously done within our applications and address these concerns within the transport layer itself.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>HTTP3-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/network/http/http3-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/4.infrastructure/network/http/http3-list/</guid>
      <description>&lt;h1 id=&#34;http3&#34;&gt;HTTP3&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/23366045&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;从 HTTP 0.9 到 QUIC&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://new.gafferongames.com/post/why_cant_i_send_udp_packets_from_a_browser/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Why can&amp;rsquo;t I send UDP packets from a browser?&lt;/a&gt;: A solution for enabling UDP in the web&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/58668946&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-HTTP/3 都来了，你却还在用 HTTP/1.1？&lt;/a&gt;: 就在大家刚刚为了解了 HTTP/2 新特性而舒口气儿的时候，HTTP/3 却又紧锣密鼓地准备着了。今天就跟大家聊一聊这第三代 HTTP 技术。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>HTTPS-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/network/http/https-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/4.infrastructure/network/http/https-list/</guid>
      <description>&lt;h1 id=&#34;https-list&#34;&gt;HTTPS List&lt;/h1&gt;
&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.to/ruidfigueiredo/briefish-explanation-of-how-https-works&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Brief(ish) explanation of how https works&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://tls.ulfheim.net&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-The Illustrated TLS Connection&lt;/a&gt;: Every byte of a TLS connection explained and reproduced.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;internals&#34;&gt;Internals&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Transport_Layer_Security&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/Transport_Layer_Security&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/HTTPS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/HTTPS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/RSA_%28cryptosystem%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/RSA_(cryptosystem)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://foofish.net/https-symmetric.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTTPS 中的加密算法相关概念&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.keycdn.com/blog/https-performance-overhead/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https-performance-overhead&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;engineering-practices&#34;&gt;Engineering Practices&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/bdLtUPDykAMCb_TR0nOdpw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;大型网站 HTTPS 实践&lt;/a&gt;: 百度 HTTPS 性能优化涉及到大量内容，从前端页面、后端架构、协议特性、加密算法、流量调度、架构和运维、安全等方面都做了大量工作。本系列的文章将对此一一进行介绍。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/-6A3101iUkYF0lULaebH-g&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;聊聊 HTTPS 环境 DNS 优化：美图 App 请求耗时节约近半案例&lt;/a&gt;: 本文介绍美图 DNS 优化的实践，作者从原理到效果，整体讲解的非常全面，值得学习和借鉴。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
