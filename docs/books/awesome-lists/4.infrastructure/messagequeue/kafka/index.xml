<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kafka | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/messagequeue/kafka/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/4.infrastructure/messagequeue/kafka/index.xml" rel="self" type="application/rss+xml"/><description>Kafka</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Kafka</title><link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/messagequeue/kafka/</link></image><item><title>Kafka-List</title><link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/messagequeue/kafka/kafka-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/4.infrastructure/messagequeue/kafka/kafka-list/</guid><description>&lt;h1 id="kafka-list">Kafka List&lt;/h1>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://mp.weixin.qq.com/s/YFMFCijamQvz_O-MPv5yfA" target="_blank" rel="noopener">微信开源 PhxQueue 高可用、高可靠、高性能的分布式队列&lt;/a>: 本文对比了 Kafka 与 PhxQueue，讨论了 Kafka 的不足。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.jasongj.com/kafka/high_throughput/" target="_blank" rel="noopener">Kafka 设计解析(六)-Kafka 高性能架构之道&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.confluent.io/blog/apache-kafka-goes-1-0/" target="_blank" rel="noopener">2017-Apache Kafka Goes 1.0&lt;/a>: The feature set and the broad deployments all speak of a stable and Enterprise-ready product, which leads to an important step we are taking with this release: as of today, Apache Kafka is going 1.0!&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="resouces">Resouces&lt;/h1>
&lt;h2 id="collection">Collection&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/infoslack/awesome-kafka#books" target="_blank" rel="noopener">Awesome Kafka&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="series">Series&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://hackernoon.com/benchmarking-kafka-performance-part-1-write-throughput-7c7a76ab7db1" target="_blank" rel="noopener">Benchmarking Kafka Performance #Series#&lt;/a>：a series that explores Kafka performance on multiple public cloud providers. &lt;a href="https://hackernoon.com/benchmarking-kafka-performance-part-1-write-throughput-7c7a76ab7db1" target="_blank" rel="noopener">Part 1: Write Throughput&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="tutorial">Tutorial&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="http://www.cnblogs.com/smartloli/p/4543211.html" target="_blank" rel="noopener">Kafka 实战：简单实例&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="message-queue">Message Queue&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://softwaremill.com/using-kafka-as-a-message-queue/" target="_blank" rel="noopener">2017-Using Kafka as a message queue&lt;/a>: In this post I’d like to outline a possible implementation of a Kafka-based Message Queue.&lt;/li>
&lt;/ul>
&lt;h2 id="engineering-practices">Engineering Practices&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://parg.co/bJE" target="_blank" rel="noopener">2017-View Counting at Reddit&lt;/a>: Reddit’s data pipeline is primarily oriented around Apache Kafka. When a user views a post, an event gets fired and sent to an event collector server, which batches the events and persists them into Kafka.&lt;/li>
&lt;/ul>
&lt;h1 id="internals">Internals&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://zqhxuyuan1.gitbooks.io/kafka/content/chapter1-intro.html" target="_blank" rel="noopener">Kafka 源码分析&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.jasongj.com/2015/01/02/Kafka%e6%b7%b1%e5%ba%a6%e8%a7%a3%e6%9e%90/" target="_blank" rel="noopener">Kafka 深度解析&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Kafka-OpenSource-List</title><link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/messagequeue/kafka/kafka-opensource-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/4.infrastructure/messagequeue/kafka/kafka-opensource-list/</guid><description>&lt;h1 id="kafka-opensource-list">Kafka OpenSource List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/edenhill/kafkacat" target="_blank" rel="noopener">2016-kafkacat
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Generic command line non-JVM Apache Kafka producer and consumer.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/provectus/kafka-ui" target="_blank" rel="noopener">2021-Kafka UI
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: UI for Apache Kafka is a free, open-source web UI to monitor and manage Apache Kafka clusters.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/didi/KnowStreaming" target="_blank" rel="noopener">2022-KnowStreaming
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/didi/KnowStreaming" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Know Streaming 是一套云原生的 Kafka 管控平台，脱胎于众多互联网内部多年的 Kafka 运营实践经验，专注于 Kafka 运维管控、监控告警、资源治理、多活容灾等核心场景。在用户体验、监控、运维管控上进行了平台化、可视化、智能化的建设，提供一系列特色的功能，极大地方便了用户和运维人员的日常使用，让普通运维人员都能成为 Kafka 专家。&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>