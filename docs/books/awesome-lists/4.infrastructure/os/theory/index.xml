<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Theory | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/os/theory/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/4.infrastructure/os/theory/index.xml" rel="self" type="application/rss+xml" />
    <description>Theory</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>Theory</title>
      <link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/os/theory/</link>
    </image>
    
    <item>
      <title>OST-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/4.infrastructure/os/theory/ost-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/4.infrastructure/os/theory/ost-list/</guid>
      <description>&lt;h1 id=&#34;operating-system-list&#34;&gt;Operating System List&lt;/h1&gt;
&lt;h1 id=&#34;boot&#34;&gt;Boot&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/21672895/answer/774538058&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UEFI 引导与 BIOS 引导在原理上有什么区别？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;cpu&#34;&gt;CPU&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://t.cn/RH3DVKj&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Why Raspberry Pi Isn&amp;rsquo;t Vulnerable to Spectre or Meltdown&lt;/a&gt;: To help us understand why, here’s a little primer on some concepts in modern processor design.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/40571490/answer/746043817&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-CPU 的工作原理是什么？&lt;/a&gt;: 第一部分是补充背景知识的综述部分，我相信就算是外行耐下心来看也是可以读懂的；文章的第二部分深度会有增加。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;gpu&#34;&gt;GPU&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://parg.co/UiQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Interactive GPU Programming&lt;/a&gt;: I will explore major CUDA and OpenCL topics in detail.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;scheduler--调度&#34;&gt;Scheduler | 调度&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.tutorialspoint.com/operating_system/os_process_scheduling_algorithms.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;os_process_scheduling_algorithms&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.chinaunix.net/uid-25132162-id-361291.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2010-OS 中常用的调度算法总结&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;storage--存储&#34;&gt;Storage | 存储&lt;/h1&gt;
&lt;h1 id=&#34;scratch&#34;&gt;Scratch&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/326571508/answer/703388743&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-使用高级语言实现 POSIX 内核的成本和收益&lt;/a&gt;: 这篇论文旨在评估用有垃圾回收特性的高级语言去实现一个类 POSIX 内核的性价比。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/arjun024/mkeykernel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-mkeykernel 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: This is a kernel that can read the characters a-z and 0-9 from the keyboard and print them on screen.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
