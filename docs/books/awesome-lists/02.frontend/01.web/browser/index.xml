<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Browser | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/browser/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/browser/index.xml" rel="self" type="application/rss+xml" />
    <description>Browser</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>Browser</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/browser/</link>
    </image>
    
    <item>
      <title>Browser-Automation-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/browser/browser-automation-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/browser/browser-automation-list/</guid>
      <description>&lt;h1 id=&#34;browser-automation-list&#34;&gt;Browser Automation List&lt;/h1&gt;
&lt;p&gt;Browser Automation 即所谓的自动化浏览器或者能够以脚本等方式操作网页完成交互，即利用 Web Driver 或者所谓的 Headless Browser 等技术，可以进行后台的 JS 或者 CSS 脚本渲染，并完成一系列的包括数据分析、模拟操作等步骤。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dhamaniasad/HeadlessBrowsers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HeadlessBrowsers&lt;/a&gt;: 一个关于目前 Headless 浏览器的列表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/browserless/chrome&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;browserless/chrome 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/browserless/chrome&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: The browserless Chrome service in Docker. Run on our cloud, or bring your own.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;headless-chrome&#34;&gt;Headless Chrome&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/graphcool/chromeless&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;chromeless 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Chrome automation made simple. Runs locally or headless on AWS Lambda.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://intoli.com/blog/making-chrome-headless-undetectable/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Making Chrome Headless Undetectable&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/justinribeiro/chrome-headless/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Chrome Headless Docker&lt;/a&gt;: What was once a container using the experimental build of headless_shell from tip, this container now runs and exposes stable Chrome headless via google-chome &amp;ndash;headless.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/btk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Getting Started with Headless Chrome&lt;/a&gt;: Headless Chrome is shipping in Chrome 59. It&amp;rsquo;s a way to run the Chrome browser in a headless environment. Essentially, running Chrome without chrome! It brings all modern web platform features provided by Chromium and the Blink rendering engine to the command line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/btL&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Using headless Chrome as an automated screenshot tool&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;puppeteer&#34;&gt;Puppeteer&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/emadehsan/thal&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-THAL&lt;/a&gt;: Getting started with Puppeteer and Chrome Headless for Web Scraping.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/GoogleChrome/puppeteer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-GoogleChrome-Puppeteer 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Puppeteer is a Node library which provides a high-level API to control headless Chrome over the DevTools Protocol. It can also be configured to use full (non-headless) Chrome.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/US1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-A Guide to Automating &amp;amp; Scraping the Web with JavaScript (Chrome + Puppeteer + Node JS)&lt;/a&gt;: Learn to Automate and Scrape the web with Headless Chrome.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/GoogleChromeLabs/puppeteer-examples&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-puppeteer-examples 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Use case-driven examples for using Puppeteer and headless chrome&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;selenium&#34;&gt;Selenium&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://ovaraksin.blogspot.jp/2016/04/clean-architecture-of-selenium-tests.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;clean-architecture-of-selenium-tests&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://intoli.com/blog/firefox-extensions-with-selenium/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Using Firefox WebExtensions With Selenium&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;phantomjs&#34;&gt;PhantomJS&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/johntitus/node-horseman&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Horseman&lt;/a&gt;:Run PhantomJS from Node&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;jsdom&#34;&gt;JSDOM&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>Browser-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/browser/browser-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/browser/browser-list/</guid>
      <description>&lt;h1 id=&#34;browser-list--浏览器相关学习与资料索引&#34;&gt;Browser List | 浏览器相关学习与资料索引&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vasanthk/how-web-works&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How Web Works 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: What happens behind the scenes when we type &lt;a href=&#34;https://www.google.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.google.com&lt;/a&gt; in a browser?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://eylenburg.github.io/browser_engines.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-History of Web Browser Engines from 1990 until today&lt;/a&gt;:The loss of browser diversity since the rise of Chromium has been greatly lamented. Below you can find a graph that shows the historical and present browser engines (not browsers, but the HTML rendering engines), as well as from when to when they were developed. For the bigger engines, the market share is indicated by a coloured shape (see legend).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;browser-feature-detection--浏览器特征检测&#34;&gt;Browser Feature Detection | 浏览器特征检测&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tmallfe/tmallfe.github.io/issues/32&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;天猫双 11 前端分享系列(七)：如何精确识别终端&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://hacks.mozilla.org/2016/08/using-feature-queries-in-css/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Using Feature Queries in CSS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://juejin.im/post/5b17de31f265da6e397b70f4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-WWDC 中提到的浏览器 Fingerprinting 有多可怕？&lt;/a&gt;: 这个技术和指纹有什么关系，是用来做什么的，又有多值得普通用户担心呢？让我们从它的来龙去脉说起吧 :-)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;chrome&#34;&gt;Chrome&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/25380611&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;从 Chrome 源码看浏览器如何计算 CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;firefox&#34;&gt;Firefox&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bTa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Inside a super fast CSS engine: Quantum CSS (aka Stylo)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UGM&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-The whole web at maximum FPS: How WebRender gets rid of jank&lt;/a&gt;:WebRender is known for being extremely fast. But WebRender isn’t really about making rendering faster. It’s about making it smoother.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/U6v&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Entering the Quantum Era—How Firefox got fast again and where it’s going to get faster&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/U8j&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Making WebAssembly even faster: Firefox’s new streaming and tiering compiler&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;edge&#34;&gt;Edge&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blogs.windows.com/msedgedev/2017/04/19/modernizing-dom-tree-microsoft-edge/#gXbKkdM2Yl71P1jX.97&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Modernizing the DOM tree in Microsoft Edge&lt;/a&gt;: In this post, we’ll walk you through the history of the DOM in Internet Explorer and Microsoft Edge, and the impact of our recent work to modernize the DOM Tree, which is already resulting in substantially improved performance in the Windows 10 Creators Update.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blogs.windows.com/msedgedev/2017/04/20/improved-javascript-performance-webassembly-shared-memory/#aXYIbCB04QkDAmeQ.97&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Improved JavaScript performance, WebAssembly, and Shared Memory in Microsoft Edge&lt;/a&gt;: In this post, we’ll walk you through some new features coming to Chakra with the Windows 10 Creators Update that improve the day-to-day browsing experience in Microsoft Edge, as well as some new experimental features for developers: WebAssembly, and Shared Memory and Atomics.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Browser-OpenSource-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/browser/browser-opensource-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/browser/browser-opensource-list/</guid>
      <description>&lt;h1 id=&#34;browser&#34;&gt;Browser&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/browsh-org/browsh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;browsh 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A fully interactive, realtime, and modern text-based browser rendered to TTYs and browsers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dosyago/BrowserBox&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-BrowserBox 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/dosyago/BrowserBox&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Remote isolated browser API for security, automation visibility and interactivity. Run on our cloud, or bring your own. Full scope double reverse web proxy with multi-tab, mobile-ready browser UI frontend. Plus co-browsing, advanced adaptive streaming, secure document viewing and more! But only in the Pro version. Get BB today! Se…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;feature&#34;&gt;Feature&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/fex-team/ua-device&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fex-ua-device 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 由于在国内生产 PC 的厂家有限，大众用户使用的浏览器也主要是当前的一些主流浏览器。因此目前的 UA 解析库在对 OS、浏览器外壳、浏览器内核等的识别率都相当高。但是由于国内的移动设备的五花八门，对于移动设备的硬件信息是很难用一套通用的方法进行识别，因此 ua-device 诞生。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Modernizr/Modernizr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modernizr 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/viljamis/feature.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;feature.js 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ded/bowser&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bowser 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;automation&#34;&gt;Automation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/intoli/remote-browser&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Remote Browser 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A low-level browser automation framework built on top of the Web Extensions API standard.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/GoogleChrome/rendertron&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rendertron 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Rendertron is a dockerized, headless Chrome rendering solution designed to render &amp;amp; serialise web pages on the fly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/rendora/rendora&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rendora 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Rendora is a dynamic renderer to provide zero-configuration server-side rendering mainly to web crawlers in order to effortlessly improve SEO for websites.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/cowchimp/headless-devtools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;headless-devtools 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Lets you perform Chrome DevTools actions from code by leveraging Headless Chrome+Puppeteer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/syscolabs/kasaya&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-Kasaya 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A &amp;ldquo;WYSIWYG&amp;rdquo; scripting language and runtime for browser automation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/playwright&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-Playwright 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Playwright is a Node library to automate the Chromium, WebKit and Firefox browsers with a single API. It enables cross-browser web automation that is ever-green, capable, reliable and fast.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Chrome-Extension-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/browser/chrome-extension-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/browser/chrome-extension-list/</guid>
      <description>&lt;h1 id=&#34;browser-extension-list--浏览器扩展资料索引&#34;&gt;Browser Extension List | 浏览器扩展资料索引&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sitepoint.com/create-chrome-extension-10-minutes-flat/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-How to Create a Chrome Extension in 10 Minutes Flat&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.chrome.com/extensions/devguide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chrome Extension Developer&amp;rsquo;s Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.chrome.com/extensions/getstarted&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Getting Started: Building a Chrome Extension&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;chrome-extension&#34;&gt;Chrome Extension&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@thejungwon/best-html-css-javascript-practice-chrome-extension-ae4e5e7839e&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Best HTML, CSS, Javascript Practice: Chrome Extension&lt;/a&gt;: Then I realized that I had actually been using the best application that you can build using only HTML, CSS, and Javascript.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mattfrisbie.substack.com/p/spy-chrome-extension&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2023-Let&amp;rsquo;s build a Chrome extension that steals everything&lt;/a&gt;: Today&amp;rsquo;s adventure: DIY whole hog data exfiltration&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
