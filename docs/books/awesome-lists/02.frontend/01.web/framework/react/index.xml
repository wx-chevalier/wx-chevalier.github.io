<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/index.xml" rel="self" type="application/rss+xml" />
    <description>React</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>React</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/</link>
    </image>
    
    <item>
      <title>Next.js-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/next.js-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/next.js-list/</guid>
      <description>&lt;h1 id=&#34;next-list&#34;&gt;Next List&lt;/h1&gt;
&lt;h1 id=&#34;opensource&#34;&gt;OpenSource&lt;/h1&gt;
&lt;h2 id=&#34;showcase&#34;&gt;Showcase&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ixartz/Next-js-Boilerplate&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Boilerplate and Starter for Next JS 12+, Tailwind CSS 2.0 and TypeScript Twitter&lt;/a&gt;: üöÄ Boilerplate and Starter for Next.js 12+, Tailwind CSS 2.0 and TypeScript ‚ö°Ô∏è Made with developer experience first: Next.js + TypeScript + ESLint + Prettier + Husky + Lint-Staged + VSCode + Netlify + PostCSS + Tailwind CSS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/shadcn/taxonomy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;taxonomy 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: An open source application built using the new router, server components and everything new in Next.js 13.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/steven-tey/precedent&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-Precedent 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/steven-tey/precedent&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Precedent is an opinionated collection of components, hooks, and utilities for your Next.js project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/AntonioErdeljac/next13-messenger&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2023-next13-messenger 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/AntonioErdeljac/next13-messenger&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: This is a repository for a Real-Time Messenger Clone: Next.js 13, React, Tailwind, Prisma, MongoDB, NextAuth, Pusher.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/steven-tey/dub&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2023-dub 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/steven-tey/dub&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: An open-source link shortener with built-in analytics + free custom domains.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Blazity/next-enterprise&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2023-Next.js Enterprise Boilerplate 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/Blazity/next-enterprise&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Welcome to the Next.js Enterprise Boilerplate, an open-source template for enterprise projects! It&amp;rsquo;s loaded with features that&amp;rsquo;ll help you build a high-performance, maintainable, and enjoyable app. We&amp;rsquo;ve done all the heavy lifting for you, so sit back, relax, and get ready to conquer the world with your incredible app! üåç&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>React-DesignPattern-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/react-designpattern-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/react-designpattern-list/</guid>
      <description>&lt;h1 id=&#34;react-pattern-list&#34;&gt;React Pattern List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.alloyteam.com/2016/01/reactjs-best-practices-for-2016/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Êù•Ëá™ AlloyTeam ÁöÑ React.js 2016 ÊúÄ‰Ω≥ÂÆûË∑µ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;architecture-pattern--Êû∂ÊûÑÊ®°Âºè&#34;&gt;Architecture Pattern | Êû∂ÊûÑÊ®°Âºè&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://reactpatterns.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-React Patterns&lt;/a&gt;: Patterns for React Developers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://hackernoon.com/10-react-mini-patterns-c1da92f068c5#.5v2hpgurn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-10 React mini-patterns&lt;/a&gt;: Over the last few years, I‚Äôve worked on a handful of decent-sized React projects, and many, many pint-sized ones. Throughout this magical journey, a number of patterns have come up that I find myself repeating again and again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UXm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Evolving Patterns in React&lt;/a&gt;: Let‚Äôs take a closer look at some of the patterns that are emerging in the React ecosystem. These patterns improve readability, code clarity, and push your code towards composition and reusability.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;functional-react--ÂáΩÊï∞Âºè-react&#34;&gt;Functional React | ÂáΩÊï∞Âºè React&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bMW&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Functional setState is the future of React&lt;/a&gt;: Declare state changes separately from the component classes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@arqex/non-functional-react-js-6e020ce27ee2#.cj3dcxl4j&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;non-functional-react-js&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@adamterlson/functional-react-series-part-1-get-your-app-outta-my-component-92656ae13e25#.q47pt8fga&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Functional React Series ‚Äî Part 1: Get your App outta my Component&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UEv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rendering a function with React&lt;/a&gt;: How I tricked React into rendering a function (not call it‚Ä¶ render it)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@learnreact/container-components-c0e67432e005#.h775w7ifn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Container Components&lt;/a&gt;: One React pattern that‚Äôs had the impact on my code is the container component pattern.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0#.uz8irdipq&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Presentational and Container Components&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hocs--È´òÈò∂ÁªÑ‰ª∂&#34;&gt;HOCs | È´òÈò∂ÁªÑ‰ª∂&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://natpryce.com/articles/000814.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Higher Order React Components&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/MUHBdp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Higher-Order Components in React&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://hackernoon.com/why-you-should-keep-your-react-components-pure-by-using-hocs-67e5c7f80c81&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Why you should keep your react components pure by using HOCs&lt;/a&gt;: In this article I show how decomposing state from the presentational layer can both reduce complexity and promote code re-use with some React examples‚Äî a win-win situation helping to tame the challenges of developing SPAs. Although I‚Äôm using React, the lessons are universal and can apply to any framework.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/biZ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Understanding Higher Order Components&lt;/a&gt;: Making sense of the rapidly changing React best practice.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@franleplant/react-higher-order-components-in-depth-cf9032ee6c3e#.52i6nt3at&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Higher Order Components in depth&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://hackernoon.com/code-reuse-using-higher-order-hoc-and-stateless-functional-components-in-react-and-react-native-6eeb503c665#.4z4q9o6k2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Share Code between React and React Apps using Higher Order Components&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://kyleshevlin.com/renderless-components/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Renderless Components or How Logic Doesn&amp;rsquo;t Always Need a UI&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/deepsweet/hocs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-hocs 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A collection of Higher-Order Components for React and React Native.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;recompose&#34;&gt;Recompose&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/front-end-developers/building-hocs-with-recompose-7debb951d101&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Building HOCs with Recompose&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/javascript-inside/why-the-hipsters-recompose-everything-23ac08748198&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Why The Hipsters Recompose Everything&lt;/a&gt;: Building a Utility Library for React&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://egghead.io/courses/higher-order-components-with-functional-patterns-using-recompose&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Higher Order Components with Functional Patterns Using Recompose&lt;/a&gt;: In this course, you will learn to use many of the most powerful and convenient higher-order components within Recompose by coding several real-world examples. Using recompose looks very different from ‚Äúvanilla‚Äù React; so you will also get comfortable with the look and feel of a ‚Äúrecomposed‚Äù component. The best part is no more need for class components! You‚Äôll learn how to use Recompose to both modify components and also create your own higher-order components.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bJV&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Top 5 Recompose HOCs&lt;/a&gt;: Today we‚Äôll be going through my 5 (in no particular order) favorite Recompose Higher Order Components.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;render-props&#34;&gt;Render Props&lt;/h2&gt;
&lt;h1 id=&#34;style-guide--Ê†∑ÂºèÈ£éÊ†º&#34;&gt;Style Guide | Ê†∑ÂºèÈ£éÊ†º&lt;/h1&gt;
&lt;h2 id=&#34;code-style--‰ª£Á†ÅÈ£éÊ†º&#34;&gt;Code Style | ‰ª£Á†ÅÈ£éÊ†º&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/code-life/our-best-practices-for-writing-react-components-dec3eb5c3fc8#.mh12fzmoi&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Our Best Practices for Writing React Components&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/beQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Avoiding deeply nested component trees&lt;/a&gt;: By passing child components down instead of data you can avoid passing data down through many levels of components.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/Um6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-8 Key React Component Decisions&lt;/a&gt;: Standardize your React development with these key decisions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/USj&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-How to structure components in React?&lt;/a&gt;: Structuring system is the hardest thing and it has a big impact on the overall project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bD4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Characteristics of an Ideal React Architecture&lt;/a&gt;: React is only the View; in essence: a thin view library with unidirectional data bindings and its own internal component life-cycle.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://overreacted.io/writing-resilient-components/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-Writing Resilient Components&lt;/a&gt;: There are important design principles that every component should strive to follow. But I don‚Äôt think style guides capture those principles well. We‚Äôll talk about style guides first, and then look at the principles that really are useful.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;code-organization--‰ª£Á†ÅÁªÑÁªá&#34;&gt;Code Organization | ‰ª£Á†ÅÁªÑÁªá&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://parg.co/UII&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-How to better organize your React applications?&lt;/a&gt;: I decided to spend some time to figure out what could be the best way to organize my future React projects.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>React-Internals-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/react-internals-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/react-internals-list/</guid>
      <description>&lt;h1 id=&#34;react-internals-list--react-ÂÜÖÈÉ®ÂéüÁêÜËß£Êûê&#34;&gt;React Internals List | React ÂÜÖÈÉ®ÂéüÁêÜËß£Êûê&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.mattgreer.org/articles/react-internals-part-one-basic-rendering/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React Internals&lt;/a&gt;: In this five part series, we will ‚Äúrecreate‚Äù React from the ground up, learning how it works along the way. Once we‚Äôve finished, you should have a good grasp of how React works, and when and why it calls the various lifecycle methods of a component.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://overreacted.io/react-as-a-ui-runtime/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-React as a UI Runtime&lt;/a&gt;: This is a deep dive ‚Äî THIS IS NOT a beginner-friendly post. In this post, I‚Äôm describing most of the React programming model from first principles. I don‚Äôt explain how to use it ‚Äî just how it works.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/20328570?refer=purerender&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Ê∫êÁ†ÅÂâñÊûêÁ≥ªÂàó Ôºç Ëß£ÂØÜ setState&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.jianshu.com/p/2d50a413e74a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;‰∏∫‰ªÄ‰πà setState Ê≤°ÊúâÁ´ãÂç≥ÊâßË°å&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.jianshu.com/p/47f24add2b5e&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ÊãÜËß£ setState[‰∏Ä][‰∏ÄÊ∫êÁúã‰∏ñÁïå][‰πã React]&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;virtual-dom&#34;&gt;Virtual DOM&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://calendar.perfplanet.com/2013/diff/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2013-Performance Calendar: React‚Äôs diff algorithm&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.tencent.com/community/article/654179001489391651?fromSource=gwzcw.114428.114428.114428&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-react diff ÂéüÁêÜ&lt;/a&gt;ÔºöReact diff ‰Ωú‰∏∫ Virtual DOM ÁöÑÂä†ÈÄüÂô®ÔºåÂÖ∂ÁÆóÊ≥ï‰∏äÁöÑÊîπËøõ‰ºòÂåñÊòØ React Êï¥‰∏™ÁïåÈù¢Ê∏≤ÊüìÁöÑÂü∫Á°ÄÔºå‰ª•ÂèäÊÄßËÉΩÊèêÈ´òÁöÑ‰øùÈöúÔºåÂêåÊó∂‰πüÊòØ React Ê∫êÁ†Å‰∏≠ÊúÄÁ•ûÁßò„ÄÅÊúÄ‰∏çÂèØÊÄùËÆÆÁöÑÈÉ®ÂàÜÔºåÊú¨ÊñáÂ∞ÜÂâñÊûê React diff ÁöÑ‰∏çÂèØÊÄùËÆÆ‰πãÂ§Ñ„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/20346379?refer=purerender&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Ê∫êÁ†ÅÂâñÊûêÁ≥ªÂàóÔºå‰∏çÂèØÊÄùËÆÆÁöÑ react diff&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/20328570?refer=purerender&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Ê∫êÁ†ÅÂâñÊûêÁ≥ªÂàó Ôºç Ëß£ÂØÜ setState&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.infoq.com/cn/articles/react-dom-diff&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ê∑±ÂÖ•ÊµÖÂá∫ React(Âõõ)ÔºöËôöÊãü DOM Diff ÁÆóÊ≥ïËß£Êûê&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.oyecode.com/2015/09/reactjs-learning-virtual-dom-and-react.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ReactJS | Learning Virtual DOM and React Diff Algorithm&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://62f7d6c2.fromwiz.com/share/s/1yZZr21Yv4w42GorJm0oBXEi3AKTQa3rcARz2nKoQ71RpX_Z&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;So-You-Want-To-Be-A-Functional-Programmer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://calendar.perfplanet.com/2013/diff/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React‚Äôs diff algorithm&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Matt-Esch/virtual-dom&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;virtual-dom&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://fluentconf.com/fluent2014/public/schedule/detail/32395&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Secrets of React‚Äôs virtual DOM&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/21109361/why-is-reacts-concept-of-virtual-dom-said-to-be-more-performant-than-dirty-mode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Why is React‚Äôs concept of virtual DOM said to be moreperformant than dirty model checking?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;component-system--ÁªÑ‰ª∂Á≥ªÁªü&#34;&gt;Component System | ÁªÑ‰ª∂Á≥ªÁªü&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://parg.co/UDq&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The React and React Native Event System Explained: A Harmonious Coexistence&lt;/a&gt;: You‚Äôre using it. You‚Äôre liking it. But did you know what React‚Äôs event handler is doing under the hood?&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;stack-reconciler&#34;&gt;Stack Reconciler&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/Uid&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-RFClarification: why is &lt;code&gt;setState&lt;/code&gt; asynchronous?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/ajhsu/e259392f06aa8e3bf5c9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dive into setState() method in React&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://reactkungfu.com/2016/03/dive-into-react-codebase-handling-state-changes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dive into React codebase: Handling state changes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lukebelliveau/react-reconciler-demo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-react-reconciler-demo 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; &lt;/a&gt;: A simple implementation of React&amp;rsquo;s stack reconciler. This is much different from the real implementation, but demonstrates the concepts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://thereignn.ghost.io/on-the-async-nature-of-setstate-in-react/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ON THE ASYNC NATURE OF &lt;code&gt;SETSTATE&lt;/code&gt; IN REACT&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;fiber&#34;&gt;Fiber&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/koba04/react-fiber-resources&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React Fiber resources üóÉÔ∏è&lt;/a&gt;: This is for resources for React Fiber.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://makersden.io/blog/look-inside-fiber/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-A look inside React Fiber - how work will get done.&lt;/a&gt;: This post will go outside-in - starting from calling the render function in client JS and changing state of a component, down to describing the steps taken by Fiber to do all the work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/acdlite/react-fiber-architecture&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React Fiber Architecture&lt;/a&gt;: A description of React&amp;rsquo;s new core algorithm, React Fiber.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bgb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React ÁöÑÊñ∞ÂºïÊìé ‚Äî React Fiber ÊòØ‰ªÄ‰πàÔºü&lt;/a&gt;ÔºöÁ®çÊúâÁªèÈ™åÁöÑÂâçÁ´ØÂ∑•Á®ãÂ∏à‰ºöÁü•ÈÅìÔºåÈ°µÈù¢ÁöÑ DOM ÊîπÂèòÔºåÂ∞±‰ºöÂØºËá¥È°µÈù¢ÈáçÊñ∞ËÆ°ÁÆó DOMÔºåËøõË°åÈáçÁªòÊàñËÄÖÈáçÊéíÔºåDOM ÁªìÊûÑÂ§çÊùÇÊàñËÄÖÈ¢ëÁπÅÊìç‰Ωú DOM ÈÄöÂ∏∏ÊòØÊÄßËÉΩÁì∂È¢à‰∫ßÁîüÁöÑÂéüÂõ†„ÄÇËÄåÁΩëÁ´ô‰ªéÊúÄÂºÄÂßãÊØîËæÉÁÆÄÂçïÔºåÂºÄÂßãÂèòÁöÑË∂äÊù•Ë∂äÂ§çÊùÇÔºåÁî®Êà∑‰∫§‰∫í‰πü‰ºöË∂äÊù•Ë∂äÂ§öÔºåÊÄé‰πàÂéªÂáèËΩª DOM Êìç‰ΩúÂ∏¶Êù•ÁöÑÊÄßËÉΩÊçüËÄóÂ∞±ÂèòÂæóÈáçË¶ÅËµ∑Êù•„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/26027085&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React Fiber ÊòØ‰ªÄ‰πà&lt;/a&gt;ÔºöReact Fiber Ëøô‰∏™Â§ßÊîπÂèò Facebook Â∑≤ÁªèÊäòËÖæ‰∏§Âπ¥Â§ö‰∫ÜÔºåÂàöÂàöÁªìÊùü‰∏ç‰πÖÁöÑ React Conf 2017 ‰ºöËÆÆ‰∏äÔºåFacebook Áªà‰∫éÁ°ÆËÆ§ÔºåReact Fiber ‰ºöÊê≠‰∏ä React ‰∏ã‰∏Ä‰∏™Â§ßÁâàÊú¨ v16 ÁöÑÈ°∫È£éËΩ¶ÂèëÂ∏É„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/btw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React Êñ∞ÂºïÊìé React Fiber Á©∂Á´üË¶ÅËß£ÂÜ≥‰ªÄ‰πàÈóÆÈ¢òÔºü&lt;/a&gt;: Facebook Ê≠£Âú®‰ª•ÊµÅË°åÁöÑ JavaScript Ê°ÜÊû∂ React ‰∏∫Âü∫Á°ÄÂºÄÂèë‰∏Ä‰∏™ÂÖ®Êñ∞ÁöÑÊû∂ÊûÑ„ÄÇËøô‰∏™Âêç‰∏∫ React Fiber ÁöÑÂÖ®Êñ∞ËÆæËÆ°ÊîπÂèò‰∫ÜÊ£ÄÊµãÂèòÊõ¥ÁöÑÊñπÊ≥ïÂíåÊó∂Êú∫ÔºåÂÄüÊ≠§ÂèØÊîπËøõÊµèËßàÂô®Á´ØÂíåÂÖ∂‰ªñÊ∏≤ÊüìËÆæÂ§áÁöÑÂìçÂ∫îÈÄüÂ∫¶„ÄÇËøô‰∏Ä ÂÖ®Êñ∞Êû∂ÊûÑ ÊúÄÂàùÂ∑≤‰∫é 2016 Âπ¥ 7 ÊúàÂÖ¨ÂºÄÂèëÂ∏ÉÔºåÂÖ∂‰∏≠Ëï¥Âê´ÁùÄËøáÂéªÂ§öÂπ¥Êù• Facebook ‰∏çÊñ≠ÊîπËøõÁöÑÂ∑•‰ΩúÊàêÊûú„ÄÇËØ•Êû∂ÊûÑÂèØÂêëÂêéÂÖºÂÆπÔºåÂΩªÂ∫ïÈáçÂÜô‰∫Ü React ÁöÑÂçèË∞É(Reconciliation )ÁÆóÊ≥ï„ÄÇËØ•ËøáÁ®ãÂèØÁî®‰∫éÁ°ÆÂÆöÂá∫Áé∞ÂèòÊõ¥ÁöÑÂÖ∑‰ΩìÊó∂Èó¥ÔºåÂπ∂Â∞ÜÂèòÊõ¥‰º†ÈÄíÁªôÊ∏≤ÊüìÂô®„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ZCuYPiUIONs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React Conf: A Cartoon Intro to Fiber&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/acdlite/react-fiber-architecture&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;react-fiber-architecture&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UW5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Didact Fiber: Incremental reconciliation&lt;/a&gt;: In this post we are going to rewrite most of the code from the didact series to follow React 16 new architecture.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;async-rendering&#34;&gt;Async Rendering&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://auth0.com/blog/time-slice-suspense-react16/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Beyond React 16: Time Slicing and Suspense API&lt;/a&gt;: Learn what&amp;rsquo;s coming to ReactJS. Get a sneak peek of the powerful features that will grace ReactJS soon.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blogg.svt.se/svti/react-suspense-server-rendering/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-React suspense and server rendering&lt;/a&gt;: The recently revealed React suspense functionality has the potential to solve a lot of the current pain points in server rendering.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@baphemot/understanding-react-suspense-1c73b4b0b1e6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Understanding React ‚ÄúSuspense‚Äù&lt;/a&gt;: In short: the new feature allows you to defer rendering part of your application tree until some condition is met (for example data from an endpoint or a resource is loaded).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.to/swyx/a-walkthrough-of-that-react-suspense-demo--4j6a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-A Walkthrough of &lt;em&gt;that&lt;/em&gt; React Suspense Demo&lt;/a&gt;:I&amp;rsquo;m a recent bootcamp grad. You&amp;rsquo;re not reading the divinings of some thought leader here. I&amp;rsquo;m just some guy learning in public.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>React-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/react-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/react-list/</guid>
      <description>&lt;h1 id=&#34;awesome-react-lists&#34;&gt;Awesome React Lists&lt;/h1&gt;
&lt;p&gt;This file aggregates curated popular links for learning &lt;a href=&#34;https://github.com/wx-chevalier/Awesome-Lists/blob/master/Web/Framework/React&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React, Syntax, DevOps, Production Tips, Internals, OpenSource&lt;/a&gt;, etc. More reference about ITCS can turn to &lt;a href=&#34;https://github.com/wx-chevalier/Awesome-Lists&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Awesome Links: Guide to Galaxy&lt;/a&gt;, which collects valuable, popular and up-to-date links for CS, including Programming Language, Software Engineering, Server Side Application, Infrastructure, InfoSecurity, Industrial Application, DataScienceAI, Frontend Technology(iOS, Android, RN, Electron), etc.&lt;/p&gt;
&lt;p&gt;Source files are hosted in &lt;a href=&#34;https://github.com/wx-chevalier/Awesome-Lists/blob/master/Web/Framework/React&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github&lt;/a&gt;, PRs Welcome.&lt;/p&gt;
&lt;p&gt;Â¶ÇÊûúÊÉ≥‰∫ÜËß£Êõ¥Â§öÂÖ≥‰∫é Redux„ÄÅMobX Á≠âÁõ∏ÂÖ≥ÁîüÊÄÅÁ≥ªÁªüÁöÑËµÑÊñôÔºåÂêåÊ†∑ÂèØ‰ª•Êü•Áúã &lt;a href=&#34;&#34;&gt;Awesome Lists&lt;/a&gt; ‰∏≠ÁöÑ &lt;a href=&#34;https://parg.co/Yds&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Redux Links&lt;/a&gt; ‰∏é &lt;a href=&#34;https://github.com/wx-chevalier/Awesome-Lists/blob/master/Web/Framework/MobX/MobX-List.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MobX Links&lt;/a&gt; Á≠âÂÜÖÂÆπ„ÄÇ&lt;/p&gt;
&lt;h1 id=&#34;overview--Ê¶ÇËø∞&#34;&gt;Overview | Ê¶ÇËø∞&lt;/h1&gt;
&lt;h2 id=&#34;book&#34;&gt;Book&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.gitbook.com/book/developmentarc/react-indepth/details&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-„ÄäReact In-depth: An exploration of UI development„Äãüìö&lt;/a&gt;:Our goal with this GitBook is to document our process, share our research and try to organize our experiences into a single living document. Too be honest, this is a pretty lofty goal. We may not achieve this goal, but hopefully we can get some helpful thoughts down.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/survivejs/react-book&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-„ÄäSurviveJS - React„Äãüìö&lt;/a&gt;: This book shows you how to build a little Kanban application using React. During the process you will learn the basics and will be able to take the skills to your own projects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vasanthk/react-bits&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-„ÄäReact Bits„Äãüìö&lt;/a&gt;: A compilation of React Patterns, techniques, tips and tricks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.safaribooksonline.com/library/view/learning-react-1st/9781491954614/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-„ÄäLearning React„Äã-1st üìö&lt;/a&gt;: If you want to learn how to build efficient user interfaces with React, this is your book. Authors Alex Banks and Eve Porcello show you how to create UIs with this small JavaScript library that can deftly display data changes on large-scale, data-driven websites without page reloads. Along the way, you‚Äôll learn how to work with functional programming and the latest ECMAScript features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.safaribooksonline.com/library/view/mastering-full-stack-react/9781786461766/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-„ÄäMastering Full-Stack React Web Development„Äãüìö&lt;/a&gt;: Learn how to create dynamic full-stack applications with ReactJS and other leading JavaScript tools ‚Äì smarter web development starts here.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.safaribooksonline.com/library/view/react-design-patterns/9781786464538/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-„ÄäReact Design Patterns and Best Practices„Äãüìö&lt;/a&gt;: Build modular applications that are easy to scale using the most powerful components and design patterns that React can offer you right now About This Book.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dabbott/react-express&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-„ÄäReact Express #Series#&lt;/a&gt;: The all-in-one beginner&amp;rsquo;s guide to modern React application development!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/beh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-„ÄäReact and React Native„Äãüìö&lt;/a&gt;: Use React and React Native to build applications for desktop browsers, mobile browsers, and even as native mobile apps.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://legacy.gitbook.com/book/krasimir/react-in-patterns/details&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-„ÄäReact in patterns„Äãüìö&lt;/a&gt;: A book about common design patterns used while developing with React. It includes techniques for composition, data flow, dependency management and more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kay-is/react-from-zero&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-„ÄäReact From Zero„Äãüìö&lt;/a&gt;: Everything runs in the browser without a manual pre-compilation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/softchris/react-book&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-„Ääreact-book„Äãüìö&lt;/a&gt;: Free book on React. Beginner to intermediate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/7kms/react-illustration-series&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-„ÄäÂõæËß£ React Ê∫êÁ†Å„Äãüìö 
















  &lt;img src=&#34;https://img.shields.io/github/stars/7kms/react-illustration-series&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: react Ê∫êÁ†Å, Âü∫‰∫éreact@17.0.2(Â∞ΩÂèØËÉΩË∑üÈöè react ÁâàÊú¨ÁöÑÂçáÁ∫ß, ÊåÅÁª≠Êõ¥Êñ∞). Áî®Â§ßÈáèÈÖçÂõæÁöÑÊñπÂºè, Ëá¥Âäõ‰∫éÂ∞Ü react ÂéüÁêÜË°®Ëø∞Ê∏ÖÊ•ö.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;concept--Ê¶ÇÂøµÈòêËø∞&#34;&gt;Concept | Ê¶ÇÂøµÈòêËø∞&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://jlongster.com/Removing-User-Interface-Complexity,-or-Why-React-is-Awesome&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2014-Removing User Interface Complexity,or Why React is Awesome&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://facebook.github.io/react/docs/thinking-in-react.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Thinking in React&lt;/a&gt;: One of the many great parts of React is how it makes you think about apps as you build them. In this document, we&amp;rsquo;ll walk you through the thought process of building a searchable product data table using React.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://tylermcginnis.com/react-aha-moments/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-React &amp;ldquo;Aha&amp;rdquo; Moments&lt;/a&gt;: So what I want to do in this post is share my collection of these moments while also adding my thoughts on some of the moments shared in that Reddit thread.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bNg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Things nobody will tell you about React.js&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000013365426&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-React ÊòØÊÄéÊ†∑ÁÇºÊàêÁöÑ&lt;/a&gt;: Êú¨Êñá‰∏ªË¶ÅËÆ≤Ëø∞ React ÁöÑËØûÁîüËøáÁ®ãÂíå‰ºòÂåñÊÄùË∑Ø„ÄÇÂÜÖÂÆπÊï¥ÁêÜËá™ 2014 Âπ¥ÁöÑ OSCON - React Architecture by vjeuxÔºåËôΩÁÑ∂‰ªé‰ªäÂ§©(2018)Êù•ÁúãÂèØËÉΩ‰ºöÊúâÁÇπÂéÜÂè≤ÊÑüÔºå‰ΩÜ‰ªçÁÑ∂ÂÄºÂæóÂ≠¶‰π†‰∫ÜËß£„ÄÇ‰ª•Âè≤‰∏∫Èâ¥Ôºå‰ªé‰∏≠‰πüÂèØ‰ª•ÁÆ°Á™• Facebook ‰ºòÁßÄÁöÑÂ∑•Á®ãÁÆ°ÁêÜÊñáÂåñ„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cubox.pro/c/Sdae7d&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-Â±ïÊúõ React 17ÔºåÂõûÈ°æ React ÂæÄ‰∫ã&lt;/a&gt;: ÂõûÂà∞ React 16 ÁöÑËØùÈ¢ò„ÄÇË¶ÅËÆ®ËÆ∫Êú™Êù•ÔºàReact 17ÔºâÔºåÂøÖÈ°ªË¶Å‰∫ÜËß£ËøáÂéª„ÄÇ‰ª• React 16 ‰∏∫ÂàÜÊ∞¥Â≤≠ÔºåÊàë‰ª¨ÂèØ‰ª•ÂàÜ‰∏∫‰∏§ÊñπÈù¢Êù•ÁúãËøô‰∏™ÈóÆÈ¢ò„ÄÇ‰∏ÄÊòØ‰∏∫‰ªÄ‰πà„ÄÅ ‰∫åÊòØÊÄé‰πàÂäû„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ecosystem--ÁîüÊÄÅÂúà&#34;&gt;Ecosystem | ÁîüÊÄÅÂúà&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://patternhatch.com/2016/07/06/a-primer-on-the-react-ecosystem-part-1-of-3/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-A Primer on the React Ecosystem Serials&lt;/a&gt;: I thought I‚Äôd share what I‚Äôve learned so far through a primer. Over three parts, I‚Äôm going to show you how to set up an environment for React app development, create React components and have them respond to data changes, manage app state with Redux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/26270621&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Êè≠Áßò React ÁîüÊÄÅ‰ΩìÁ≥ª&lt;/a&gt;: React ÂèØ‰ª•ËØ¥ÊòØÁõÆÂâç‰∏∫Ê≠¢ÊúÄÁÉ≠Èó®ÔºåÁîüÊÄÅÊúÄÂÆåÂñÑÔºåÂ∫îÁî®ËåÉÂõ¥ÊúÄÂπøÁöÑÂâçÁ´ØÊ°ÜÊû∂„ÄÇReact ÁªìÂêàÂÆÉÁöÑÊï¥‰∏™ÁîüÊÄÅÔºåÂÆÉÂèØ‰ª•Ê®™Ë∑® web Á´ØÔºåÁßªÂä®Á´ØÔºåÊúçÂä°Âô®Á´ØÔºå‰πÉËá≥ VR È¢ÜÂüü„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;case-study--Ê°à‰æãÂàÜÊûê&#34;&gt;Case Study | Ê°à‰æãÂàÜÊûê&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/2mS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Moving Airbnb Search to React&lt;/a&gt;: Using experiments to tackle a large refactor with confidence&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.infoq.com/news/2018/05/medium-reactjs-graphql-migration&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Migrating Medium to React.js and GraphQL&lt;/a&gt;: making the new system incrementally available to users while not hindering development of new features.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;resource--ËµÑÊ∫ê&#34;&gt;Resource | ËµÑÊ∫ê&lt;/h1&gt;
&lt;h2 id=&#34;blog--ÂçöÂÆ¢&#34;&gt;Blog | ÂçöÂÆ¢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://overreacted.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Overreacted #Blog#&lt;/a&gt;: Blog by Dan Abramov.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;course--conf--ËØæÁ®ã‰∏é‰ºöËÆÆ&#34;&gt;Course &amp;amp; Conf | ËØæÁ®ã‰∏é‰ºöËÆÆ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://conf.reactjs.org/livestream&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017 React Â§ß‰ºö&lt;/a&gt;Ôºö2017 Âπ¥ React Conf ‰∫é 3 Êúà 13 Êó•„ÄÅ14 Êó•ÊàêÂäü‰∏æÂäûÔºå‰ºö‰∏äÊù•Ëá™‰∏ñÁïåÂêÑÂú∞ÁöÑÂºÄÂèëËÄÖÂ∞± React Fiber„ÄÅFlow„ÄÅPerformance„ÄÅReact Native Á≠âÂ§ö‰∏™‰∏ªÈ¢òÂèëË°®‰∫ÜÊºîËØ¥‰∏éËÆ®ËÆ∫ÔºåÊé®ËçêÈÄâÊã©Ëá™Â∑±ÂñúÊ¨¢ÁöÑÊºîËÆ≤ËßÜÈ¢ëËßÇÁúã„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/learncodeacademy/react-js-tutorials&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-learncodeacademy/react-js-tutorials&lt;/a&gt;: Code that goes along with my YouTube React JS Series.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/supnate/react-geek-time&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-React ‰ªéÂÖ•Èó®Âà∞Á≤æÈÄö üé•&lt;/a&gt;: ÊûÅÂÆ¢Êó∂Èó¥ÔºöReact ‰ªéÂÖ•Èó®Âà∞Á≤æÈÄö„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Asabeneh/30-Days-Of-React&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-30 Days of React üé•&lt;/a&gt;: 30 Days of React challenge is a step by step guide to learn React in 30 days. This challenge needs an intermediate level of HTML, CSS, and JavaScript knowledge. It is recommended to feel good at JavaScript before you start to React. If you are not comfortable with JavaScript check out 30DaysOfJavaScript. This is a continuation of 30 Days Of Java‚Ä¶&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wesbos/Advanced-React&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-Advanced-React üé•&lt;/a&gt;: Starter Files and Solutions for Full Stack Advanced React and GraphQL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kentcdodds/react-fundamentals&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-react-fundamentals 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/kentcdodds/react-fundamentals&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Learn everything you need to be effective with the fundamental building block of React applications. When you&amp;rsquo;re finished, you&amp;rsquo;ll be prepared to create React components to build excellent experiences for your app&amp;rsquo;s users.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jonasschmedtmann/ultimate-react-course&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2023-ultimate-react-course üé•&lt;/a&gt;: Starter files, final projects, and FAQ for my Ultimate React course&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;collection--ÈõÜÂêà&#34;&gt;Collection | ÈõÜÂêà&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/enaqx/awesome-react&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Awesome-React üóÉÔ∏è&lt;/a&gt;: A collection of awesome things regarding React ecosystem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/markerikson/react-redux-links&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React/ReduxList üóÉÔ∏è&lt;/a&gt;: Curated tutorial and resource links I&amp;rsquo;ve collected on React, Redux, ES6, and more&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@royisch/using-forms-in-react-redux-tips-and-tricks-48ad9c7522f6#.krt2lrdhw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Using forms in React-Redux: Tips And Tricks üóÉÔ∏è&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;series&#34;&gt;Series&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Bogdan-Lyashenko/Under-the-hood-ReactJS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Under the hood ReactJS #Series#&lt;/a&gt;: Entire ReactJS code base explanation by visual block schemes (Stack+Fiber versions)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Big-React #Series#&lt;/a&gt;: Ë∑üÁùÄÊàëÔºå‰ªé 0 ÂÆûÁé∞ React18„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tutorial--ÊïôÁ®ã&#34;&gt;Tutorial | ÊïôÁ®ã&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bhf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Learning React with Create-React-App #Series#&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/petehunt/react-howto&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-React Howto&lt;/a&gt;: Throughout this document, I‚Äôll assume you‚Äôve built a web page with HTML, CSS and JavaScript.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@samerbuna/why-react-developers-love-node-83f6053d68&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Why React Developers LOVE Node&lt;/a&gt;: Some people mistakenly assume that Node is required in order to use React.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bCx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Simple React Development in 2017&lt;/a&gt;: The goal of this guide is to showcase how easy it can be to start modern React development.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bzp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-All the fundamental React.js concepts, jammed into this single Medium article&lt;/a&gt;: This article is not going to cover what React is or why you should learn it. Instead, this is a practical introduction to the fundamentals of React.js for those who are already familiar with JavaScript and know the basics of the DOM API.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/Uv3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Rock Solid React.js Foundations: A Beginner‚Äôs Guide&lt;/a&gt;: this post is aimed towards the audience who is looking for a perfect mix of theory and hands-on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.freecodecamp.org/a-comprehensive-guide-to-react-js-in-2018-ba8bb6975597&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-A Comprehensive Guide to React.js in 2018&lt;/a&gt;: This article was originally published in January of 2015, but was recently updated to React 16.3 and all the goodness it contains.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/adam-golab/react-developer-roadmap&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-React Developer Roadmap&lt;/a&gt;: Below you can find a chart demonstrating the paths that you can take and the libraries that you would want to learn in order to become a React developer.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://hackernoon.com/a-react-todos-example-explained-6df53cdebed1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-A React TODOs example, explained&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bhD&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Create a realtime football voting app using React, Redux, React-Router-v4 and Firebase&lt;/a&gt;: In this series of tutorials, we‚Äôll be creating a football voting app using React, Redux, Redux-Saga, React-Router v4, and Firebase. In this first part, we will setup the project. We‚Äôre going to use create-react-app to scaffold the initial project structure, tweak it a bit, and then add the necessary libraries that we‚Äôll be using.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bMT&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-How to Build a ToDo App Using React, Redux, and Webpack&lt;/a&gt;: In this tutorial I‚Äôm going to show you how to create a simple ‚ÄúToDo‚Äù app using React, Redux, a little bit of Node, and Cosmic JS.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>React-OpenSource-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/react-opensource-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/react-opensource-list/</guid>
      <description>&lt;h1 id=&#34;react-opensource-list&#34;&gt;React OpenSource List&lt;/h1&gt;
&lt;p&gt;More Web Widgets can be found in &lt;a href=&#34;https://github.com/wx-chevalier/Awesome-Lists/blob/master/Web/Widgets/Web-Widgets-List.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Web Widgets Links&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;showcase&#34;&gt;Showcase&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yogaboll/react-kanban&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-react kanban 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A Trello-like application built with React and Redux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/devhubapp/devhub&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-devhub 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: DevHub: TweetDeck for GitHub - Android, iOS, Web &amp;amp; Desktop&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/DustinBrett/x&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;x 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Desktop environment in the browser.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/josepholiveira/podcastr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-Podcastr 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A platform built for podcast broadcasting. Developed during @Rocketseat NLW#05 free training.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Th3Wall/Fakeflix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-Fakeflix 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Not the usual clone that you can find on the web.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;scratch&#34;&gt;Scratch&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hexacta/didact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Didact 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: This repository goes together with a series of posts that explains how to build React from scratch step by step.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/Y5s&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Gooact: React in 160 lines of JavaScript 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: How to build own React clone in a matter of minutes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;boilerplate&#34;&gt;Boilerplate&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/alan2207/bulletproof-react&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-bulletproof-react 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: üõ°Ô∏è ‚öõÔ∏è A simple, scalable, and powerful architecture for building production ready React applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/blueedgetechno/windows11&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-Windows 11 in React 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: This open source project is made in the hope to replicate the Windows 11 desktop experience on web, using standard web technologies like React, CSS (SCSS), and Js.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;internals&#34;&gt;Internals&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tranbathanhtung/react-fiber-implement&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;re-implement react fiber 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: react-fiber is my self-study project help me understand how react work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pomber/didact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Didact 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A DIY guide to build your own React.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;development-tools--ÂºÄÂèëÂ∑•ÂÖ∑&#34;&gt;Development Tools | ÂºÄÂèëÂ∑•ÂÖ∑&lt;/h1&gt;
&lt;h2 id=&#34;scaffold&#34;&gt;Scaffold&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/styleguidist/react-styleguidist&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;react-styleguidist 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Isolated React component development environment with a living style guide.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tools&#34;&gt;Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/supnate/rekit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rekit 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Toolkit for building scalable web applications with React, Redux and React-router&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/elierotenberg/react-armor&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;react-armor 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Protect your DOM from third-party tampering.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/b11&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;eslint-plugin-react 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: React specific linting rules for ESLint.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/danielstjules/jsinspect&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;jsinspect 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Detect copy-pasted and structurally similar code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;performance-optimization--ÊÄßËÉΩ‰ºòÂåñ&#34;&gt;Performance Optimization | ÊÄßËÉΩ‰ºòÂåñ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/garbles/why-did-you-update&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;why-did-you-update 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Puts your console on blast when React is making unnecessary updates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dai-shi/react-tracked&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-React Tracked 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: State usage tracking with Proxies. Optimize re-renders for useState/useReducer, React Redux, Zustand and others.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aidenybai/million&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-million 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/aidenybai/million&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Million is an extremely fast and lightweight (&amp;lt;4kb) virtual DOM that makes React components up to 70% faster.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;development-libraries&#34;&gt;Development Libraries&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Flipboard/react-canvas&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Canvas 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: High performance &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; rendering for React components.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/adobe/react-spectrum&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;react-spectrum 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A collection of libraries and tools that help you build adaptive, accessible, and robust user experiences.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blitzjs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Blitz 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Blitz is a batteries-included framework that&amp;rsquo;s inspired by Ruby on Rails, is built on Next.js, and features a &amp;ldquo;Zero-API&amp;rdquo; data layer abstraction that eliminates the need for REST/GraphQL.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;component-libraries&#34;&gt;Component Libraries&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/radix-ui/primitives&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-Radix 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/radix-ui/primitives&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Radix Primitives is an open-source UI component library for building high-quality, accessible design systems and web apps. Maintained by @workos.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;data-fetch&#34;&gt;Data Fetch&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zeit/swr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-SWR 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: SWR is a React Hooks library for remote data fetching. The name ‚ÄúSWR‚Äù is derived from stale-while-revalidate, a HTTP cache invalidation strategy popularized by RFC 5861. SWR first returns the data from cache (stale), then sends the fetch request (revalidate), and finally comes with the up-to-date data again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-React Query 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: ‚öõÔ∏è Hooks for fetching, caching and updating asynchronous data in React.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;component-utilities&#34;&gt;Component Utilities&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/acdlite/recompose/blob/master/docs/API.md#withstate&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;recompose 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A React utility belt for function components and higher-order components.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/smooth-code/svgr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;svgr 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Transform SVG into React components&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/thejameskyle/react-loadable&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React Loadable 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A higher order component for loading components with promises.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/deepsweet/hocs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hocs 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A collection of Higher-Order Components for React and React Native.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hooks&#34;&gt;Hooks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/umijs/hooks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;umijs/hooks 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: React Hooks Library.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;animation&#34;&gt;Animation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/drcmda/react-spring&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;react-spring 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Helping react-motion and animated to become best friends&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-move&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-react-move 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; &lt;/a&gt;: Beautifully and deterministically animate anything in React.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jondot/react-flight&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;react-flight 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; &lt;/a&gt;: The best way to build animation compositions for React. Design and compose a component to start with, a component to end with, and Flight will take it from there.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/rnosov/react-reveal&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Reveal 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Easily add reveal on scroll animations to your React app.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;css-in-js&#34;&gt;CSS-in-JS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/styled-components/styled-components&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;styled-components 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;:Visual primitives for the component age&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;test&#34;&gt;Test&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cubox.pro/c/SwAGqu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-react-cosmos 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Sandbox for developing and testing UI components in isolation&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>React-Syntax-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/react-syntax-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/react-syntax-list/</guid>
      <description>&lt;h1 id=&#34;react-syntax-list--react-Âü∫Á°ÄËØ≠Ê≥ïËµÑÊñôÁ¥¢Âºï&#34;&gt;React Syntax List | React Âü∫Á°ÄËØ≠Ê≥ïËµÑÊñôÁ¥¢Âºï&lt;/h1&gt;
&lt;p&gt;This post aggregates curated popular links for learning React Syntax. More reference about ITCS can turn to &lt;a href=&#34;https://github.com/wx-chevalier/Awesome-Lists&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Awesome Links: Guide to Galaxy&lt;/a&gt;, which collects valuable, popular and up-to-date links for CS, including Programming Language, Software Engineering, Server Side Application, Infrastructure, InfoSecurity, Industrial Application, DataScienceAI, Frontend Technology(iOS, Android, RN, Electron), etc.&lt;/p&gt;
&lt;h1 id=&#34;component--ÁªÑ‰ª∂&#34;&gt;Component | ÁªÑ‰ª∂&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bL6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-How Pure CSS Images Helped Me Understand React Components&lt;/a&gt;: How did I overcome impostor syndrome and finally learn React? There are a few reasons but one of the most significant ones was learning how to make pure CSS images.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://daveceddia.com/convert-createclass-to-es6-class/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Convert React.createClass to ES6 Class&lt;/a&gt;: As of React 15.5, createClass is deprecated. You‚Äôll get warnings in the console if you‚Äôre using it in your code ‚Äì and, when React 16 comes out, createClass will be removed entirely.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;syntax--ÁªÑ‰ª∂ËØ≠Ê≥ï&#34;&gt;Syntax | ÁªÑ‰ª∂ËØ≠Ê≥ï&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://facebook.github.io/react/blog/2015/12/18/react-components-elements-and-instances.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-React Components, Elements, and Instances&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;JSX: &lt;a href=&#34;https://facebook.github.io/jsx/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JSX Specification&lt;/a&gt;, &lt;a href=&#34;https://facebook.github.io/react/docs/jsx-in-depth.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JSX In Depth&lt;/a&gt;, &lt;a href=&#34;http://reactpatterns.com/#conditional-rendering&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Conditional Rendering&lt;/a&gt;, &lt;a href=&#34;https://jasonformat.com/wtf-is-jsx/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-WTF is JSX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.freecodecamp.com/react-elements-vs-react-components-fdc776705880#.nlfh4ingc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-React Elements and React Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;lifecycle&#34;&gt;LifeCycle&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/mofed/reacts-component-lifecycles-adf0ebc89d23#.79hd0xcxd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React‚Äôs Component Lifecycles&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bCT&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React Lifecycle Methods- how and when to use them&lt;/a&gt;: The above is the life of a React component, from birth (pre-mounting) and death (unmounting).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;error-boundary&#34;&gt;Error Boundary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/sarah_chima/error-boundaries-in-react-3eib&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Handling Errors in React Components with Error Boundaries&lt;/a&gt;: Error Boundaries are React Components and they catch error anywhere in their child component tree.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;component-dataflow--ÁªÑ‰ª∂Êï∞ÊçÆÊµÅ&#34;&gt;Component Dataflow | ÁªÑ‰ª∂Êï∞ÊçÆÊµÅ&lt;/h1&gt;
&lt;h2 id=&#34;props&#34;&gt;Props&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@iammerrick/function-as-child-components-5f3920a9ace9#.4dpp6haq9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;function-as-child-components&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://reactpatterns.com/#stateless-function&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React PatternsÔºöChildren Áõ∏ÂÖ≥&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mxstbr.blog/2017/02/react-children-deepdive/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A deep dive into children in React&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://merrickchristensen.com/articles/function-as-child-components.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Function as Child Components&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;state&#34;&gt;State&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://alligator.io/react/getting-atomic-updates-with-setstate&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Atomic SetState Updates in React&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/GantMan/ReactStateMuseum&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-ReactStateMuseum&lt;/a&gt;: A whirlwind tour of React state management systems by example.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UXl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React‚Äôs ‚öõÔ∏è new Context API&lt;/a&gt;: It‚Äôs way more ergonomic, it‚Äôs no longer ‚Äúexperimental,‚Äù and it‚Äôs now a first-class api! OH, AND IT USES A RENDER PROP!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://upmostly.com/tutorials/how-to-use-the-usecontext-hook-in-react&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-How to Use the useContext Hook in React&lt;/a&gt;: Let‚Äôs explore the React useContext Hook by building a music player! I‚Äôll also show you how a custom React Hook can make the useContext Hook easier to use.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;hooks&#34;&gt;Hooks&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.netlify.com/blog/2019/03/11/deep-dive-how-do-react-hooks-really-work/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-Deep dive: How do React hooks really work?&lt;/a&gt;: In this article, we reintroduce closures by building a tiny clone of React Hooks. This will serve two purposes ‚Äì to demonstrate the effective use of closures, and to show how you can build a Hooks clone in just 29 lines of readable JS. Finally, we arrive at how Custom Hooks naturally arise.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/LRvVZUDywdsVjKbLP_4zbw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-ËØ¶ÁªÜ preact hook Ê∫êÁ†ÅÈÄêË°åËß£Êûê&lt;/a&gt;: Êú¨ÊñáÈÄöËøáÂØπ preact ÁöÑ hook Ê∫êÁ†ÅÂàÜÊûêÔºåÁêÜËß£ÂíåÊéåÊè° react/preact ÁöÑ hook Áî®Ê≥ï‰ª•Âèä‰∏Ä‰∫õÂ∏∏ËßÅÁöÑÈóÆÈ¢ò„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;style--Ê†∑ÂºèÂ§ÑÁêÜ&#34;&gt;Style | Ê†∑ÂºèÂ§ÑÁêÜ&lt;/h1&gt;
&lt;h2 id=&#34;css&#34;&gt;CSS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://survivejs.com/react/advanced-techniques/styling-react/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SurviveJS: Styling React&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/chibicode/react-functional-css-protips&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;react-functional-css-protips&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;css-in-js&#34;&gt;CSS-in-JS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/maintainable-react-apps/journey-to-enjoyable-maintainable-styling-with-react-itcss-and-css-in-js-632cfa9c70d6#.msehhtt3j&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;journey-to-enjoyable-maintainable-styling-with-react-itcss-and-css-in-js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;styled-components&#34;&gt;Styled Components&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.freecodecamp.com/a-5-minute-intro-to-styled-components-41f40eb7cd55&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A 5 Minute Intro To Styled Components&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bID&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Embracing the power of styled-components&lt;/a&gt;: What we learned in the first week moving away from CSS Modules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/morajabi/styled-media-query&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-styled-media-query 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; &lt;/a&gt;: Beautiful media queries better than CSS @media for styled-components with ability to specify custom breakpoints.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/b1D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Jest Styled Components 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; &lt;/a&gt;: A set of utilities for testing Styled Components with Jest. This package improves the snapshot testing experience and provides a brand new matcher to make expectations on the style rules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sitepoint.com/style-react-components-styled-components/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Quick Tip: How to Style React Components with styled-components&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/Ucr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Styled-components ‚Äî Mastering the fundamentals through practice&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://jsramblings.com/2017/10/29/migrating-to-styled-components-cheatsheet.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Migrating to styled-components cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;animation--Âä®Áîª&#34;&gt;Animation | Âä®Áîª&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bMF&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React Animations 101 #Series#&lt;/a&gt;: In this post on react animations 101, we will explore a few examples and why CSS transition are a good fit for the navigation bar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@cheapsteak/animations-with-reacttransitiongroup-4972ad7da286#.no6xhxooq&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Animations with ReactTransitionGroup&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@cheapsteak/animations-with-reacttransitiongroup-4972ad7da286#.d1082uczx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Animations with ReactTransitionGroup&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000004150178&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Ê∫êÁ†ÅÂâñÊûêÁ≥ªÂàó Ôºç Áé©ËΩ¨ React Transition&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.freecodecamp.com/how-to-build-animated-microinteractions-in-react-aab1cb9fe7c8#.4jnphlp3r&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to build animated microinteractions in React&lt;/a&gt;: Every function in JavaScript has a closure. And this is one of the coolest features of the JavaScript language. Because without closures, it would be hard to implement common structures like callbacks or event handlers.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;react-router--Ë∑ØÁî±&#34;&gt;React Router | Ë∑ØÁî±&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@pshrmn/a-simple-react-router-v4-tutorial-7f23ff27adf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-A Simple React Router v4 Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://hackernoon.com/redux-and-react-router-v4-a-tale-of-two-datastores-8dd91f47d14e&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Redux and React-Router v4: a Tale of Two Datastores&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/jfUwEw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Build your own React Router v4&lt;/a&gt;: this has helped you create a better mental model of what‚Äôs happening in React Router while also helping you to gain an appreciation for React Router‚Äôs elegance and ‚ÄúJust Components‚Äù API.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ebaytech.berlin/universal-web-apps-with-react-router-4-15002bb30ccb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Universal JavaScript Apps with React Router 4&lt;/a&gt;: How to use the latest version of React Router both on the server side and the client side.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bVv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Changing Old Habits in React Router 4&lt;/a&gt;: At React Conf 2017, Michael Jackson &amp;amp; Ryan Florence talked about React Router in their talk called ‚ÄúLearn Once, Route Anywhere‚Äù. They unveiled the new React Router website, and with it, the new focus that React router has taken ‚Äî declarative components.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bIf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-The One Thing you need to know about React Router 4&lt;/a&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/technology-ebay-de/universal-react-router4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demo app showing how to use react-router v4 for server- and client-side rendering&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/ryanflorence/efbe562332d4f1cc9331202669763741&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Universal React Router 4&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zackify/react-router-async-routing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Async Routing&lt;/a&gt;: react router v4 async routing&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;react-router-animation--Ë∑ØÁî±Âä®Áîª&#34;&gt;React Router Animation | Ë∑ØÁî±Âä®Áîª&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/b1I&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-A shallow dive into React Router v4 Animated Transitions&lt;/a&gt;: It can be a bit confusing getting animated transitions setup with React Router v4. This article won‚Äôt cover every scenario, but we‚Äôll go over the basics so that you can add animated transitions to your application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/berzniz/react-overdrive&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Super easy magic-move transitions for React apps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tkh44/data-driven-motion/blob/master/demo/src/App.js#L187-L191&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Router V4 È°µÈù¢Âä®Áîª&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Animated page transitions with React Router 4, ReactTransitionGroup and Animated&lt;/a&gt;: In this article I‚Äôll show you how to animate your page transitions using lifecycle methods from ReactTransitionGroup and the Animated library.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;widgets--Êéß‰ª∂&#34;&gt;Widgets | Êéß‰ª∂&lt;/h1&gt;
&lt;h2 id=&#34;form--Ë°®Âçï&#34;&gt;Form | Ë°®Âçï&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@foxhound87/automagically-manage-react-forms-state-with-mobx-and-automatic-validation-2b00a32b9769&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Automagically manage React forms state and automatic validation with MobX&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.logrocket.com/an-imperative-guide-to-forms-in-react-927d9670170a?source=linkShare-fe48c4221a4c-1519391172&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-An imperative guide to forms in React&lt;/a&gt;: in this tutorial, I will explain how React deals with forms and events.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;list--ÂàóË°®&#34;&gt;List | ÂàóË°®&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/beq&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-Index as a key is an anti-pattern&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/29534224/react-jsx-iterating-through-a-hash-and-returning-jsx-elements-for-each-key&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React JSX: Iterating through a hash and returning JSX elements for each key&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/28329382/understanding-unique-keys-for-array-children-in-react-js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Understanding unique keys for array children in React.js&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://jasonjl.me/blog/2015/04/18/rendering-list-of-elements-in-react-with-jsx/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rendering List of Elements in React With JSX&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>React-Tuning-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/react-tuning-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/react/react-tuning-list/</guid>
      <description>&lt;h1 id=&#34;react-production-list&#34;&gt;React Production List&lt;/h1&gt;
&lt;h1 id=&#34;performance-optimization--ÊÄßËÉΩ‰ºòÂåñ&#34;&gt;Performance Optimization | ÊÄßËÉΩ‰ºòÂåñ&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/k-icCIEOHkGmV-cBJ0HUGQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-React Profiler&lt;/a&gt;: React 16.5 Êñ∞Â¢û‰∫ÜÂØπÂºÄÂèëÂ∑•ÂÖ∑ÔºàDevToolsÔºâÊÄßËÉΩÂàÜÊûêÊèí‰ª∂Ôºàprofiler pluginÔºâÁöÑÊîØÊåÅ„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UpT&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React Performance Fixes on Airbnb Listing Pages&lt;/a&gt;: We have been hard at work migrating the airbnb.com core booking flow into a single-page server-rendered app using React Router and Hypernova.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://facebook.github.io/react/docs/optimizing-performance.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Office SiteÔºöOptimizing Performance&lt;/a&gt;: For many applications, using React will lead to a fast user interface without doing much work to specifically optimize for performance. Nevertheless, there are several ways you can speed up your React application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bCn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Keep Your React Redux Healthy, Performance Optimization Story&lt;/a&gt;: I am here to be honest about React optimization.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.vixlet.com/react-at-light-speed-78cd172a6411&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React at Light Speed&lt;/a&gt;: Lessons in optimizing performance at Vixlet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bMa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-45% Faster React Functional Components, Now&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://engineering.musefind.com/our-best-practices-for-writing-react-components-dec3eb5c3fc8#.3kin14vrf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Our Best Practices for Writing React Components&lt;/a&gt;: When I first started writing React, I remember seeing many different approaches to writing components, varying greatly from tutorial to tutorial. Though the framework has matured considerably since then, there doesn‚Äôt seem to yet be a firm ‚Äòright‚Äô way of doing things.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/planttheidea/moize&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Memoize React components&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/dx5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React at Light Speed&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://jamesknelson.com/should-i-use-shouldcomponentupdate/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Should I use shouldComponentUpdate?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lcxfs1991/blog/issues/8?f=tt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React ÁßªÂä® web ÊûÅËá¥‰ºòÂåñ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/modus-create-front-end-development/component-rendering-performance-in-react-df859b474adc#.rjjvtwgs8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;component-rendering-performance-in-react&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.broadview.com.cn/article/77&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Â∫îÁî®‰ºòÂåñÔºöÈÅøÂÖç‰∏çÂøÖË¶ÅÁöÑ render&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.vjeux.com/2015/javascript/react-rally-animated-react-performance-toolbox.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Rally: Animated ‚Äî React Performance Toolbox&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/code-life/how-to-benchmark-react-components-the-quick-and-dirty-guide-f595baf1014c#.w1t22c86k&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to Benchmark React Components: The Quick and Dirty Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@esamatti/react-js-pure-render-performance-anti-pattern-fb88c101332f#.b9vwbt1jy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React.js pure render performance anti-pattern&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://benchling.engineering/deep-dive-react-perf-debugging/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A DEEP DIVE INTO REACT PERF DEBUGGING&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@okonetchnikov/react-at-60fps-4e36b8189a4c#.enqkaabwg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React at 60fps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@nesbtesh/react-performance-optimization-28ec5b61fff3#.lx9g6ewdg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Performance Optimization&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/t73W9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Performance Optimization&lt;/a&gt;: Performance optimization can be a big pain with any language. Especially when you are optimizing your app and you have no idea what to optimize. React has some really nice tools to do this, I will be talking about one specifically that will make your life a lot better.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.vixlet.com/react-at-light-speed-78cd172a6411&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React at Light Speed, Lessons in optimizing performance at Vixlet&lt;/a&gt;: Here we will share some of the lessons we have learned along the way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://flexport.engineering/optimizing-react-rendering-part-1-9634469dca02&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Optimizing React Rendering&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cdb.reacttraining.com/react-inline-functions-and-performance-bdff784f5578&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React, Inline Functions, and Performance&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/reactopt/reactopt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-reactopt 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A CLI React performance optimization tool that identifies potential unnecessary re-rendering.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UZq&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React is Slow, React is Fast: Optimizing React Apps in Practice&lt;/a&gt;: If you care about performance, it&amp;rsquo;s fairly easy to make any React application super fast. Here is how.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UpT&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-React Performance Fixes on Airbnb Listing Pages&lt;/a&gt;: There may be a lot of low-hanging fruit affecting performance in areas you might not track very closely but are still very important.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UiL&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Creating more efficient React views with windowing&lt;/a&gt;: In this presentation, the &lt;a href=&#34;https://github.com/bvaughn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bvaughn&lt;/a&gt; talks something abot performance, search, and app architecture in React development.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;metrics&#34;&gt;Metrics&lt;/h2&gt;
&lt;h2 id=&#34;avoid-unnecessary-re-renders&#34;&gt;Avoid Unnecessary Re-renders&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/b1v&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;High Performance React: 3 New Tools to Speed Up Your Apps&lt;/a&gt;: In this post I‚Äôll highlight tools and techniques for making React apps fast. Each section also has an interactive, and (hopefully) fun demo!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UXA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React PureComponent Pitfalls&lt;/a&gt;: Unnecessary re-renders can slow down your app, especially when rendering large collections where updates to the collection occur frequently.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;code-splitting--components-decomposition--‰ª£Á†ÅÂàÜÂâ≤‰∏éÁªÑ‰ª∂Ëß£ËÄ¶&#34;&gt;Code Splitting &amp;amp; Components Decomposition | ‰ª£Á†ÅÂàÜÂâ≤‰∏éÁªÑ‰ª∂Ëß£ËÄ¶&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://serverless-stack.com/chapters/code-splitting-in-create-react-app.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Code Splitting in Create React App&lt;/a&gt;: This chapter is an extra step that can help speed up the initial load time of your React app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bXz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-https://parg.co/bXz&lt;/a&gt;: Techniques for decomposing React components. React components have a lot of power and flexibility. With so many tools at your disposal, it is incredibly easy for components to grow over time, become bloated and do too much.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/b1B&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Writing Clean and Concise React Components by Making Full Use of ES6/7 Features and the Container-Component Pattern&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UVJ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Server Rendering, Code Splitting, and Lazy Loading with React Router v4&lt;/a&gt;: In this article, software engineers from Airbnb share practices in combing server rendering and code splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/Ukg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Upgrading a create-react-app project to a SSR + code splitting setup&lt;/a&gt;: This is what we‚Äôll cover: Server-side rendering, Code splitting with react-loadable, Code splitting on the server, Taking benefit of webpack‚Äôs chunkNames.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;server-side-rendering--ÊúçÂä°Á´ØÊ∏≤Êüì&#34;&gt;Server Side Rendering | ÊúçÂä°Á´ØÊ∏≤Êüì&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://formidable.com/blog/2017/introducing-rapscallion/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Introducing Rapscallion 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: a new approach for server-side rendering React applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://css-tricks.com/server-side-react-rendering/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Server-Side React Rendering&lt;/a&gt;: In this tutorial, we&amp;rsquo;ll take you through a server side rendering example step-by-step. including working around a common roadblock for React apps that talk to APIs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/21492780&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React ÂêåÊûÑÊäÄÊúØ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://scotch.io/tutorials/react-on-the-server-for-beginners-build-a-universal-react-and-node-app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React on the Server for Beginners: Build a Universal React and Node App&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://redux.js.org/docs/recipes/ServerRendering.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Redux ÂÆòÊñπÊñáÊ°£ ServerSideRendering&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.coding.net/blog/React-server-rendering&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Áé©ËΩ¨ React ÊúçÂä°Á´ØÊ∏≤Êüì&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/caljrimmer/isomorphic-redux-app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;isomorphic-redux-app&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.freecodecamp.com/what-exactly-is-client-side-rendering-and-hows-it-different-from-server-side-rendering-bd5c786b340d#.n4zils8st&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Client-side vs. server-side rendering: why it‚Äôs not all black and white.&lt;/a&gt;: Since the dawn of time, the conventional method for getting your HTML up onto a screen was by using server-side rendering. It was the only way. You loaded up your .html pages on your server, then your server went and turned them into useful documents on your users‚Äô browsers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://formidable.com/blog/2017/introducing-rapscallion/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introducing Rapscallion&lt;/a&gt;: a new approach for server-side rendering React applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://arkwright.github.io/scaling-react-server-side-rendering.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Scaling React Server-Side Rendering&lt;/a&gt;: Some of the insights here are React-specific, but many are simply generic scalability challenges, or simple mistakes that were made.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zeit.co/blog/streaming-server-rendering-at-spectrum&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Streaming Server-Side Rendering and Caching at Spectrum&lt;/a&gt;: In this guest post he describes the journey to high performance server-rendering of their React application with streaming responses and distributed caching.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;monitor--report--ÁõëÊéß‰∏éÂõûÊä•&#34;&gt;Monitor &amp;amp; Report | ÁõëÊéß‰∏éÂõûÊä•&lt;/h1&gt;
&lt;h1 id=&#34;preact&#34;&gt;Preact&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@rajaraodv/the-inner-workings-of-virtual-dom-666ee7ad47cf#.or5425hja&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Inner Workings Of Virtual DOM&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lukeed/preact-starter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Webpack2 boilerplate for building SPA / PWA / offline front-end apps with Preact&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000010336457&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Âè∏ÂæíÊ≠£Áæé preact Ê∫êÁ†ÅÂ≠¶‰π†Á≥ªÂàóÊñáÁ´†&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
