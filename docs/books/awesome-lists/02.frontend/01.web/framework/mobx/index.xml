<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MobX | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/mobx/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/mobx/index.xml" rel="self" type="application/rss+xml"/><description>MobX</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>MobX</title><link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/mobx/</link></image><item><title>MobX-List</title><link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/mobx/mobx-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/mobx/mobx-list/</guid><description>&lt;h1 id="mobx-list">MobX List&lt;/h1>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;h2 id="redux">Redux&lt;/h2>
&lt;h1 id="tutorial">Tutorial&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/mobxjs/awesome-mobx" target="_blank" rel="noopener">Awesome MobX&lt;/a>: A collection of awesome things regarding MobX.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/3in" target="_blank" rel="noopener">2015-Becoming fully reactive: an in-depth explanation of MobX&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mobx.js.org/getting-started.html" target="_blank" rel="noopener">2015-Ten minute introduction to MobX and React&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/c0uu" target="_blank" rel="noopener">2016-How to decouple state and UI (a.k.a. you don’t need componentWillMount)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://semaphoreci.com/community/tutorials/how-to-test-react-and-mobx-with-jest" target="_blank" rel="noopener">2016-How to Test React and MobX with Jest&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/Gylrs" target="_blank" rel="noopener">2016-Tips to optimise rendering of a set of elements in React&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.robinwieruch.de/redux-mobx-confusion/" target="_blank" rel="noopener">2016-Redux-Mobx-Confusion&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/q4oR0C" target="_blank" rel="noopener">2016-An artificial example where MobX really shines and Redux is not really suited for it&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://engineering.pivotal.io/post/tdd-mobx/" target="_blank" rel="noopener">2017-TDD with React and MobX&lt;/a>: A look into testing MobX + React, plus why MobX is a viable alternative to Redux.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bLd" target="_blank" rel="noopener">2017-Mobdux: Combining the good parts of MobX and Redux&lt;/a>: MobX and Redux give you two opposing ways to manage your state effectively in a React application. As an experiment I attempted to merge the good parts of both approaches, and ended up with a new library, mobdux.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/KfeTad" target="_blank" rel="noopener">2016-Redux vs. MobX by example #Series#&lt;/a>: &lt;a href="http://6me.us/KfeTad" target="_blank" rel="noopener">Part II: The Simplicity of MobX, and Conclusion&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="react">React&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://dzone.com/articles/adding-mobx-to-a-vanilla-react-project" target="_blank" rel="noopener">2017-Adding MobX to a Vanilla React Project&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/gothinkster/react-mobx-realworld-example-app" target="_blank" rel="noopener">react-mobx-realworld-example-app
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/dailyjs/mobx-react-best-practices-17e01cec4140" target="_blank" rel="noopener">2017-Mobx React — Best Practices&lt;/a>: In this article I want to show you common best practices for using React with mobx.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="internals">Internals&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/26559530" target="_blank" rel="noopener">如何自己实现一个 mobx - 原理解析&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="mobx-state-tree-list">Mobx State Tree List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UCB" target="_blank" rel="noopener">Manage Application State with Mobx-state-tree 🎥&lt;/a>: In this course, Michel Westrate - Creator of Mobx - will teach us how to model application state after your problem domain with Mobx-state-tree (MST).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/Uvj" target="_blank" rel="noopener">2018-State Management with MobX State Tree&lt;/a>: Introduction to MobX State Tree.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://codeburst.io/the-curious-case-of-mobx-state-tree-7b4e22d461f" target="_blank" rel="noopener">2018-The Curious Case of Mobx State Tree&lt;/a>: What if MobX did make assumptions on how your data is structured? What if it is opinionated? That is the curious case of Mobx state tree.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>MobX-OpenSource-List</title><link>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/mobx/mobx-opensource-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/02.frontend/01.web/framework/mobx/mobx-opensource-list/</guid><description>&lt;h1 id="mobx-opensource-list">MobX OpenSource List&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Raathigesh/wiretap" target="_blank" rel="noopener">2017-Wiretap
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A desktop app for inspecting mobx and mobx state tree apps.&lt;/li>
&lt;/ul></description></item></channel></rss>