<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MediaStreaming | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/02.frontend/30.rtc/mediastreaming/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/02.frontend/30.rtc/mediastreaming/index.xml" rel="self" type="application/rss+xml" />
    <description>MediaStreaming</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>MediaStreaming</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/30.rtc/mediastreaming/</link>
    </image>
    
    <item>
      <title>MediaStreaming-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/30.rtc/mediastreaming/mediastreaming-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/02.frontend/30.rtc/mediastreaming/mediastreaming-list/</guid>
      <description>&lt;h1 id=&#34;media-streaming-list--流媒体&#34;&gt;Media Streaming List | 流媒体&lt;/h1&gt;
&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/1071271&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-HTML 5 视频直播一站式扫盲&lt;/a&gt;: 为了紧跟潮流，本文将向大家介绍一下视频直播中的基本流程和主要的技术点，包括但不限于前端技术。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/Son&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-如何实现 1080P 延迟低于 500ms 的实时超清直播传输技术 &lt;/a&gt;: 视频直播是很多技术团队及架构师关注的问题，在实时性方面，大部分直播是准实时的，存在 1-3 秒延迟。本文由袁荣喜向高可用架构投稿，介绍其将直播延迟控制在 500ms 的背后的实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000010440054?utm_source=tuicool&amp;amp;utm_medium=referral&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-不再碎片化学习，快速掌握 H5 直播技术&lt;/a&gt;: 所以，本文主要给大家介绍一下当下 HTML5 直播所涵盖的技术范围，如果要深度学习每一个技术，我们后续可以继续讨论。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;collection&#34;&gt;Collection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/0voice/audio_video_streaming&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;音视频流媒体权威资料整理 🗃️&lt;/a&gt;: 音视频流媒体权威资料整理，500+份文章，论文，视频，实践项目，协议，业界大神名单。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;client--客户端模块&#34;&gt;Client | 客户端模块&lt;/h1&gt;
&lt;h2 id=&#34;android&#34;&gt;Android&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://toutiao.io/posts/76jep8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Android 音视频点 / 直播模块开发&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pili-engineering/PLDroidPlayer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PLDroidPlayer: 适用于 Android 平台的音视频播放器 SDK&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.henishuo.com/live-play-resource-collections/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;直播方向的资源收集&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ios&#34;&gt;iOS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://allluckly.cn/%E6%8A%95%E7%A8%BF/tuogao46&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;iOS 开发之集成 ijkplayer 视频直播&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;h5&#34;&gt;H5&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/27690199?utm_medium=social&amp;amp;utm_source=ZHShareTargetIDMore&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-H5 直播避坑指南&lt;/a&gt;:在摸索优化背后，我们也想把这些问题和解决方法总结下来，让其他同学做到直播的时候可以自豪的说，这就是我们的 h5 直播体验。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;工程实践&#34;&gt;工程实践&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.infoq.com/cn/presentations/how-to-support-the-people-live-online-classroom&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-怎样支持万人直播在线教室？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/yrcO8yA0Ut2RVhUxG2OSvQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;聊聊高并发长连接架构：百万在线的美拍直播弹幕系统如何实现&lt;/a&gt;: 直播弹幕是直播系统的核心功能之一。如何迅速作出一个有很好扩展性的弹幕系统？如何应对业务迅速发展？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>MediaStreaming-OpenSource-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/02.frontend/30.rtc/mediastreaming/mediastreaming-opensource-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/02.frontend/30.rtc/mediastreaming/mediastreaming-opensource-list/</guid>
      <description>&lt;h1 id=&#34;rtc-opensource-list&#34;&gt;RTC OpenSource List&lt;/h1&gt;
&lt;h1 id=&#34;webrtc&#34;&gt;WebRTC&lt;/h1&gt;
&lt;h2 id=&#34;showcase&#34;&gt;Showcase&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/RobinLinus/snapdrop&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-snapdrop 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A Progressive Web App for local file sharing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pavlobu/deskreen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-Deskreen 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Deskreen turns any device with a web browser to a second screen for your computer&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;library&#34;&gt;Library&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/maxogden/screencat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Screencat 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: webrtc screensharing electron app for mac os (Alpha).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UsK&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WebRTC Data Channels Example&lt;/a&gt;: A simple example of WebRTC Data Channels. Uses postMessage() as a substitute for a real signalling channel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/fanout/pushpin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pushpin 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Pushpin is a reverse proxy server written in C++ that makes it easy to implement WebSocket, HTTP streaming, and HTTP long-polling services.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/feross/simple-peer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;simple-peer 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Simple WebRTC video, voice, and data channels.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://recordrtc.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RecordRTC.js 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: WebRTC JavaScript Library for Audio+Video+Screen+Canvas (2D+3D animation) Recording.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;live&#34;&gt;Live&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tabvn/video-streaming-service&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-video streaming service 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Build Live Video Streaming Server use Ffmpeg Nginx Rtmp Module &amp;amp; Nodejs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/gwuhaolin/livego&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LiveGo 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 纯 Go 写的直播服务器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ltebean/Live&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Live 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Demonstrate how to build a live broadcast app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ossrs/srs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2014-Simple RTMP Server 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: SRS is a RTMP/HLS/WebRTC/SRT/GB28181 streaming cluster, high efficiency, stable and simple.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://livekit.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-LiveKit #OpenSource#&lt;/a&gt;: The open source platform for real-time communication. Build 1000-person, live audio or video experiences into your mobile app or website, in minutes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aler9/rtsp-simple-server&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-aler9/rtsp-simple-server 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/aler9/rtsp-simple-server&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: rtsp-simple-server is a ready-to-use and zero-dependency server and proxy that allows users to publish, read and proxy live video and audio streams through various protocols.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cast&#34;&gt;Cast&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/owncast/owncast&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;owncast 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Take control over your live stream video by running it yourself. Streaming + chat out of the box.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/MayaPosch/NymphCast&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-NymphCast 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Audio and video casting system with support for custom applications.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hls&#34;&gt;HLS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/video-dev/hls.js/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-hls.js 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: JavaScript HLS client using Media Source Extension&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/peaBerberian/wasp-hls&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2023-wasp-hls 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/peaBerberian/wasp-hls&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: WebAssembly-based (Rust) &amp;amp; in-worker HLS Media Player for the web.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rtsp&#34;&gt;RTSP&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Roverr/rtsp-stream&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-rtsp-stream 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Out of box solution for RTSP - HLS live stream transcoding. Makes RTSP easy to play in browsers.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
