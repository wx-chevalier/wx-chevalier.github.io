<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CAD | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/02.frontend/10.cg/geometryprocess/cad/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/02.frontend/10.cg/geometryprocess/cad/index.xml" rel="self" type="application/rss+xml"/><description>CAD</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>CAD</title><link>https://ng-tech.icu/books/awesome-lists/02.frontend/10.cg/geometryprocess/cad/</link></image><item><title>CAD-List</title><link>https://ng-tech.icu/books/awesome-lists/02.frontend/10.cg/geometryprocess/cad/cad-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/02.frontend/10.cg/geometryprocess/cad/cad-list/</guid><description>&lt;h1 id="cad-list">CAD List&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/hlorus/CAD_Sketcher" target="_blank" rel="noopener">2022-CAD_Sketcher
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/hlorus/CAD_Sketcher" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Constraint-based geometry sketcher for blender.&lt;/li>
&lt;/ul>
&lt;h1 id="occt">OCCT&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="http://analysissitus.org/forum/index.php?threads/youtube-lessons.3/" target="_blank" rel="noopener">2021-Youtube lessons #Course#&lt;/a>: Here we have the list of lessons that are already published or going to be published on our youtube channel. The list is kinda dynamic, and I do not really have any strict plan or schedule of what &amp;amp; when to publish. Since these lessons are entirely community-driven, feel free to share your ideas on the possible topics right below this post.&lt;/li>
&lt;/ul></description></item><item><title>CAD-OpenSource-List</title><link>https://ng-tech.icu/books/awesome-lists/02.frontend/10.cg/geometryprocess/cad/cad-opensource-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/02.frontend/10.cg/geometryprocess/cad/cad-opensource-list/</guid><description>&lt;h1 id="cad-opensource-list">CAD OpenSource List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/Open-Cascade-SAS/OCCT" target="_blank" rel="noopener">2013-OCCT
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/Open-Cascade-SAS/OCCT" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Open CASCADE Technology (OCCT) is an open-source software development platform for 3D CAD, CAM, CAE. This is a clone of the official repository located on &lt;a href="https://dev.opencascade.org/" target="_blank" rel="noopener">https://dev.opencascade.org/&lt;/a>. Please use official development portal for registering issues and providing patches.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/huxingyi/dust3d" target="_blank" rel="noopener">2018-Dust3D
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/huxingyi/dust3d" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Dust3D is a cross-platform 3D modeling software that makes it easy to create low poly 3D models for video games, 3D printing, and more.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/Michael-F-Bryan/arcs" target="_blank" rel="noopener">2019-Arcs
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/Michael-F-Bryan/arcs" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: An extensible framework for creating 2D CAD applications, written in Rust and based on an Entity-Component-System architecture.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/hannobraun/Fornjot" target="_blank" rel="noopener">2020-Fornjot
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/hannobraun/Fornjot" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Fornjot is an early-stage project to create a next-generation, code-first CAD application. Because the world needs another CAD program.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/https://github.com/mirmik/zencad" target="_blank" rel="noopener">2021-Zencad
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/https://github.com/mirmik/zencad" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: ZenCad - it&amp;rsquo;s a system for use oce geometry core in openscad&amp;rsquo;s script style. So, it&amp;rsquo;s openscad idea, python language and opencascade power in one.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://gitlab.com/blobfish/cadseer" target="_blank" rel="noopener">2021-cadseer
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A parametric solid modeler.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/ricosjp/truck" target="_blank" rel="noopener">2021-Truck
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/ricosjp/truck" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Truck is an open-source shape processing kernel by Rust.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/zenustech/zeno" target="_blank" rel="noopener">2022-Zeno
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/zenustech/zeno" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Open-source node system framework, to change your algorithmic code into useful tools to create much more complicated simulations!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/elalish/manifold" target="_blank" rel="noopener">2022-Manifold
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/elalish/manifold" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: If you like OpenSCAD / OpenJSCAD, you might also like ManifoldCAD - our own solid modelling web app. The operations are not GPU-accelerated, but it&amp;rsquo;s still pretty fast and a good way to test out our Manifold library.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/solvespace/solvespace" target="_blank" rel="noopener">2022-SolveSpace
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/solvespace/solvespace" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: SOLVESPACE is a free (GPLv3) parametric 3d CAD tool.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/BRL-CAD/brlcad" target="_blank" rel="noopener">2022-BRL-CAD
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/BRL-CAD/brlcad" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: BRL-CAD is a powerful cross-platform open source combinatorial solid modeling system that includes an interactive 3D solid geometry editor, a network-distributed symmetric multiprocessing (SMP) high-performance ray-tracer with support for rendering and geometric analysis, image and signal-processing tools, a system performance analysis benchmark suite, a flexible geometry scripting interface, and a high-performance geometric representation and analysis library.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/qcad/qcad" target="_blank" rel="noopener">2023-QCAD
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/qcad/qcad" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: QCAD - The Open Source 2D CAD. QCAD is a cross-platform CAD solution for Windows, macOS and Linux. It supports the DXF format and optionally the DWG format (through a proprietary plugin).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="step">STEP&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/stepcode/stepcode" target="_blank" rel="noopener">2013-STEPCode
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/stepcode/stepcode" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: STEPcode (formerly NIST&amp;rsquo;s STEP Class Library) is used with IFC, STEP, and other standards that utilize the technologies of ISO10303 (STEP). It generates C++ and Python from EXPRESS (10303-11) schemas. The code is capable of reading and writing STEP Part 21 exchange files. It also utilizes Parts 22 and 23 (SDAI and its C++ binding).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/ricosjp/ruststep" target="_blank" rel="noopener">2022-ruststep
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/ricosjp/ruststep" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Crates for STEP (Standard for the Exchange of Product model data) written in pure Rust aimed at replacing stepcode.&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>