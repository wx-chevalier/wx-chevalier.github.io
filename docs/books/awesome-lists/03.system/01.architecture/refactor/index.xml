<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Refactor | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/03.system/01.architecture/refactor/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/03.system/01.architecture/refactor/index.xml" rel="self" type="application/rss+xml"/><description>Refactor</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Refactor</title><link>https://ng-tech.icu/books/awesome-lists/03.system/01.architecture/refactor/</link></image><item><title>Refactor-List</title><link>https://ng-tech.icu/books/awesome-lists/03.system/01.architecture/refactor/refactor-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/03.system/01.architecture/refactor/refactor-list/</guid><description>&lt;h1 id="refactor-list">Refactor List&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Kristories/awesome-guidelines" target="_blank" rel="noopener">2017-Awesome Guidelines&lt;/a>: A curated list of high quality coding style conventions and standards.&lt;/li>
&lt;/ul>
&lt;h1 id="resource">Resource&lt;/h1>
&lt;h2 id="book">Book&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/phodal/migration" target="_blank" rel="noopener">2020-《系统重构与迁移指南》》📚&lt;/a>: 《系统重构与迁移指南》手把手教你分析、评估现有系统、制定重构策略、探索可行重构方案、搭建测试防护网、进行系统架构重构、服务架构重构、模块重构、代码重构、数据库重构、重构后的架构守护&lt;/li>
&lt;/ul></description></item><item><title>TechDebt-List</title><link>https://ng-tech.icu/books/awesome-lists/03.system/01.architecture/refactor/techdebt-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/03.system/01.architecture/refactor/techdebt-list/</guid><description>&lt;h1 id="tech-debt--技术负债">Tech Debt | 技术负债&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://6me.us/vrhF9" target="_blank" rel="noopener">2015-务实的技术债务管理&lt;/a>: 技术债务是由 Ward Cunningham 在 1992 年的报告中创造的一个比喻，被定义为当我们有意或无意地做了错误的或不理想的技术决策所累积的债务。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.zcfy.cc/article/we-need-to-talk-about-technical-debt-9670-24-ways-2097.html" target="_blank" rel="noopener">浅议技术债&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.freecodecamp.com/code-dependencies-are-the-devil-35ed28b556d?source=reading_list---------1-2" target="_blank" rel="noopener">code-dependencies-are-the-devil&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>