<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GUIArchitecture | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/03.system/01.architecture/guiarchitecture/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/03.system/01.architecture/guiarchitecture/index.xml" rel="self" type="application/rss+xml" />
    <description>GUIArchitecture</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>GUIArchitecture</title>
      <link>https://ng-tech.icu/books/awesome-lists/03.system/01.architecture/guiarchitecture/</link>
    </image>
    
    <item>
      <title>GUIArchitecture-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/03.system/01.architecture/guiarchitecture/guiarchitecture-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/03.system/01.architecture/guiarchitecture/guiarchitecture-list/</guid>
      <description>&lt;h1 id=&#34;gui-应用程序架构资料索引&#34;&gt;GUI 应用程序架构资料索引&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://developer.telerik.com/featured/three-ds-of-web-development-1-declarative-vs-imperative/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;three-ds-of-web-development&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000005353213#articleHeader9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;前端攻略，从路人甲到英雄无敌二：JavaScript 与不断演化的框架&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://realm.io/news/the-post-mvc-age/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Post-MVC Age&lt;/a&gt;: For a long time the Model View Controller (MVC) paradigm was the gold standard to build applications. Now it seems MVC’s star is dying in the JavaScript universe.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/javascript-scene/the-best-way-to-learn-to-code-is-to-code-learn-app-architecture-by-building-apps-7ec029db6e00#.cqmawrsoj&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Best Way to Learn to Code is to Code: Learn App Architecture by Building Apps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://martinfowler.com/eaaDev/uiArchs.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Martin Fowler-GUI Architectures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.codeproject.com/Articles/66585/Comparison-of-Architecture-presentation-patterns-M&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Comparison-of-Architecture-presentation-patterns&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mv&#34;&gt;&lt;code&gt;MV*&lt;/code&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://zserge.com/blog/android-mvp-mvvm-redux-history.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;THE EVOLUTION OF ANDROID ARCHITECTURE&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@trikita/the-evolution-of-android-architecture-6c6f04fc1927#.uuk4iuh9e&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the-evolution-of-android-architecture&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/android-news/android-architecture-2f12e1c7d4db#.vzmxahsi0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;android-architecture&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/ios-os-x-development/ios-architecture-patterns-ecba4c38de52#.iy9umjlqa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ios-architecture-patterns&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.albertzuurbier.com/index.php/programming/84-mvc-vs-mvp-vs-mvvm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Albert Zuurbier:MVC VS. MVP VS. MVVM&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mvc&#34;&gt;MVC&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.raywenderlich.com/132662/mvc-in-ios-a-modern-approach&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Model-View-Controller (MVC) in iOS: A Modern Approach&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.infoq.com/cn/articles/no-more-mvc-frameworks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;为什么我不再使用 MVC 框架&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/difference-between-mvc-mvp-mvvm-swapneel-salunkhe&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;difference-between-mvc-mvp-mvvm-swapneel-salunkhe&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@alexnm/is-mvc-dead-for-the-frontend-35b4d1fe39ec#.ez5efmi0b&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Is MVC dead for the frontend?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UpB&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;InfoQ 2016 年第 11 期 - 多形态 MVC 式 Web 架构的分类&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mvp&#34;&gt;MVP&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@andrzejchm/presentation-model-and-passive-view-in-mvp-the-android-way-fdba56a35b1e#.tgz1fwb6y&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;presentation-model-and-passive-view-in-mvp-the-android-way&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ivacf/archi&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Repository that showcases 3 Android app architectures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mvvm&#34;&gt;MVVM&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://labs.ribot.co.uk/approaching-android-with-mvvm-8ceec02d5442#.lmbtfveih&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;approaching-android-with-mvvm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;unidirectional-architecture&#34;&gt;Unidirectional Architecture&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://open.bekk.no/easier-reasoning-with-unidirectional-dataflow-and-immutable-data&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;easier-reasoning-with-unidirectional-dataflow-and-immutable-data&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://staltz.com/unidirectional-user-interface-architectures.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;unidirectional-user-interface-architectures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.infoq.com/news/2014/05/facebook-mvc-flux&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Facebook: MVC Does Not Scale, Use Flux Instead [Updated]&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.michaelridland.com/xamarin/mvvm-mvc-is-dead-is-unidirectional-a-mvvm-mvc-killer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mvvm-mvc-is-dead-is-unidirectional-a-mvvm-mvc-killer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/hacking-and-gonzo/flux-vs-mvc-design-patterns-57b28c0f71b7#.p0h9ih5zj&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;flux-vs-mvc-design-patterns&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/trikita/jedux&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;jedux&lt;/a&gt;:Redux architecture for Android&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@trikita/writing-a-todo-app-with-redux-on-android-5de31cfbdb4f#.tku4k1n0o&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;writing-a-todo-app-with-redux-on-android&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@markusctz/state-streams-and-react-7921e3c376a4#.dtrx0ep4j&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;state-streams-and-react&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;viperclean-architecture&#34;&gt;Viper/Clean Architecture&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.8thlight.com/uncle-bob/2012/08/13/the-clean-architecture.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Uncle Bob:the-clean-architecture&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://luboganev.github.io/blog/clean-architecture-pt1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Android Clean Architecture&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Clean-Swift/CleanStore&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A sample iOS app built using the Clean Swift architecture&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://mutualmobile.github.io/blog/2013/12/04/viper-introduction/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introduction to VIPER&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;unidirectional-architectures&#34;&gt;UniDirectional Architectures&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://staltz.com/unidirectional-user-interface-architectures.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;unidirectional-user-interface-architectures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/swift-programming/unidirectional-data-flow-architecture-redux-in-swift-6fa2ed5c3c76?source=reading_list---redux------3-4--------&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Unidirectional Data Flow Architecture (Redux) in Swift&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://reactjs.cn/react/docs/flux-overview.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Flux 应用架构中文文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
