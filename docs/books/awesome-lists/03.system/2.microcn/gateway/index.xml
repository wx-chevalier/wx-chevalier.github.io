<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gateway | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/03.system/2.microcn/gateway/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/03.system/2.microcn/gateway/index.xml" rel="self" type="application/rss+xml"/><description>Gateway</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Gateway</title><link>https://ng-tech.icu/books/awesome-lists/03.system/2.microcn/gateway/</link></image><item><title>Gateway-List</title><link>https://ng-tech.icu/books/awesome-lists/03.system/2.microcn/gateway/gateway-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/03.system/2.microcn/gateway/gateway-list/</guid><description>&lt;h1 id="service-gateway-list">Service Gateway List&lt;/h1>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://www.infoq.com/cn/news/2016/07/API-background-architecture-floo" target="_blank" rel="noopener">谈 API 网关的背景、架构以及落地方案&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/8KN" target="_blank" rel="noopener">一个简单可参考的 API 网关架构设计&lt;/a>: 网关一词较早出现在网络设备里面，比如两个相互独立的局域网段之间通过路由器或者桥接设备进行通信，这中间的路由或者桥接设备我们称之为网关。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://gist.github.com/StevenACoffman/acf1133da6c5ff5226c0f6eb8fbd8132" target="_blank" rel="noopener">2018-MicroService Proxy Gateway Solutions&lt;/a>: Kong, Traefik, Caddy, Linkerd, Fabio, Vulcand, and Netflix Zuul seem to be the most common in microservice proxy/gateway solutions. Kubernetes Ingress is often a simple Ngnix, which is difficult to separate the popularity from other things.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="rate-limiting">Rate Limiting&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://tutuge.me/2016/05/02/design-json-api-respoense/" target="_blank" rel="noopener">API 返回结果设计经验与总结&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/20872901" target="_blank" rel="noopener">API 调用次数限制实现&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="long-connection">Long Connection&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/xavjsa4NzRiVRxyMhifCDg" target="_blank" rel="noopener">2019-Golang 实现单机百万长连接服务，美图的三年优化经验&lt;/a>: 本文将从多个角度介绍长连接服务在内存优化路上的探索，首先会先通过介绍当前服务的架构模型，Go 语言的内存管理，让大家清晰地了解我们内存优化的方向和关注的重要数据。&lt;/li>
&lt;/ul>
&lt;h1 id="load-balancing--负载均衡">Load Balancing | 负载均衡&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://t.cn/RQAfr5x" target="_blank" rel="noopener">Introduction to modern network load balancing and proxying&lt;/a>: In this post I attempt to rectify the lack of information by providing a gentle introduction to modern network load balancing and proxying.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://os.51cto.com/art/201407/446441.htm" target="_blank" rel="noopener">Nginx/LVS/HAProxy 负载均衡软件的优缺点详解&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/23826170" target="_blank" rel="noopener">Google 是如何做负载均衡的？&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://tech.youzan.com/load-balancing-algorithm/" target="_blank" rel="noopener">分布式系统中负载均衡算法在高可用场景下的分析&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.duzhi.me/article/864.html" target="_blank" rel="noopener">多种负载均衡算法及其 Java 代码实现&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA3MDExNzcyNA==&amp;amp;mid=2650392075&amp;amp;idx=1&amp;amp;sn=fca2ebeca258e15f78a43c44bbb6153d&amp;amp;scene=0#wechat_redirect" target="_blank" rel="noopener">负载均衡的那些算法们 &lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Gateway-OpenSource-List</title><link>https://ng-tech.icu/books/awesome-lists/03.system/2.microcn/gateway/gateway-opensource-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/03.system/2.microcn/gateway/gateway-opensource-list/</guid><description>&lt;h1 id="api-gateway">API Gateway&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://www.haproxy.org/" target="_blank" rel="noopener">2001-HAProxy
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: HAProxy is a free, very fast and reliable solution offering high availability, load balancing, and proxying for TCP and HTTP-based applications.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/alibaba/tengine" target="_blank" rel="noopener">2013-Tengine
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A distribution of Nginx with some advanced features.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://getkong.org/" target="_blank" rel="noopener">2016-Kong
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: The open-source API Gateway and Microservices Management Layer, delivering high performance and reliability.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/alexazhou/VeryNginx" target="_blank" rel="noopener">2016-VeryNginx
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A very powerful and friendly nginx base on lua-nginx-module( openresty ) which provide WAF, Control Panel, and Dashboards.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/SteveLTN/https-portal" target="_blank" rel="noopener">2018-HTTPS Portal
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A fully automated HTTPS server powered by Nginx, Let&amp;rsquo;s Encrypt and Docker.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/containous/traefik" target="_blank" rel="noopener">2018-Træfik
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Træfik (pronounced like traffic) is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/dromara/shenyu" target="_blank" rel="noopener">2018-ShenYu
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: High-Performance Java API Gateway.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/TykTechnologies/tyk" target="_blank" rel="noopener">2018-Tyk
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Tyk Open Source API Gateway written in Go, supporting REST, GraphQL, TCP and gRPC protocols&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/apache/apisix" target="_blank" rel="noopener">2020-APISIX
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: APISIX provides rich traffic management features such as load balancing, dynamic upstream, canary release, circuit breaking, authentication, observability, and more.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="load-balancer--traffic-orchestration">Load Balancer &amp;amp; Traffic Orchestration&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/github/glb-director" target="_blank" rel="noopener">glb-director
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: GitHub Load Balancer Director and supporting tooling.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/megaease/easegress" target="_blank" rel="noopener">easegress
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A Cloud Native traffic orchestration system&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="long-connection-gateway">Long Connection Gateway&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/cometd/cometd" target="_blank" rel="noopener">2015-CometD
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: The CometD project, a scalable comet (server push) implementation for web messaging.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/deepstreamIO/deepstream.io" target="_blank" rel="noopener">2016-deepstream
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: deepstream is an open source server inspired by concepts behind financial trading technology. It allows clients and backend services to sync data, send messages and make rpcs at very high speed and scale.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/1ssqq1lxr/iot_push" target="_blank" rel="noopener">2017-iot_push
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: 基于 netty + mqtt 3.1.1 协议开发的物联网消息推送框架。&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>