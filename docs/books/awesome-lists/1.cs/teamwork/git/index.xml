<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/1.cs/teamwork/git/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/1.cs/teamwork/git/index.xml" rel="self" type="application/rss+xml" />
    <description>Git</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>Git</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/teamwork/git/</link>
    </image>
    
    <item>
      <title>Git-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/teamwork/git/git-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/teamwork/git/git-list/</guid>
      <description>&lt;h1 id=&#34;git-list&#34;&gt;Git List&lt;/h1&gt;
&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/22750675&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git 核心概念&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.epubit.com.cn/article/829&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git 的基本概念与入门&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;resource&#34;&gt;Resource&lt;/h1&gt;
&lt;h2 id=&#34;book&#34;&gt;Book&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/geeeeeeeeek/git-recipes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git recipes 📚&lt;/a&gt;: 高质量的 Git 中文教程，来自国外社区的优秀文章和个人实践&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book/zh/v2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pro Git v2 中文版 📚&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www-cs-students.stanford.edu/~blynn/gitmagic/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2007-Git Magic 📚&lt;/a&gt;: Rather than go into details, we provide rough instructions for particular effects. After repeated use, gradually you will understand how each trick works, and how to tailor the recipes for your needs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;collection&#34;&gt;Collection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xirong/my-git&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;my-git 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Individual collecting material of learning git（有关 git 的学习资料）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tutorial&#34;&gt;Tutorial&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.scottnonnenberg.com/better-git-configuration/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Better Git configuration&lt;/a&gt;: I recently took some time to really dig in, read through documentation, and review my global Git configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bBr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-A Guide to Single Branch Development with Git&lt;/a&gt;: This post is aimed at people who have read my last one which you can read here on my website and all those who want to learn more about how to incorporate git into their solo developer workflow.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bsu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-How to master the art of Git&lt;/a&gt;: Step up your software development game with 7 simple Git commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://codeburst.io/git-good-part-a-e0d826286a2a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-GIT Good: A Practical Introduction to GIT and GitHub (Hello GitHub)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.yubangweb.com/kan-wan-jiu-hui-yong-de-gitcao-zuo-tu-jie-fen-xi/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;看完就会用的 Git 操作图解分析&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://learngitbranching.js.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-LearnGitBranching&lt;/a&gt;: An interactive git visualization to challenge and educate!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tips&#34;&gt;Tips&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/git-tips/tips&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git tips&lt;/a&gt;: 常用的 Git 小技巧&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://wikileaks.org/ciav7p1/cms/page_1179773.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git Tips &amp;amp; Tricks&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/k88hudson/git-flight-rules&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Flight rules for git&lt;/a&gt;: Flight Rules are the hard-earned body of knowledge recorded in manuals that list, step-by-step, what to do if X occurs, and why. Essentially, they are extremely detailed, scenario-specific standard operating procedures. [&amp;hellip;]&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;rebase&#34;&gt;Rebase&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/merging-vs-rebasing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Merging vs. Rebasing&lt;/a&gt;: While merging and rebasing are similar in Git, they serve two different functions. Here&amp;rsquo;s what you should know to keep your histories as clean or as complete as you like.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bBO&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Why you should stop using Git rebase&lt;/a&gt;: After using Git for several years, I found myself gradually using more and more advanced Git commands as part of my daily workflow.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.freecodecamp.com/git-rebase-and-the-golden-rule-explained-70715eccc372#.8snfmpokv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;git-rebase-and-the-golden-rule-explained&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://hackernoon.com/mastering-git-why-rebase-is-amazing-a954485b128a?source=reading_list---------90-1---------&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mastering Git — Why Rebase is amazing&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;git-internals&#34;&gt;Git Internals&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2018/10/git-internals.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Git 原理入门&lt;/a&gt;: 这篇文章用一个实例，解释 Git 的运行过程，帮助你理解 Git 的原理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lufficc.com/blog/the-core-conception-of-git&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git 的核心概念&lt;/a&gt;: 本文不是 Git 使用教学篇，而是偏向理论方面，旨在更加深刻的理解 Git，这样才能更好的使用它，让工具成为我们得力的助手。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://fabiensanglard.net/git_code_review/diff.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git 的 Diff 算法分析&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.jobbole.com/98634/?f=tt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;探索 .git 目录，让你真正了理解 git&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.codingplayboy.com/2017/03/23/git_internal/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Git 由浅入深之存储原理&lt;/a&gt;：本来计划本篇介绍 Git 分支的相关知识点与操作，但是准备的过程中发现涉及到很多内部存储原理，决定先介绍一下 Git 存储原理，明白了这些，有助于理解后续内容，对 Git 的使用也会有很大帮助。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/LDeJQS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Understanding Git Filter-branch and the Git Storage Model&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Git-OpenSource-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/teamwork/git/git-opensource-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/teamwork/git/git-opensource-list/</guid>
      <description>&lt;h1 id=&#34;git-opensource-list&#34;&gt;Git OpenSource List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/stevemao/awesome-git-addons#git-deploy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;awesome-git-addons&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/github/gitignore&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github/gitignore&lt;/a&gt;: A collection of useful .gitignore templates&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/github/git-sizer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;git-sizer 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Compute various size metrics for a Git repository, flagging those that might cause problems&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Gazler/githug&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;githug 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Githug is designed to give you a practical way of learning git. It has a series of levels, each requiring you to use git commands to arrive at a correct answer. &lt;a href=&#34;https://codingstyle.cn/topics/51&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Here&lt;/a&gt; is tutorials.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.anishathalye.com/2016/04/25/dropbox-as-a-true-git-server/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dropbox-as-a-true-git-server&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jesseduffield/lazygit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;lazygit 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A simple terminal UI for git commands, written in Go with the gocui library.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dolthub/dolt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dolt 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Dolt is a SQL database that you can fork, clone, branch, merge, push and pull just like a git repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jmforsythe/Git-Heat-Map&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2023-Git-Heat-Map 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/jmforsythe/Git-Heat-Map&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Map showing the cpython repositiory, highlighting the files that Guido van Rossum changed the most.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;plugins&#34;&gt;Plugins&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/qw3rtman/git-fire&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;git-fire&lt;/a&gt;: git-fire 可以用于在某些紧急状态下将当前的文件暂存，提交并且推送到一个新的分支。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/rgburke/grv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-GRV 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: GRV is a terminal based interface for viewing git repositories. It allows refs, commits and diffs to be viewed, searched and filtered.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;client--数据可视化&#34;&gt;Client | 数据可视化&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://gitgraphjs.com/#&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gitgraphjs&lt;/a&gt;: gitgraphjs 提供了一套基于 JS 的绘图的 API，方便进行 Git 中常见的流程绘制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/so-fancy/diff-so-fancy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;diff-so-fancy&lt;/a&gt;: Git Diff 的可视化增强&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/buunguyen/octotree&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OctoTree&lt;/a&gt;:树状结构浏览代码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://harttle.com/2016/06/20/git-daemon.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;极简的 Git 服务器：git-daemon&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vraa/gitflowanimated&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git flow - Animated 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: An Experimental try in React to visualize and animate Gitflow.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/o2sh/onefetch&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Onefetch 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Onefetch is a command line tool that displays information about your Git project directly on your terminal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/initialcommit-com/git-sim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-git-sim 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/initialcommit-com/git-sim&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Visually simulate Git operations in your own repos with a single terminal command.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;github&#34;&gt;Github&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://juejin.im/post/59ade28051882538fd72fa2c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;强力推荐！那些你不能错过的 GitHub 插件和工具&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ghbtns.com/#star&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ghbtns.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/akshaykumar6/github-js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github-js&lt;/a&gt;: 对于 V3 版本的 Github 接口的封装&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://github-trends.ryotarai.info/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github Trends RSS&lt;/a&gt;:Github 每日趋势的 RSS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bDV&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github Notifier&lt;/a&gt;: 能够自动根据指定的 Github 用户名获取到相应的 Issue、Pull Request 等通知消息反馈给用户。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bDa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github with MathJax&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;internals&#34;&gt;Internals&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/google/gitprotocolio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gitprotocolio 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A Git protocol parser written in Go.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/go-gitea/gitea&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gitea 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: The goal of this project is to make the easiest, fastest, and most painless way of setting up a self-hosted Git service.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Git-Workflow-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/teamwork/git/git-workflow-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/teamwork/git/git-workflow-list/</guid>
      <description>&lt;h1 id=&#34;git-workflow-list&#34;&gt;Git Workflow List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;comparing-workflows&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.jobbole.com/81196/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;一个成功的 Git 分支模型&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://martinfowler.com/articles/feature-toggles.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;feature-toggles&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://fex.baidu.com/blog/2014/07/feature-flag/?qq-pf-to=pcqq.c2c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Feature Flag 功能发布控制&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;gitflow&#34;&gt;Gitflow&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://zhoulingyu.com/2017/05/08/Git-Work-Flow/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-简介我的 Git Work Flow&lt;/a&gt;：统一的工作流程是至关重要的，不管对于哪一个行业的作业来说都一样。对于我们开发人员，工作流包含了开发时 Git 的使用规范、Repo 管理的规范、测试过程的规范、设计交互的管理规范等等。由于测试、交互等设计到更多的人员，本篇文章暂且不表，重点说 Git 的使用规范和 repo 管理的规范。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://insights.thoughtworkers.org/gitflow-consider-harmful/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gitflow 有害论&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git 工作流分析&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://georgestocker.com/2020/03/04/please-stop-recommending-git-flow/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-Please stop recommending Git Flow!&lt;/a&gt;: The end, right? Well, not quite. I can tell a few of you are unconvinced by this line of reasoning, so let’s dig deeper into why the gitflow branching model should die in a fire.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pull-request&#34;&gt;Pull Request&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/rIt-XkgQGrKzdKkD5NSIRA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;浅谈 Pull Request 与 Change Request 研发协作模式&lt;/a&gt;: 近期有客户需求在 Gitee 上实现类似 ChangeRequest 的需求，所以针对两种模式做一个介绍，探讨两种模式的具体适用场景。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;feature-flag&#34;&gt;Feature Flag&lt;/h1&gt;
&lt;h1 id=&#34;hook&#34;&gt;Hook&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials/git-hooks/conceptual-overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;conceptual-overview&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kuitos/kuitos.github.io/issues/28&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;基于 git hooks 的前端代码质量控制解决方案&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;自定义 Git - Git 钩子&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://pre-commit.com/#node&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pre-commit by Yelp: A framework for managing and maintaining multi-language pre-commit hooks.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Github-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/teamwork/git/github-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/teamwork/git/github-list/</guid>
      <description>&lt;h1 id=&#34;github&#34;&gt;Github&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UQD&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;5 GitHub tips for new coders&lt;/a&gt;: As it’s own form of an open source contribution, I wanted to share with other folks new to coding my top 5 tips for using GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tiimgreen/github-cheat-sheet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2013-Github CheatSheet&lt;/a&gt;: A collection of cool hidden and not so hidden features of Git and GitHub. This cheat sheet was inspired by Zach Holman&amp;rsquo;s Git and GitHub Secrets talk at Aloha Ruby Conference 2012 (slides) and his More Git and GitHub Secrets talk at WDCNZ 2013 (slides).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;actions&#34;&gt;Actions&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/actions/starter-workflows&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-Starter Workflows&lt;/a&gt;: These are the workflow files for helping people get started with GitHub Actions.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
