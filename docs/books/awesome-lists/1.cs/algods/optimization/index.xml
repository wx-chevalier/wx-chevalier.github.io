<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Optimization | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/algods/optimization/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/1.cs/algods/optimization/index.xml" rel="self" type="application/rss+xml"/><description>Optimization</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Optimization</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/algods/optimization/</link></image><item><title>DP-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/algods/optimization/dp-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/algods/optimization/dp-list/</guid><description>&lt;h1 id="动态规划">动态规划&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/lmyclever/article/details/6667412" target="_blank" rel="noopener">树形 DP 总结&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.cnblogs.com/Sunnie69/p/5526564.html" target="_blank" rel="noopener">Codevs&lt;em>1040&lt;/em>[NOIP2001]&lt;em>统计单词个数&lt;/em>( 划分型动态规划 )&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.cnblogs.com/ziyi--caolu/archive/2013/08/04/3236035.html" target="_blank" rel="noopener">区间 DP 总结篇&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.zhihu.com/question/23995189/answer/613096905" target="_blank" rel="noopener">什么是动态规划？动态规划的意义是什么？&lt;/a>: 现在，我们试着自己来一步步“重新发明”DP。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/78220312" target="_blank" rel="noopener">2019-动态规划套路详解&lt;/a>: 动态规划算法似乎是一种很高深莫测的算法，你会在一些面试或算法书籍的高级技巧部分看到相关内容，什么状态转移方程，重叠子问题，最优子结构等高大上的词汇也可能让你望而却步。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/jhackshaw/tspvis" target="_blank" rel="noopener">2019-tspvis
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Dynamic visualizations of algorithms for solving the traveling salesman problem.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="树型动态规划">树型动态规划&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/txl199106/article/details/45372337" target="_blank" rel="noopener">树形动态规划(树形 DP)入门问题 — 初探 &amp;amp; 训练 &lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.cnblogs.com/shangyu/category/371886.html" target="_blank" rel="noopener">动态规划线性 DP 总结&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>GA-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/algods/optimization/ga-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/algods/optimization/ga-list/</guid><description>&lt;h1 id="generic-algorithm">Generic Algorithm&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/RZr" target="_blank" rel="noopener">2018-Evolution of a salesman&lt;/a>: A complete genetic algorithm tutorial for Python.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/RZ5" target="_blank" rel="noopener">2018-Genetic Algorithm Implementation in Python&lt;/a>: This tutorial will implement the genetic algorithm optimization technique in Python based on a simple example in which we are trying to maximize the output of an equation.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Search-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/algods/optimization/search-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/algods/optimization/search-list/</guid><description>&lt;h1 id="search-list">Search List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://blog.163.com/magicc_love/blog/static/185853662201471941758112/" target="_blank" rel="noopener">Java 线性查找和二分查找&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/KingPixil/wade" target="_blank" rel="noopener">2017-Wade
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/> #JavaScript#&lt;/a>: Blazing fast, 1kb search.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/v_july_v/article/details/7382693" target="_blank" rel="noopener">教你如何迅速秒杀掉：99% 的海量数据处理面试题&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://queue.acm.org/detail.cfm?id=3220266" target="_blank" rel="noopener">2018-Algorithms Behind Modern Storage Systems&lt;/a>: Different uses for read-optimized B-trees and write-optimized LSM-trees.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="b-tree">B-Tree&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/dazhong159/article/details/7963846/" target="_blank" rel="noopener">B- 树、B+ 树、B* 树的区别&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.cnblogs.com/yanghuahui/p/3483047.html" target="_blank" rel="noopener">B 树(B-Tree )的由来、数据结构、基本操作以及数据库索引的应用&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/hguisu/article/details/7786014" target="_blank" rel="noopener">B- 树和 B+ 树的应用：数据搜索和数据库索引 &lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/NicolasLM/bplustree" target="_blank" rel="noopener">2018-Bplustree
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: An on-disk B+tree for Python 3.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="lsm">LSM&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://drive.wps.cn/view/l/ace64c0b315a47ec898c97b7c06a255e" target="_blank" rel="noopener">LSM 官方论文&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.quora.com/How-does-the-Log-Structured-Merge-Tree-work" target="_blank" rel="noopener">How-does-the-Log-Structured-Merge-Tree-work&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/dbanote/article/details/8897599" target="_blank" rel="noopener">LSM 树 VS B+ 树&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.cnblogs.com/yanghuahui/p/3483754.html" target="_blank" rel="noopener">LSM 树由来、设计思想以及应用到 HBase 的索引&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="红黑树">红黑树&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.cs.auckland.ac.nz/software/AlgAnim/red_black.html" target="_blank" rel="noopener">红黑树概念综述&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.topcoder.com/community/data-science/data-science-tutorials/an-introduction-to-binary-search-and-red-black-trees/" target="_blank" rel="noopener">an-introduction-to-binary-search-and-red-black-trees&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.cs.auckland.ac.nz/software/AlgAnim/red_black_op.html" target="_blank" rel="noopener">Red-Black Tree Operation&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/yxc135/article/details/7939671" target="_blank" rel="noopener">红黑树的优点&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/eric491179912/article/details/6179908" target="_blank" rel="noopener">红黑树&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/chenhuajie123/article/details/11951777" target="_blank" rel="noopener"> 一步一图一代码，一定要让你真正彻底明白红黑树 &lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/v_JULY_v/article/details/6109153" target="_blank" rel="noopener">经典算法研究系列：五、红黑树算法的实现与剖析 &lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.cnblogs.com/yangecnu/p/Introduce-Red-Black-Tree.html" target="_blank" rel="noopener">浅谈算法和数据结构 : 九 平衡查找树之红黑树&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.cs.usfca.edu/~galles/visualization/RedBlack.html" target="_blank" rel="noopener">RedBlack Visualization&lt;/a>: 如果你希望可视化地查看整个红黑树的渲染过程，那么可以在这里可视化地查看每次插入删除时候需要引发的旋转操作。&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>