<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/index.xml" rel="self" type="application/rss+xml"/><description>Rust</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Rust</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/</link></image><item><title>Rust-ConcurrentProgramming-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/rust-concurrentprogramming-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/rust-concurrentprogramming-list/</guid><description>&lt;h1 id="rust-concurrent-programming-list">Rust Concurrent Programming List&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://cfsamson.gitbook.io/green-threads-explained-in-200-lines-of-rust/" target="_blank" rel="noopener">Green Threads Explained in 200 lines&lt;/a>: This book aims to explain green threads by using a small example where we implement a simple but working program where we use our own green threads to execute code.&lt;/li>
&lt;/ul></description></item><item><title>Rust-Dev-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/rust-dev-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/rust-dev-list/</guid><description>&lt;h1 id="rust-dev-list">Rust Dev List&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://anssi-fr.github.io/rust-guide/" target="_blank" rel="noopener">2020-Secure Rust Guidelines #Series#&lt;/a>: Thus, the object of this document is to compile hints and recommendations to stay in a safe zone for secure applications development while taking advantage of the range of possibilities Rust language can offer.&lt;/li>
&lt;/ul></description></item><item><title>Rust-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/rust-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/rust-list/</guid><description>&lt;h1 id="rust-list">Rust List&lt;/h1>
&lt;p>This file aggregates curated popular links for learning Rust. More reference about ITCS can turn to &lt;a href="https://github.com/wx-chevalier/Awesome-Lists" target="_blank" rel="noopener">AwesomeList: Guide to Galaxy&lt;/a>, which collects valuable, popular and up-to-date links for CS, including Programming Language, Software Engineering, Server Side Application, Infrastructure, InfoSecurity, Industrial Application, DataScienceAI, Frontend Technology(iOS, Android, RN, Electron), etc.&lt;/p>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UP1" target="_blank" rel="noopener">2017-Deep drive into rust programming language&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://vorner.github.io/difficult.html" target="_blank" rel="noopener">2018-Why is Rust difficult?&lt;/a>: Rust is considered difficult to learn by many people but I don’t consider it necessarily a bad thing for a language to be hard to learn.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.zhihu.com/question/30407715" target="_blank" rel="noopener">如何看待 Rust 的应用前景&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://octarineparrot.com/assets/mrfloya-thesis-ba.pdf" target="_blank" rel="noopener">Evaluation of performance and productivity metrics of potential programming languages in the HPC environment&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.oreilly.com/programming/free/files/why-rust.pdf?hmsr=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io" target="_blank" rel="noopener">why-rust?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.zhihu.com/question/27226962" target="_blank" rel="noopener">Golang vs Rust vs Dlang 那个更有前途&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/carols10cents/rustlings" target="_blank" rel="noopener">rustlings&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/lPbag5EbuWPUZOCvObW-yw" target="_blank" rel="noopener">2019-想要改变世界的 Rust 语言&lt;/a>: 通过了解 Rust 遵循什么样的设计哲学，进一步了解它的语法结构和编程理念，就可以系统地掌握这门语言的核心，而不至于在其纷繁复杂的语法细节中迷失。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/Dhghomon/easy_rust" target="_blank" rel="noopener">2020-Easy Rust&lt;/a>: Rust explained using easy English.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mmapped.blog/posts/15-when-rust-hurts.html" target="_blank" rel="noopener">2023-When Rust hurts&lt;/a>: This article details on how frustrating Rust can be if you approach it with a functional programming mindset and why Rust has no choice but to frustrate you.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="case-study">Case Study&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UVu" target="_blank" rel="noopener">Why Rust is the future of robotics&lt;/a>: We believe Rust is the future of robotics because it enables developers to be fearless, to create and enforce standards, and to build and rely on a strong community.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.figma.com/rust-in-production-at-figma-e10a0ec31929" target="_blank" rel="noopener">2018-Rust in production at Figma&lt;/a>: How Mozilla’s new language dramatically improved our server-side performance.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/YA1" target="_blank" rel="noopener">2018-Rust in Cloudflare&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="book">Book&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://doc.rust-lang.org/book/first-edition/README.html" target="_blank" rel="noopener">《The Rust Programming Language》 📚&lt;/a>: This book will teach you about the Rust Programming Language. Rust is a systems programming language focused on three goals: safety, speed, and concurrency.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/rustcc/RustPrimer" target="_blank" rel="noopener">《Rust Primer》 📚&lt;/a>: 中国人写的 Rust 编程书籍&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://rustbyexample.com/" target="_blank" rel="noopener">《Rust by Example》 📚&lt;/a>: Rust by Example (RBE) is a collection of runnable examples that illustrate various Rust concepts and standard libraries.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/EbTech/rust-algorithms" target="_blank" rel="noopener">2016-《Algorithm Cookbook in Rust》 📚&lt;/a>: A collection of classic data structures and algorithms, emphasizing beauty and clarity over full generality.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.ralfj.de/projects/rust-101/main.html" target="_blank" rel="noopener">2016-《Rust 101》 📚&lt;/a>: This is Rust-101, a small tutorial for the Rust language. It is intended to be an interactive, hands-on course: I believe the only way to really learn a language is to write code in it, so you should be coding during the course.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UPe" target="_blank" rel="noopener">2017-Programming Rust 📚&lt;/a>: This practical book introduces systems programmers to Rust, the new and cutting-edge language. You’ll learn how Rust offers the rare and valuable combination of statically verified memory safety and low-level control—imagine C++, but without dangling pointers, null pointer dereferences, leaks, or buffer overruns.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UPI" target="_blank" rel="noopener">2017-《Rust Essentials》-2nd 📚&lt;/a>: Leverage the functional programming and concurrency features of Rust and speed up your application development.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://course.rs/into-rust.html" target="_blank" rel="noopener">《Rust 语言圣经》 📚&lt;/a>: Rust 语言圣经涵盖从入门到精通所需的全部 Rust 知识，目录及内容都经过深思熟虑的设计，同时语言生动幽默，行文流畅自如，摆脱技术书籍常有的机器味和晦涩感。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/sunface/rust-by-practice" target="_blank" rel="noopener">《Rust By Practice》 📚&lt;/a>: Practice Rust with challenging examples, exercises and projects to narrow the gap between beginner and skilled-dev.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/LukeMathWalker/zero-to-production" target="_blank" rel="noopener">2022-《Zero To Production In Rust》 📚&lt;/a>: Zero To Production In Rust is an opinionated introduction to backend development using Rust.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://nnethercote.github.io/perf-book/introduction.html" target="_blank" rel="noopener">2023-《The Rust Performance Book》 📚&lt;/a>: This book contains many techniques that can improve the performance—speed and memory usage—of Rust programs. The Compile Times section also contains some techniques that will improve the compile times of Rust programs. Some techniques only require changing build configurations, but many require changing code.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="collection">Collection&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/sger/RustBooks" target="_blank" rel="noopener">Rust Books 🗃️&lt;/a>: 一系列对于 Rust 书籍的搜集。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/nicoburns/blessed-rs" target="_blank" rel="noopener">blessed-rs 🗃️&lt;/a>: An community guide to the Rust ecosystem&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/rust-lang/rustlings" target="_blank" rel="noopener">2019-rustlings
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: 🦀 Small exercises to get you used to reading and writing Rust code!&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="course">Course&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/pingcap/talent-plan" target="_blank" rel="noopener">TP 201: Practical Networked Applications in Rust 🎥&lt;/a>. A series of projects that incrementally develop a single Rust project from the ground up into a high-performance, networked, parallel and asynchronous key/value store. Along the way various real-world and practical Rust development subject matter are explored and discussed.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/pingcap/talent-plan/" target="_blank" rel="noopener">TP 202: Distributed Systems in Rust 🎥&lt;/a>. Adapted from the &lt;a href="http://nil.csail.mit.edu/6.824/2017/index.html" target="_blank" rel="noopener">MIT 6.824&lt;/a> distributed systems coursework, this course focuses on implementing important distributed algorithms, including the &lt;a href="https://raft.github.io/" target="_blank" rel="noopener">Raft&lt;/a> consensus algorithm, and the &lt;a href="https://storage.googleapis.com/pub-tools-public-publication-data/pdf/36726.pdf" target="_blank" rel="noopener">Percolator&lt;/a> distributed transaction protocol.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://google.github.io/comprehensive-rust/welcome.html" target="_blank" rel="noopener">2022-Comprehensive Rust 🎥&lt;/a>: This is a four day Rust course developed by the Android team. The course covers the full spectrum of Rust, from basic syntax to advanced topics like generics and error handling. It also includes Android-specific content on the last day.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/tweedegolf/101-rs" target="_blank" rel="noopener">2022-Rust 101 🎥&lt;/a>: Rust 101 is a university course for computer science students, introducing the Rust Programming Language, and is available for anyone who wants to teach Rust.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="tutorial">Tutorial&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://learning-rust.github.io/" target="_blank" rel="noopener">2018-Learning Rust&lt;/a>: Installation, Hello World, Cargo, Crates, Variable bindings, Functions, Primitive Data Types, Operators &amp;amp; Control Flows.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.goldsborough.me/rust/web/tutorial/2018/01/20/17-01-11-writing_a_microservice_in_rust/" target="_blank" rel="noopener">2018-Writing a Microservice in Rust&lt;/a>: Let me begin this article on Writing a Microservice in Rust by talking about C++.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="cheatsheet">CheatSheet&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://phaiax.github.io/rust-cheatsheet/" target="_blank" rel="noopener">2017-Rust CheatSheet&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/ankur-anand/five-min-rust" target="_blank" rel="noopener">2019-Five minutes Rust&lt;/a>: Rust concise 5 Minutes cheat-sheet for each concepts.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://overexact.com/rust-for-professionals/" target="_blank" rel="noopener">2023-Rust for professionals&lt;/a>: This is a short introduction to Rust, intended for developers that already know another language. In the examples, Rust is compared with TypeScript, JavaScript or Java, sometimes with C++ or Kotlin.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="series">Series&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://os.phil-opp.com/" target="_blank" rel="noopener">2018-Writing an OS in Rust #Series#&lt;/a>: This blog series creates a small operating system in the Rust programming language. Each post is a small tutorial and includes all needed code, so you can follow along if you like.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://eli.thegreenplace.net/2021/rest-servers-in-go-part-1-standard-library/" target="_blank" rel="noopener">2020-REST Servers in Go #Series#&lt;/a>: My plan with this series is to implement a simple REST server using several different approaches, which should make it easy to compare and contrast these approaches and their relative merits.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Rust-Network-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/rust-network-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/rust-network-list/</guid><description>&lt;h1 id="rust-network-list">Rust Network List&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://arveknudsen.com/posts/practical-networked-applications-in-rust/module-1/" target="_blank" rel="noopener">Practical Networked Applications in Rust #Series#&lt;/a>: They are originally intended by PingCAP to train students, new employees and new contributors to TiDB and TiKV and focus as such on subjects relevant to those projects, but are still appropriate to anyone with an interest in learning to make distributed systems in Go and/or Rust.&lt;/li>
&lt;/ul></description></item><item><title>Rust-OpenSource-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/rust-opensource-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/rust-opensource-list/</guid><description>&lt;h1 id="rust-opensource-list">Rust OpenSource List&lt;/h1>
&lt;p>本文包含了 Rust 相关的优秀开源框架与库，以及值得阅读的 Rust 优秀项目。&lt;/p>
&lt;h1 id="showcase">Showcase&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/rajasekarv/native_spark" target="_blank" rel="noopener">native_spark
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A new arguably faster implementation of Apache Spark from scratch in Rust.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/mosuka/bayard" target="_blank" rel="noopener">2019-Bayard
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Bayard is a full-text search and indexing server written in Rust.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/nkbai/learnrustbynats" target="_blank" rel="noopener">2020-从零实现消息中间件&lt;/a>: 那么我们今天就从零开始一步一步搭建一个极简消息中间件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/TimeToogo/tunshell" target="_blank" rel="noopener">tunshell
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Remote shell into ephemeral environments 🐚 🦀&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/tokio-rs/mini-redis" target="_blank" rel="noopener">mini-redis
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Incomplete Redis client and server implementation using Tokio&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/ducaale/ht" target="_blank" rel="noopener">ht
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Yet another HTTPie clone in Rust.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/qarmin/czkawka" target="_blank" rel="noopener">czkawka
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Multi functional app to find duplicates, empty folders, similar images etc.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/ivanceras/hackernews-sauron" target="_blank" rel="noopener">Hackernews sauron
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A fast, resilient, isomorphic hacker news clone in ~1k lines of rust.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/flxzt/rnote" target="_blank" rel="noopener">2021-rnote
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A simple drawing application to create handwritten notes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/LGUG2Z/komorebi" target="_blank" rel="noopener">komorebi
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: komorebi is a tiling window manager that works as an extension to Microsoft&amp;rsquo;s Desktop Window Manager in Windows 10 and above.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/GyulyVGC/sniffnet" target="_blank" rel="noopener">2022-sniffnet
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Cross-platform application to monitor your network traffic with ease&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="javascript-engine">JavaScript Engine&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/jasonwilliams/boa" target="_blank" rel="noopener">boa&lt;/a>: Javascript engine written in Rust&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/maekawatoshiki/rapidus" target="_blank" rel="noopener">rapidus&lt;/a>: A toy JavaScript engine implemented in Rust from scratch&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/hsiaosiyuan0/naive" target="_blank" rel="noopener">naive&lt;/a>: This is a naive JavaScript engine implemented in pure Rust to improve my JavaScript knowledge.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="tauri">Tauri&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/MirrorX-Desktop/MirrorX" target="_blank" rel="noopener">2022-MirrorX
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: MirrorX is a remote desktop control tool powered by Rust. With fully open-source client and server, native E2EE support, users can build SECURITY and FAST remote control network, which is fully under control of users.&lt;/li>
&lt;/ul>
&lt;h1 id="dev-toolkits">Dev Toolkits&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/guoxbin/dtool" target="_blank" rel="noopener">2019-dtool
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: dtool is a command-line tool collection to assist development.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/BurntSushi/ripgrep" target="_blank" rel="noopener">ripgrep
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: ripgrep combines the usability of The Silver Searcher with the raw speed of grep.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/japaric/criterion.rs" target="_blank" rel="noopener">criterion.rs
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Criterion.rs helps you write fast code by detecting and measuring performance improvements or regressions, even small ones, quickly and accurately.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/PistonDevelopers/piston" target="_blank" rel="noopener">Piston
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A modular game engine written in Rust.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/aochagavia/rocket" target="_blank" rel="noopener">Rocket
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A toy game in Rust, using Piston&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/koute/stdweb" target="_blank" rel="noopener">stdweb
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: The goal of this crate is to provide Rust bindings to the Web APIs and to allow a high degree of interoperability between Rust and JavaScript.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/atomashpolskiy/rustface" target="_blank" rel="noopener">Rustface
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Face detection library for the Rust programming language&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="library">Library&lt;/h1>
&lt;h2 id="concurrency">Concurrency&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/actix/actix" target="_blank" rel="noopener">2017-actix
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Actor framework for Rust.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/tokio-rs/tokio" target="_blank" rel="noopener">2019-tokio
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A runtime for writing reliable asynchronous applications with Rust. Provides I/O, networking, scheduling, timers, &amp;hellip;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/bytedance/monoio" target="_blank" rel="noopener">2021-Monoio
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: As a runtime based on io_uring, Monoio is designed to be the most efficient and performant Rust runtime.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="bindings">Bindings&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/neon-bindings/neon" target="_blank" rel="noopener">neon
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Rust bindings for writing safe and fast native Node.js modules.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/dtolnay/cxx" target="_blank" rel="noopener">cxx
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Safe interop between Rust and C++&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="database">Database&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/launchbadge/sqlx" target="_blank" rel="noopener">SQLx
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: SQLx is a modern SQL client built from the ground up for Rust, in Rust.&lt;/li>
&lt;/ul>
&lt;h2 id="web-framework">Web Framework&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/rustless/rustless" target="_blank" rel="noopener">Rustless
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Rustless is a REST-like API micro-framework for Rust. It&amp;rsquo;s designed to provide a simple DSL to easily develop RESTful APIs on top of the Iron web framework.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/imazen/imageflow" target="_blank" rel="noopener">imageflow
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: High-performance image manipulation for web servers. Includes imageflow_server, imageflow_tool, and libimageflow&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/seanmonstar/warp" target="_blank" rel="noopener">warp
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A super-easy, composable, web server framework for warp speeds.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="gui-framework">GUI Framework&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/redox-os/orbtk" target="_blank" rel="noopener">2019-Orbital Widget Toolkit
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: The Orbital Widget Toolkit is a multi platform (G)UI toolkit for building scalable user interfaces with the programming language Rust. It&amp;rsquo;s based on the Entity Component System Pattern and provides a functional-reactive like API.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/tauri-apps/tauri" target="_blank" rel="noopener">Tauri
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Build smaller, faster, and more secure desktop applications with a web frontend.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/tw93/Pake" target="_blank" rel="noopener">Pake&lt;/a>: 🤱🏻 Simply make any web page a desktop application using Rust. 🤱🏻 很简单的用 Rust 打包网页生成很小的桌面 App&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/2022-DioxusLabs/dioxus" target="_blank" rel="noopener">2022-Dioxus
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/2022-DioxusLabs/dioxus" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Dioxus is a portable, performant, and ergonomic framework for building cross-platform user interfaces in Rust.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="other">Other&lt;/h1></description></item><item><title>Rust-Syntax-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/rust-syntax-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/rust/rust-syntax-list/</guid><description>&lt;h1 id="rust-syntax-list">Rust Syntax List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/URP" target="_blank" rel="noopener">2017-Undefined vs Unsafe in Rust&lt;/a>: It’s a very useful but subtle distinction and I feel we’d be able to talk about safety more expressively if this was well known.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://arthurtw.github.io/2014/11/30/rust-borrow-lifetimes.html" target="_blank" rel="noopener">2014-Rust Borrow and Lifetimes&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UPa" target="_blank" rel="noopener">2014-Move vs Copy in Rust&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UPt" target="_blank" rel="noopener">2016-Understanding Rust: ownership, borrowing, lifetimes&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://jvns.ca/blog/2017/11/27/rust-ref/" target="_blank" rel="noopener">2017-What&amp;rsquo;s a reference in Rust?&lt;/a>: people who have read the lifetimes chapter in the Rust book and sorta understand it in principle but are still confused about a lot of pretty basic Rust things.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://cafbit.com/post/tokio_internals/" target="_blank" rel="noopener">2017-Tokio internals: Understanding Rust&amp;rsquo;s asynchronous IO framework from the bottom up&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/Ui5" target="_blank" rel="noopener">2018-Async/Await I: Self-Referential Structs&lt;/a>: This is the first in a series of blog posts about generators, async &amp;amp; await in Rust.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://rreverser.com/writing-complex-macros-in-rust/" target="_blank" rel="noopener">2018-Writing complex macros in Rust: Reverse Polish Notation&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://lucumr.pocoo.org/2018/3/31/you-cant-rust-that/" target="_blank" rel="noopener">2018-You can&amp;rsquo;t Rust that&lt;/a>: Handles, not self referential pointers; Reference count your way out of lifetime / borrow checker hell; Consider promoting new state instead of interior mutability.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://benjamincongdon.me/blog/2018/03/23/Python-Idioms-in-Rust/" target="_blank" rel="noopener">Python Idioms in Rust&lt;/a>: In fact, I found Rust to be rather Pythonic1. ✨ Sure, you have to be careful about types and ownership, but there is a strong case to be made that Rust shares many of the strengths of Python’s syntax.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="异常处理">异常处理&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://blog.yoshuawuyts.com/error-handling-survey/" target="_blank" rel="noopener">2019-ERROR HANDLING SURVEY&lt;/a>: This post is a survey of the current crates.io error library landscape.&lt;/li>
&lt;/ul></description></item></channel></rss>