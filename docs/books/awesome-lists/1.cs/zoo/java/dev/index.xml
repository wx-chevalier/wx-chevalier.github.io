<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/index.xml" rel="self" type="application/rss+xml"/><description>Dev</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Dev</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/</link></image><item><title>Gradle-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/gradle-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/gradle-list/</guid><description>&lt;h1 id="gradle-list">Gradle List&lt;/h1>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;h2 id="case-study">Case Study&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://www.infoq.com/cn/articles/Gradle-application-in-large-Java-projects/" target="_blank" rel="noopener">Gradle 在大型 Java 项目上的应用&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="resource">Resource&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://6me.us/QpxUcN" target="_blank" rel="noopener">How to decrease your Gradle build time by 65%?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/RGl3" target="_blank" rel="noopener">Gradle: How to manage dependencies&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.jobbole.com/71999/" target="_blank" rel="noopener">Gradle 入门系列&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.cnblogs.com/CloudTeng/p/3417762.html" target="_blank" rel="noopener">Gradle 学习系列&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.chengyunfeng.com/" target="_blank" rel="noopener">Gradle 奇技淫巧&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="book">Book&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://lippiouyang.gitbooks.io/gradle-in-action-cn/content/index.html" target="_blank" rel="noopener">Gradle 实战&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Java-Collection-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-collection-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-collection-list/</guid><description>&lt;h1 id="java-list">Java List&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="http://javaspecialists.eu/archive/Issue246.html" target="_blank" rel="noopener">2017-LRU Cache From LinkedHashMap&lt;/a>: The LinkedHashMap has an interesting feature, where we can order elements in &amp;ldquo;access order&amp;rdquo;, rather than the default &amp;ldquo;insertion order&amp;rdquo;. This allows us to build a light-weight LRU cache.&lt;/li>
&lt;/ul></description></item><item><title>Java-DataStructure-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-datastructure-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-datastructure-list/</guid><description>&lt;h1 id="java-datastructure-list">Java DataStructure List&lt;/h1>
&lt;h1 id="基础数据结构">基础数据结构&lt;/h1>
&lt;h2 id="regexp-正则表达式">RegExp: 正则表达式&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/zeeshanu/learn-regex" target="_blank" rel="noopener">2017-Learn regex the easy way&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.novixys.com/blog/java-regex-simple-patterns/" target="_blank" rel="noopener">2017-Java Regex – Simple Patterns&lt;/a>: Learn the basics of regular expression pattern matching in Java. Covers a few basic regular expression constructs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zeroturnaround.com/rebellabs/java-regular-expressions-cheat-sheet" target="_blank" rel="noopener">Java regular expressions cheat sheet&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="datetime-时间与日期">DateTime: 时间与日期&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://www.baeldung.com/java-8-date-time-intro" target="_blank" rel="noopener">2016-Introduction to the Java 8 Date/Time API&lt;/a>: Java 8 introduced new APIs for Date and Time to address the shortcomings of the older java.util.Date and java.util.Calendar.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://codeblog.jonskeet.uk/2017/04/23/all-about-java-util-date/" target="_blank" rel="noopener">2017-All About Java.util.date&lt;/a>: This post is an attempt to reduce the number of times I need to explain things in Stack Overflow comments.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.liaoxuefeng.com/article/00141939241051502ada88137694b62bfe844cd79e12c32000" target="_blank" rel="noopener">Java 8 时间与日期处理&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.importnew.com/14140.html" target="_blank" rel="noopener">Java 8 时间/日期&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://javarevisited.blogspot.com/2015/03/20-examples-of-date-and-time-api-from-Java8.html" target="_blank" rel="noopener">2015-20 个关于 Java 8 时间与日期的例子&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="collection-集合类型">Collection: 集合类型&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://www.javatpoint.com/collections-in-java" target="_blank" rel="noopener">Collections in Java by Java Point #Series#&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="map-映射类型">Map: 映射类型&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="http://www.baeldung.com/java-hashcode" target="_blank" rel="noopener">2017-Guide to hashCode() in Java&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Java-Dev-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-dev-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-dev-list/</guid><description>&lt;h1 id="java-dev-list">Java Dev List&lt;/h1>
&lt;h1 id="ide">IDE&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial/" target="_blank" rel="noopener">IntelliJ IDEA&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Java-FunctionalProgramming-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-functionalprogramming-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-functionalprogramming-list/</guid><description>&lt;h1 id="java-functional-programming-list">Java Functional Programming List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/baJ" target="_blank" rel="noopener">2017-Functional alternatives to the traditional for loop&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://immutables.github.io/" target="_blank" rel="noopener">2017-Immutables
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Java annotation processors to generate simple, safe and consistent value objects. Do not repeat yourself, try Immutables, the most comprehensive tool in this field!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.ibm.com/developerworks/java/library/j-java8idioms1/index.html" target="_blank" rel="noopener">2017-Java 8 idioms #Series#&lt;/a>: Think declaratively to adopt functional techniques in your Java programs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.importnew.com/28139.html" target="_blank" rel="noopener">2018-精练代码：一次 Java 函数式编程的重构之旅&lt;/a>: 通过一次并发处理数据集的 Java 代码重构之旅，展示函数式编程如何使得代码更加精练。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="function">Function&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://dzone.com/articles/a-comprehensive-walk-over-java-method-references" target="_blank" rel="noopener">A Comprehensive Walk Through Java Method Linkss&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.zhihu.com/question/21395848" target="_blank" rel="noopener">Java 中的闭包与对象&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="lambda">Lambda&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.zhihu.com/question/51491241/answer/126232275" target="_blank" rel="noopener">Java 中普通 lambda 表达式和方法引用本质上有什么区别？&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.importnew.com/16436.html" target="_blank" rel="noopener">Java8 Lambda 表达式 10 个示例&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="stream--流">Stream | 流&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://zeroturnaround.com/rebellabs/java-8-streams-cheat-sheet/" target="_blank" rel="noopener">2017-Java Streams cheat sheet&lt;/a>: This blog post discusses the streams API, but if you’re impatient, here’s the 1 page Java 8 streams cheat sheet, click on it, save it, print it out!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.baeldung.com/java-8-streams" target="_blank" rel="noopener">2018-The Java 8 Stream API Tutorial&lt;/a>: In this in-depth tutorial, we will go through the practical usage of Java 8 Streams from creation to parallel execution.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Java-Network-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-network-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-network-list/</guid><description>&lt;h1 id="java-网络操作资料索引">Java 网络操作资料索引&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="http://6me.us/AB7" target="_blank" rel="noopener">Comet: having fun with the Java HTTP Stack&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="nio">NIO&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://tutorials.jenkov.com/java-nio/index.html" target="_blank" rel="noopener">2014-Java NIO Tutorial #Series#&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://zoeminghong.github.io/2016/06/12/nio20160612/" target="_blank" rel="noopener">2016-NIO 全解析说明&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.jasongj.com/java/nio_reactor/" target="_blank" rel="noopener">2016-Java IO 模型从 BIO 到 NIO 和 Reactor 模式&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.ibm.com/developerworks/cn/java/j-nio2-1/" target="_blank" rel="noopener">IBM DeveloperWorkers Java NIO2&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/23488863" target="_blank" rel="noopener">Java NIO 浅析&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.baeldung.com/java-nio-selector" target="_blank" rel="noopener">2018-Introduction to the Java NIO Selector&lt;/a>: In this article, we’ll explore the introductory parts of Java NIO’s Selector component.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="nio2">NIO2&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.baeldung.com/?s=NIO2" target="_blank" rel="noopener">Java NIO2 #Series#&lt;/a>: Series for Java NIO2&lt;/li>
&lt;/ul></description></item><item><title>Java-Storage-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-storage-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-storage-list/</guid><description>&lt;h1 id="java-storage-list">Java Storage List&lt;/h1>
&lt;h1 id="jdbc">JDBC&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://dalesbred.org/" target="_blank" rel="noopener">Dalesbred
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="">Sharding-JDBC&lt;/a>:当当网出品的分库分表中间件&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="文件系统">文件系统&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/uniVocity/univocity-parsers" target="_blank" rel="noopener">uniVocity-parsers&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Java-Syntax-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-syntax-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-syntax-list/</guid><description>&lt;h1 id="java-syntax-list--java-语法基础资料索引">Java Syntax List | Java 语法基础资料索引&lt;/h1>
&lt;h1 id="controlflow--流程控制">ControlFlow | 流程控制&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="http://ashtonkemerling.com/blog/2017/01/26/java-without-if/" target="_blank" rel="noopener">Java Without If&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="modularity--模块化">Modularity | 模块化&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://guides.gradle.org/building-java-9-modules/" target="_blank" rel="noopener">2017-Building Java 9 Modules With Gradle&lt;/a>: In this guide, you’ll learn exactly what you need to change in your Java application to modules with gradle&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.plan99.net/is-jigsaw-good-or-is-it-wack-ec634d36dd6f" target="_blank" rel="noopener">2017-Is Jigsaw good or is it wack?&lt;/a>: Jigsaw is the name of a the project to build a Java Platform Module System (JPMS) into the Java 9 platform. Yesterday some of the members of the JPMS expert group published an open letter that, to not put too fine a point on it, damns the design of the new system and states that nobody should use it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4e" target="_blank" rel="noopener">2017-Migrating to Java 9 Modules&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/CodeFX-org/demo-java-9" target="_blank" rel="noopener">2016-Demonstrates Java 9&amp;rsquo;s new features&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/OPe" target="_blank" rel="noopener">2016-Java 9 的模块化&amp;ndash;壮士断&amp;quot;腕&amp;quot;的涅槃&lt;/a>：这可能是 Java 有史以来最大的 Feature，它将自己长期依赖 All-in-one/Environment 的结构，转身为 Module 为基础的组件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@annimon119/java-9-project-jigsaw-modularity-679fa88f7f2#.3z50mk2pv" target="_blank" rel="noopener">java-9-project-jigsaw-modularity&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;amp;mid=2659598755&amp;amp;idx=1&amp;amp;sn=6c3247a42105fb290ccfc3ee02530b46&amp;amp;chksm=8be994b1bc9e1da7d922e1d98d7e6afda019a5fa74fd9beebc11406fd94e7dd628d841b45f2f&amp;amp;mpshare=1&amp;amp;scene=23&amp;amp;srcid=1225TdKqbBRjlcOij7NR9JQc#rd" target="_blank" rel="noopener">Java 模块化技术演进和对现有应用微服务化的意义&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://steveperkins.com/using-java-9-modularization-to-ship-zero-dependency-native-apps/" target="_blank" rel="noopener">2017-Using Java 9 Modularization to Ship Zero-Dependency Native Apps&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="error-handle--异常处理">Error Handle | 异常处理&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://lrwinx.github.io/2016/04/28/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E8%AE%BE%E8%AE%A1java%E5%BC%82%E5%B8%B8/" target="_blank" rel="noopener">2016-如何优雅的设计 Java 异常&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/hp910315/article/details/51067333" target="_blank" rel="noopener">2016-Java 编程手册—异常处理与断言&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://carlmastrangelo.com/blog/javas-mysterious-interrupt" target="_blank" rel="noopener">2018-Java’s Mysterious Interrupt&lt;/a>: One of the lesser known parts of Java is InterruptedException.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://nobugsproject.com/2017/05/28/11-mistakes-java-developers-make-when-using-exceptions/" target="_blank" rel="noopener">2018-11 Mistakes Java Developers make when Using Exceptions&lt;/a>: See the 11 mistakes Java Developers make when using Exceptions.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.ibm.com/developerworks/cn/java/j-lo-exception-misdirection" target="_blank" rel="noopener">Java 异常处理的误区和经验总结&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="meta-programming">Meta Programming&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://tech.youzan.com/java-metaprograming/" target="_blank" rel="noopener">2017-Java 元编程及其应用&lt;/a>：可以说,社区内,成功的 web 框架中基本没有不强依赖元编程技术的,框架做的工作越多,应用编写就越轻松。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/ssw" target="_blank" rel="noopener">Bytecode manipulation with Javassist for fun and profit part I: Implementing a lightweight IoC container in 300 lines of code&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="generic--泛型">Generic | 泛型&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://zeroturnaround.com/rebellabs/java-generics-cheat-sheet/" target="_blank" rel="noopener">Java Generics cheat sheet&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://ybin.cc/programming/java-variance-in-generics/" target="_blank" rel="noopener">Java 泛型里的协变和逆变 &lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://onewebsql.com/blog/generics-extends-super" target="_blank" rel="noopener">generics-extends-super&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="reflect--反射">Reflect | 反射&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://www.importnew.com/21211.html" target="_blank" rel="noopener">Java 反射在 JVM 的实现&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://juejin.im/post/598ea9116fb9a03c335a99a4" target="_blank" rel="noopener">2017-Java 反射由浅入深 | 进阶必备&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://norswap.com/fast-java-reflection/" target="_blank" rel="noopener">2017-Java Reflection, 1000x Faster&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Java-System-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-system-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-system-list/</guid><description>&lt;h1 id="java-system-list">Java System List&lt;/h1>
&lt;h2 id="jacob">Jacob&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://edn.embarcadero.com/article/33305" target="_blank" rel="noopener">Java COM Automation with Jacob and JBuilder - by Yuri Marx&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.land-of-kain.de/docs/jacob/" target="_blank" rel="noopener">Tutorial: Jacob &amp;amp; Microsoft Word&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.javaquery.com/2013/12/getting-started-with-jacob-example-with.html" target="_blank" rel="noopener">getting-started-with-jacob-example-with&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Java-Test-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-test-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-test-list/</guid><description>&lt;h1 id="java-测试-learning--practices-list">Java 测试 Learning &amp;amp; Practices List&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/21372411" target="_blank" rel="noopener">一篇文章带你了解 Java 服务端单元测试的方方面面(保持更新)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="junit">JUnit&lt;/h1>
&lt;h2 id="junit-4">JUnit 4&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://dzone.com/articles/working-with-junitparams" target="_blank" rel="noopener">Working With JUnitParams&lt;/a>: JUnitParams allows you to easily create parameterized tests in JUnit and provides a plethora of ways to pass parameters to test methods.&lt;/li>
&lt;/ul>
&lt;h2 id="junit-5">Junit 5&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/URs" target="_blank" rel="noopener">2017-JUnit 5 简介 #Series#&lt;/a>: 了解全新 JUnit Jupiter API 中的注解、断言和前置条件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://junit.org/junit5/docs/current/user-guide/" target="_blank" rel="noopener">JUnit 5 官方用户指南 #Series#&lt;/a>：中文译本参考&lt;a href="https://sjyuan.cc/junit5/5.0.2/user-guide-cn/" target="_blank" rel="noopener">这里&lt;/a>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.codefx.org/libraries/junit-5-dynamic-tests/" target="_blank" rel="noopener">JUnit 5 – Dynamic Tests&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="mock">Mock&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://www.reddit.com/r/java/comments/61hci7/mockneat_a_java_library_that_allows_the_user_to/" target="_blank" rel="noopener">MockNeat a java library that allows the user to generate arbitrary data&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="mockito">Mockito&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://6me.us/PVo0xH" target="_blank" rel="noopener">Stubbing and Mocking with Mockito 2 and JUnit&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Java-UI-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-ui-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-ui-list/</guid><description>&lt;h1 id="java-ui-list">Java UI List&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://docs.oracle.com/javase/8/javafx/interoperability-tutorial/swing-fx-interoperability.htm" target="_blank" rel="noopener">interoperability-tutorial/swing-fx-interoperability&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Maven-List</title><link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/maven-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/maven-list/</guid><description>&lt;h1 id="maven-learning--practices-list">Maven Learning &amp;amp; Practices List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://tracylihui.github.io/2015/07/09/Maven%E5%AD%A6%E4%B9%A0/" target="_blank" rel="noopener">Maven 学习&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.linuxidc.com/Linux/2014-12/110503.htm" target="_blank" rel="noopener">Maven 实战(许晓斌著)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/lfsfxy9/article/category/1516519" target="_blank" rel="noopener">CSDN-Maven 学习每周总结&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://ayayui.gitbooks.io/tutorialspoint-maven/content/book/maven_build_life_cycle.html" target="_blank" rel="noopener">tutorialspoint-maven&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.kyleblaney.com/maven-best-practices/" target="_blank" rel="noopener">maven-best-practices&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/AaN" target="_blank" rel="noopener">2017-用 Maven 管理多模块项目的最佳实践&lt;/a>: 将介绍如何使用 Maven 来模块化管理项目及其依赖。&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>