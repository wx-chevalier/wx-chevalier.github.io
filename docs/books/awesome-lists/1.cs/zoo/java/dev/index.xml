<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/index.xml" rel="self" type="application/rss+xml" />
    <description>Dev</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>Dev</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/</link>
    </image>
    
    <item>
      <title>Gradle-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/gradle-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/gradle-list/</guid>
      <description>&lt;h1 id=&#34;gradle-list&#34;&gt;Gradle List&lt;/h1&gt;
&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;
&lt;h2 id=&#34;case-study&#34;&gt;Case Study&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.infoq.com/cn/articles/Gradle-application-in-large-Java-projects/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gradle 在大型 Java 项目上的应用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;resource&#34;&gt;Resource&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/QpxUcN&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to decrease your Gradle build time by 65%?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/RGl3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gradle: How to manage dependencies&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.jobbole.com/71999/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gradle 入门系列&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.cnblogs.com/CloudTeng/p/3417762.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gradle 学习系列&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.chengyunfeng.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gradle 奇技淫巧&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;book&#34;&gt;Book&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lippiouyang.gitbooks.io/gradle-in-action-cn/content/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gradle 实战&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Java-Collection-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-collection-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-collection-list/</guid>
      <description>&lt;h1 id=&#34;java-list&#34;&gt;Java List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://javaspecialists.eu/archive/Issue246.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-LRU Cache From LinkedHashMap&lt;/a&gt;: The LinkedHashMap has an interesting feature, where we can order elements in &amp;ldquo;access order&amp;rdquo;, rather than the default &amp;ldquo;insertion order&amp;rdquo;. This allows us to build a light-weight LRU cache.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Java-DataStructure-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-datastructure-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-datastructure-list/</guid>
      <description>&lt;h1 id=&#34;java-datastructure-list&#34;&gt;Java DataStructure List&lt;/h1&gt;
&lt;h1 id=&#34;基础数据结构&#34;&gt;基础数据结构&lt;/h1&gt;
&lt;h2 id=&#34;regexp-正则表达式&#34;&gt;RegExp: 正则表达式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zeeshanu/learn-regex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Learn regex the easy way&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.novixys.com/blog/java-regex-simple-patterns/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Java Regex – Simple Patterns&lt;/a&gt;: Learn the basics of regular expression pattern matching in Java. Covers a few basic regular expression constructs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zeroturnaround.com/rebellabs/java-regular-expressions-cheat-sheet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java regular expressions cheat sheet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;datetime-时间与日期&#34;&gt;DateTime: 时间与日期&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.baeldung.com/java-8-date-time-intro&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Introduction to the Java 8 Date/Time API&lt;/a&gt;: Java 8 introduced new APIs for Date and Time to address the shortcomings of the older java.util.Date and java.util.Calendar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://codeblog.jonskeet.uk/2017/04/23/all-about-java-util-date/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-All About Java.util.date&lt;/a&gt;: This post is an attempt to reduce the number of times I need to explain things in Stack Overflow comments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.liaoxuefeng.com/article/00141939241051502ada88137694b62bfe844cd79e12c32000&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java 8 时间与日期处理&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.importnew.com/14140.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java 8 时间/日期&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://javarevisited.blogspot.com/2015/03/20-examples-of-date-and-time-api-from-Java8.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-20 个关于 Java 8 时间与日期的例子&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;collection-集合类型&#34;&gt;Collection: 集合类型&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.javatpoint.com/collections-in-java&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Collections in Java by Java Point #Series#&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;map-映射类型&#34;&gt;Map: 映射类型&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baeldung.com/java-hashcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Guide to hashCode() in Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Java-Dev-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-dev-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-dev-list/</guid>
      <description>&lt;h1 id=&#34;java-dev-list&#34;&gt;Java Dev List&lt;/h1&gt;
&lt;h1 id=&#34;ide&#34;&gt;IDE&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/judasn/IntelliJ-IDEA-Tutorial/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IntelliJ IDEA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Java-FunctionalProgramming-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-functionalprogramming-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-functionalprogramming-list/</guid>
      <description>&lt;h1 id=&#34;java-functional-programming-list&#34;&gt;Java Functional Programming List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/baJ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Functional alternatives to the traditional for loop&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://immutables.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Immutables 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Java annotation processors to generate simple, safe and consistent value objects. Do not repeat yourself, try Immutables, the most comprehensive tool in this field!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ibm.com/developerworks/java/library/j-java8idioms1/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Java 8 idioms #Series#&lt;/a&gt;: Think declaratively to adopt functional techniques in your Java programs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.importnew.com/28139.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-精练代码：一次 Java 函数式编程的重构之旅&lt;/a&gt;: 通过一次并发处理数据集的 Java 代码重构之旅，展示函数式编程如何使得代码更加精练。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;function&#34;&gt;Function&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/a-comprehensive-walk-over-java-method-references&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A Comprehensive Walk Through Java Method Linkss&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/21395848&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java 中的闭包与对象&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;lambda&#34;&gt;Lambda&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/51491241/answer/126232275&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java 中普通 lambda 表达式和方法引用本质上有什么区别？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.importnew.com/16436.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java8 Lambda 表达式 10 个示例&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;stream--流&#34;&gt;Stream | 流&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zeroturnaround.com/rebellabs/java-8-streams-cheat-sheet/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Java Streams cheat sheet&lt;/a&gt;: This blog post discusses the streams API, but if you’re impatient, here’s the 1 page Java 8 streams cheat sheet, click on it, save it, print it out!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.baeldung.com/java-8-streams&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-The Java 8 Stream API Tutorial&lt;/a&gt;: In this in-depth tutorial, we will go through the practical usage of Java 8 Streams from creation to parallel execution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Java-Network-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-network-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-network-list/</guid>
      <description>&lt;h1 id=&#34;java-网络操作资料索引&#34;&gt;Java 网络操作资料索引&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://6me.us/AB7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Comet: having fun with the Java HTTP Stack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;nio&#34;&gt;NIO&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://tutorials.jenkov.com/java-nio/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2014-Java NIO Tutorial #Series#&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://zoeminghong.github.io/2016/06/12/nio20160612/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-NIO 全解析说明&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.jasongj.com/java/nio_reactor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Java IO 模型从 BIO 到 NIO 和 Reactor 模式&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ibm.com/developerworks/cn/java/j-nio2-1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IBM DeveloperWorkers Java NIO2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/23488863&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java NIO 浅析&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.baeldung.com/java-nio-selector&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Introduction to the Java NIO Selector&lt;/a&gt;: In this article, we’ll explore the introductory parts of Java NIO’s Selector component.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;nio2&#34;&gt;NIO2&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.baeldung.com/?s=NIO2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java NIO2 #Series#&lt;/a&gt;: Series for Java NIO2&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Java-Storage-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-storage-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-storage-list/</guid>
      <description>&lt;h1 id=&#34;java-storage-list&#34;&gt;Java Storage List&lt;/h1&gt;
&lt;h1 id=&#34;jdbc&#34;&gt;JDBC&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://dalesbred.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dalesbred 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;&#34;&gt;Sharding-JDBC&lt;/a&gt;:当当网出品的分库分表中间件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;文件系统&#34;&gt;文件系统&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/uniVocity/univocity-parsers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;uniVocity-parsers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Java-Syntax-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-syntax-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-syntax-list/</guid>
      <description>&lt;h1 id=&#34;java-syntax-list--java-语法基础资料索引&#34;&gt;Java Syntax List | Java 语法基础资料索引&lt;/h1&gt;
&lt;h1 id=&#34;controlflow--流程控制&#34;&gt;ControlFlow | 流程控制&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ashtonkemerling.com/blog/2017/01/26/java-without-if/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java Without If&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;modularity--模块化&#34;&gt;Modularity | 模块化&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://guides.gradle.org/building-java-9-modules/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Building Java 9 Modules With Gradle&lt;/a&gt;: In this guide, you’ll learn exactly what you need to change in your Java application to modules with gradle&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.plan99.net/is-jigsaw-good-or-is-it-wack-ec634d36dd6f&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Is Jigsaw good or is it wack?&lt;/a&gt;: Jigsaw is the name of a the project to build a Java Platform Module System (JPMS) into the Java 9 platform. Yesterday some of the members of the JPMS expert group published an open letter that, to not put too fine a point on it, damns the design of the new system and states that nobody should use it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/b4e&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Migrating to Java 9 Modules&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/CodeFX-org/demo-java-9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Demonstrates Java 9&amp;rsquo;s new features&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/OPe&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Java 9 的模块化&amp;ndash;壮士断&amp;quot;腕&amp;quot;的涅槃&lt;/a&gt;：这可能是 Java 有史以来最大的 Feature，它将自己长期依赖 All-in-one/Environment 的结构，转身为 Module 为基础的组件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@annimon119/java-9-project-jigsaw-modularity-679fa88f7f2#.3z50mk2pv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;java-9-project-jigsaw-modularity&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;amp;mid=2659598755&amp;amp;idx=1&amp;amp;sn=6c3247a42105fb290ccfc3ee02530b46&amp;amp;chksm=8be994b1bc9e1da7d922e1d98d7e6afda019a5fa74fd9beebc11406fd94e7dd628d841b45f2f&amp;amp;mpshare=1&amp;amp;scene=23&amp;amp;srcid=1225TdKqbBRjlcOij7NR9JQc#rd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java 模块化技术演进和对现有应用微服务化的意义&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://steveperkins.com/using-java-9-modularization-to-ship-zero-dependency-native-apps/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Using Java 9 Modularization to Ship Zero-Dependency Native Apps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;error-handle--异常处理&#34;&gt;Error Handle | 异常处理&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://lrwinx.github.io/2016/04/28/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E8%AE%BE%E8%AE%A1java%E5%BC%82%E5%B8%B8/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-如何优雅的设计 Java 异常&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/hp910315/article/details/51067333&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Java 编程手册—异常处理与断言&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://carlmastrangelo.com/blog/javas-mysterious-interrupt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Java’s Mysterious Interrupt&lt;/a&gt;: One of the lesser known parts of Java is InterruptedException.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://nobugsproject.com/2017/05/28/11-mistakes-java-developers-make-when-using-exceptions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-11 Mistakes Java Developers make when Using Exceptions&lt;/a&gt;: See the 11 mistakes Java Developers make when using Exceptions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ibm.com/developerworks/cn/java/j-lo-exception-misdirection&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java 异常处理的误区和经验总结&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;meta-programming&#34;&gt;Meta Programming&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://tech.youzan.com/java-metaprograming/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Java 元编程及其应用&lt;/a&gt;：可以说,社区内,成功的 web 框架中基本没有不强依赖元编程技术的,框架做的工作越多,应用编写就越轻松。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/ssw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bytecode manipulation with Javassist for fun and profit part I: Implementing a lightweight IoC container in 300 lines of code&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;generic--泛型&#34;&gt;Generic | 泛型&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://zeroturnaround.com/rebellabs/java-generics-cheat-sheet/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java Generics cheat sheet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://ybin.cc/programming/java-variance-in-generics/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java 泛型里的协变和逆变 &lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://onewebsql.com/blog/generics-extends-super&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;generics-extends-super&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reflect--反射&#34;&gt;Reflect | 反射&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.importnew.com/21211.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java 反射在 JVM 的实现&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://juejin.im/post/598ea9116fb9a03c335a99a4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Java 反射由浅入深 | 进阶必备&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://norswap.com/fast-java-reflection/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Java Reflection, 1000x Faster&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Java-System-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-system-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-system-list/</guid>
      <description>&lt;h1 id=&#34;java-system-list&#34;&gt;Java System List&lt;/h1&gt;
&lt;h2 id=&#34;jacob&#34;&gt;Jacob&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://edn.embarcadero.com/article/33305&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java COM Automation with Jacob and JBuilder - by Yuri Marx&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.land-of-kain.de/docs/jacob/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tutorial: Jacob &amp;amp; Microsoft Word&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.javaquery.com/2013/12/getting-started-with-jacob-example-with.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;getting-started-with-jacob-example-with&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Java-Test-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-test-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-test-list/</guid>
      <description>&lt;h1 id=&#34;java-测试-learning--practices-list&#34;&gt;Java 测试 Learning &amp;amp; Practices List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/21372411&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;一篇文章带你了解 Java 服务端单元测试的方方面面(保持更新)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;junit&#34;&gt;JUnit&lt;/h1&gt;
&lt;h2 id=&#34;junit-4&#34;&gt;JUnit 4&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/working-with-junitparams&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Working With JUnitParams&lt;/a&gt;: JUnitParams allows you to easily create parameterized tests in JUnit and provides a plethora of ways to pass parameters to test methods.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;junit-5&#34;&gt;Junit 5&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/URs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-JUnit 5 简介 #Series#&lt;/a&gt;: 了解全新 JUnit Jupiter API 中的注解、断言和前置条件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://junit.org/junit5/docs/current/user-guide/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JUnit 5 官方用户指南 #Series#&lt;/a&gt;：中文译本参考&lt;a href=&#34;https://sjyuan.cc/junit5/5.0.2/user-guide-cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.codefx.org/libraries/junit-5-dynamic-tests/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JUnit 5 – Dynamic Tests&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mock&#34;&gt;Mock&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/java/comments/61hci7/mockneat_a_java_library_that_allows_the_user_to/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MockNeat a java library that allows the user to generate arbitrary data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mockito&#34;&gt;Mockito&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://6me.us/PVo0xH&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stubbing and Mocking with Mockito 2 and JUnit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Java-UI-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-ui-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/java-ui-list/</guid>
      <description>&lt;h1 id=&#34;java-ui-list&#34;&gt;Java UI List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/8/javafx/interoperability-tutorial/swing-fx-interoperability.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;interoperability-tutorial/swing-fx-interoperability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Maven-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/maven-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.cs/zoo/java/dev/maven-list/</guid>
      <description>&lt;h1 id=&#34;maven-learning--practices-list&#34;&gt;Maven Learning &amp;amp; Practices List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://tracylihui.github.io/2015/07/09/Maven%E5%AD%A6%E4%B9%A0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Maven 学习&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.linuxidc.com/Linux/2014-12/110503.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Maven 实战(许晓斌著)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/lfsfxy9/article/category/1516519&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CSDN-Maven 学习每周总结&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ayayui.gitbooks.io/tutorialspoint-maven/content/book/maven_build_life_cycle.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tutorialspoint-maven&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.kyleblaney.com/maven-best-practices/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;maven-best-practices&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/AaN&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-用 Maven 管理多模块项目的最佳实践&lt;/a&gt;: 将介绍如何使用 Maven 来模块化管理项目及其依赖。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
