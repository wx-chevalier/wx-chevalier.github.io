<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Three.js | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/10.cg/graphicslibrary/three.js/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/2.frontend/10.cg/graphicslibrary/three.js/index.xml" rel="self" type="application/rss+xml"/><description>Three.js</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Three.js</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/10.cg/graphicslibrary/three.js/</link></image><item><title>Three.js-List</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/10.cg/graphicslibrary/three.js/three.js-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/2.frontend/10.cg/graphicslibrary/three.js/three.js-list/</guid><description>&lt;h1 id="threejs-list">Three.js List&lt;/h1>
&lt;h1 id="resource">Resource&lt;/h1>
&lt;h2 id="course">Course&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/josdirksen/learning-threejs" target="_blank" rel="noopener">Learning Three.js
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: The examples in this branch are based on r63 and correspond to the second edition of &amp;ldquo;Learning Three.js&amp;rdquo;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://threejsfundamentals.org/threejs/lessons/threejs-fundamentals.html" target="_blank" rel="noopener">Three.js Fundamentals #Series#&lt;/a>: Three.js is a 3D library that tries to make it as easy as possible to get 3D content on a webpage.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.webgl3d.cn/Three.js/" target="_blank" rel="noopener">2020-Three.js 零基础入门教程 #Series#&lt;/a>: 《Three.js 零基础入门教程》是一套很好的 Three.js 入门教程，每节课除了知识讲解，还提供了基本行行注释的案例源码，如果对视频讲解有需要，也可以选择赞助作者 Three.js 视频教程。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://sbcode.net/threejs/" target="_blank" rel="noopener">2021-Three.js and TypeScript Tutorials #Series#&lt;/a>: Learn Three.js while using TypeScript to create interactive 3D content on the web.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://discoverthreejs.com/book/introduction/" target="_blank" rel="noopener">2021-Discover Three.js
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/> 📚&lt;/a>: In this book, we’ll show you how to harness the power of the third dimension to create websites that really stand out from the crowd, using the three.js JavaScript graphics library.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://threejs-journey.com/" target="_blank" rel="noopener">2022-Threejs Jounery 🎥&lt;/a>: In 70 hours of video, this course will teach you the secrets to create the coolest WebGL websites with Three.js whether you are a beginner or an advanced developer.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="tutorial">Tutorial&lt;/h1>
&lt;h2 id="series">Series&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://medium.com/@Zadvorsky/into-vertex-shaders-594e6d8cd804" target="_blank" rel="noopener">2017-Into Vertex Shaders #Series#&lt;/a>: This is a series of tutorials about WebGL, Three.js, and Three.bas, my extension for complex and highly performant 3D animation systems.&lt;/li>
&lt;/ul></description></item><item><title>Three.js-OpenSource-List</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/10.cg/graphicslibrary/three.js/three.js-opensource-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/2.frontend/10.cg/graphicslibrary/three.js/three.js-opensource-list/</guid><description>&lt;h1 id="opensource">OpenSource&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/vasturiano/three-spritetext" target="_blank" rel="noopener">three-spritetext
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A sprite based text component for ThreeJS.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/pmndrs/react-three-fiber" target="_blank" rel="noopener">react-three-fiber
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: 🇨🇭 A React renderer for Three.js&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/kitware/vtk-js" target="_blank" rel="noopener">VTK
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: VTK is an open-source software system for image processing, 3D graphics, volume rendering and visualization.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="showcase">Showcase&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://ykob.github.io/sketch-threejs/" target="_blank" rel="noopener">sketch of three.js&lt;/a>: Interactive sketches made with three.js.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/cvdlab/react-planner" target="_blank" rel="noopener">react-planner
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: ✏️ A React Component for plans design. Draw a 2D floorplan and navigate it in 3D mode.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/josdirksen/threejs-cookbook" target="_blank" rel="noopener">threejs-cookbook
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Examples for the Three.js Cookbook book published by packt&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/dragonir/3d" target="_blank" rel="noopener">3d
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Three.js 3D 项目，包含冰墩墩 🐼、数字城市 🏙、3D 人像 👤、车模展示 🚗、塞尔达传说 🗡 等一些 3D 趣味演示页面，持续优化中&amp;hellip;访问链接如下 👇&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/yomotsu/meshwalk" target="_blank" rel="noopener">2021-MeshWalk.js
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/yomotsu/meshwalk" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: MeshWalk.js is a JS library which helps your TPS game development with three.js.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/gkjohnson/threejs-sandbox" target="_blank" rel="noopener">threejs-sandbox
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Set of experiments and extensions to THREE.js. These pages are a sandbox of examples and not necessarily ready to include in projects and may require some work to properly and performantly integrate.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="utils">Utils&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/0xAxiome/three-geometry-welder" target="_blank" rel="noopener">three-geometry-welder
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A customizable way of merging your buffer geometry&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/NASA-AMMOS/3DTilesRendererJS" target="_blank" rel="noopener">3DTilesRendererJS
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Three.js renderer implementation for the 3D Tiles format. The renderer supports most of the 3D Tiles spec features with a few exceptions. See Issue #15 for information on which features are not yet implemented.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/FarazzShaikh/THREE-CustomShaderMaterial" target="_blank" rel="noopener">FarazzShaikh/THREE-CustomShaderMaterial
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/FarazzShaikh/THREE-CustomShaderMaterial" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Custom Shader Material (CSM) lets you extend Three.js&amp;rsquo; material library with your own Vertex and Fragment shaders. It Supports both Vanilla and React!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/pissang/geometry-extrude" target="_blank" rel="noopener">2017-geometry-extrude
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/pissang/geometry-extrude" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A small and fast JavaScript library for extruding 2D polygons and polylines to 3D meshes. It depends on earcut to do triangulation.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/jasonChen1982/three.interaction.js" target="_blank" rel="noopener">2017-three.interaction.js
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/jasonChen1982/three.interaction.js" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: three.js interaction toolkit, help you built an interaction event-system for three.js, binding interaction event like browser-dom.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/zadvorsky/three.bas" target="_blank" rel="noopener">2017-three.bas
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/zadvorsky/three.bas" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: THREE Buffer Animation System is an extension for THREE.js. It simplifies the workflow of extending the built-in THREE.js materials to include animation logic in the vertex shader. For an overview of this approach, check out this tutorial series.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/vasturiano/three-spritetext" target="_blank" rel="noopener">2017-three-spritetext
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/vasturiano/three-spritetext" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A sprite based text component for ThreeJS. The text is drawn to canvas, converted into a Texture and then used as a material on a Sprite. Because a sprite is being used, the text will always face the camera, and has its orientation fixed relative to the camera.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/drawcall/threejs-mesh-modifiers" target="_blank" rel="noopener">2018-threejs-mesh-modifiers
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/drawcall/threejs-mesh-modifiers" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A Three.js mesh morph modifier, including nearly ten modifiers, such as Bend, Bloat, Noise, Skew and Taper, etc. It is very lightweight and simple to use, using it can give you unexpected results.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/OmarShehata/webgl-outlines" target="_blank" rel="noopener">2020-OmarShehata/webgl-outlines
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/OmarShehata/webgl-outlines" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Implementation of a post process outline shader in ThreeJS &amp;amp; PlayCanvas.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/marcofugaro/three-projected-material" target="_blank" rel="noopener">2022-three-projected-material
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/marcofugaro/three-projected-material" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: 📽 Three.js Material which lets you do Texture Projection on a 3d Model.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/Shiotsukikaedesari/vis-three" target="_blank" rel="noopener">2023-vis-three
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/Shiotsukikaedesari/vis-three" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: three.js 库二次功能封装 + 配置化的 three.js 开发。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="port">Port&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/wechat-miniprogram/threejs-miniprogram" target="_blank" rel="noopener">2019-threejs-miniprogram
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/wechat-miniprogram/threejs-miniprogram" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: WeChat MiniProgram adapted version of Three.js&lt;/li>
&lt;/ul>
&lt;h2 id="bvh">BVH&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/gkjohnson/three-mesh-bvh" target="_blank" rel="noopener">2018-three-mesh-bvh
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/gkjohnson/three-mesh-bvh" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A BVH implementation to speed up raycasting and enable spatial queries against three.js meshes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/gkjohnson/three-bvh-csg" target="_blank" rel="noopener">2021-three-bvh-csg
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/gkjohnson/three-bvh-csg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A flexible, memory compact, fast and dynamic CSG implementation on top of three-mesh-bvh&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/manthrax/THREE-CSGMesh" target="_blank" rel="noopener">2021-THREE-CSGMesh
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/manthrax/THREE-CSGMesh" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Conversion of a CSG - (Constructive Solid Geometry) library for use with modern THREE.js&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="material">Material&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Fyrestar/THREE.extendMaterial" target="_blank" rel="noopener">2021-THREE.extendMaterial
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/Fyrestar/THREE.extendMaterial" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Extending built-in materials, instances of ShaderMaterial and shader objects of onBeforeCompile.&lt;/li>
&lt;/ul>
&lt;h1 id="react-three-fiber">React Three Fiber&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/pmndrs/react-three-fiber" target="_blank" rel="noopener">react-three-fiber
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: react-three-fiber is a React renderer for threejs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/pmndrs/drei" target="_blank" rel="noopener">drei
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A growing collection of useful helpers and fully functional, ready-made abstractions for @react-three/fiber. If you make a component that is generic enough to be useful to others, think about making it available here through a PR!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/utsuboco/r3f-perf" target="_blank" rel="noopener">r3f-perf
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Easily monitor your ThreeJS performances.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/pmndrs/react-three-flex" target="_blank" rel="noopener">react-three-flex
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/pmndrs/react-three-flex" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Placing content in THREE.js is hard. @react-three/flex brings the webs flexbox spec to react-three-fiber. It is based on Yoga, Facebook&amp;rsquo;s open source layout engine for react-native.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="geo">Geo&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com//iTowns/itowns" target="_blank" rel="noopener">2019-iTowns
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars//iTowns/itowns" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A Three.js-based framework written in Javascript/WebGL for visualizing 3D geospatial data&lt;/li>
&lt;/ul></description></item></channel></rss>