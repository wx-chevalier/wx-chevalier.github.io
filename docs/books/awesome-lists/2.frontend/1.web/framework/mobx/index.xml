<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MobX | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/framework/mobx/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/framework/mobx/index.xml" rel="self" type="application/rss+xml" />
    <description>MobX</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>MobX</title>
      <link>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/framework/mobx/</link>
    </image>
    
    <item>
      <title>MobX-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/framework/mobx/mobx-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/framework/mobx/mobx-list/</guid>
      <description>&lt;h1 id=&#34;mobx-list&#34;&gt;MobX List&lt;/h1&gt;
&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;
&lt;h2 id=&#34;redux&#34;&gt;Redux&lt;/h2&gt;
&lt;h1 id=&#34;tutorial&#34;&gt;Tutorial&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mobxjs/awesome-mobx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Awesome MobX&lt;/a&gt;: A collection of awesome things regarding MobX.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/3in&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-Becoming fully reactive: an in-depth explanation of MobX&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mobx.js.org/getting-started.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-Ten minute introduction to MobX and React&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/c0uu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-How to decouple state and UI (a.k.a. you don‚Äôt need componentWillMount)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://semaphoreci.com/community/tutorials/how-to-test-react-and-mobx-with-jest&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-How to Test React and MobX with Jest&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/Gylrs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Tips to optimise rendering of a set of elements in React&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.robinwieruch.de/redux-mobx-confusion/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Redux-Mobx-Confusion&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/q4oR0C&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-An artificial example where MobX really shines and Redux is not really suited for it&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://engineering.pivotal.io/post/tdd-mobx/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-TDD with React and MobX&lt;/a&gt;: A look into testing MobX + React, plus why MobX is a viable alternative to Redux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bLd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Mobdux: Combining the good parts of MobX and Redux&lt;/a&gt;: MobX and Redux give you two opposing ways to manage your state effectively in a React application. As an experiment I attempted to merge the good parts of both approaches, and ended up with a new library, mobdux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://6me.us/KfeTad&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-Redux vs. MobX by example #Series#&lt;/a&gt;: &lt;a href=&#34;http://6me.us/KfeTad&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Part II: The Simplicity of MobX, and Conclusion&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;react&#34;&gt;React&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/adding-mobx-to-a-vanilla-react-project&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Adding MobX to a Vanilla React Project&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/gothinkster/react-mobx-realworld-example-app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;react-mobx-realworld-example-app 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/dailyjs/mobx-react-best-practices-17e01cec4140&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Mobx React ‚Äî Best Practices&lt;/a&gt;: In this article I want to show you common best practices for using React with mobx.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;internals&#34;&gt;Internals&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/26559530&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Â¶Ç‰ΩïËá™Â∑±ÂÆûÁé∞‰∏Ä‰∏™ mobx - ÂéüÁêÜËß£Êûê&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mobx-state-tree-list&#34;&gt;Mobx State Tree List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UCB&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Manage Application State with Mobx-state-tree üé•&lt;/a&gt;: In this course, Michel Westrate - Creator of Mobx - will teach us how to model application state after your problem domain with Mobx-state-tree (MST).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/Uvj&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-State Management with MobX State Tree&lt;/a&gt;: Introduction to MobX State Tree.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://codeburst.io/the-curious-case-of-mobx-state-tree-7b4e22d461f&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-The Curious Case of Mobx State Tree&lt;/a&gt;: What if MobX did make assumptions on how your data is structured? What if it is opinionated? That is the curious case of Mobx state tree.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>MobX-OpenSource-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/framework/mobx/mobx-opensource-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/framework/mobx/mobx-opensource-list/</guid>
      <description>&lt;h1 id=&#34;mobx-opensource-list&#34;&gt;MobX OpenSource List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Raathigesh/wiretap&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Wiretap 
















  &lt;img src=&#34;https://ng-tech.icu/assets/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A desktop app for inspecting mobx and mobx state tree apps.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
