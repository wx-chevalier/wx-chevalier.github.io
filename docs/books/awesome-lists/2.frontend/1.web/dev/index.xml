<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/index.xml" rel="self" type="application/rss+xml"/><description>Dev</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Dev</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/</link></image><item><title>Web-Builder-List</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/web-builder-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/web-builder-list/</guid><description>&lt;h1 id="web-builder-list">Web Builder List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/pigcan/blog/issues/4" target="_blank" rel="noopener">支付宝前端构建工具的发展和未来的选择&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://tech.meituan.com/LsLoader.html" target="_blank" rel="noopener">2017-LsLoader—— 通用移动端 Web App 离线化方案&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="task-runner--任务执行">Task Runner | 任务执行&lt;/h1>
&lt;h2 id="npm">NPM&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://aerotiger.info/archives/beginners-guide-node-package-manager.html" target="_blank" rel="noopener">NodeJS 包管理工具 ——npm 入门&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://stackoverflow.com/questions/18875674/whats-the-difference-between-dependencies-devdependencies-and-peerdependencies/22004559#22004559" target="_blank" rel="noopener">What&amp;rsquo;s the difference between dependencies, devDependencies and peerDependencies in npm package.json file?&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="parcel">Parcel&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/U4D" target="_blank" rel="noopener">2017-Everything You Need To Know About Parcel: The Blazing Fast Web App Bundler&lt;/a>: Today, we will explore code splitting and see how can we do it super easily with parcel.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://hackernoon.com/code-splitting-with-parcel-web-app-bundler-fe06cc3a20da" target="_blank" rel="noopener">2017-Code Splitting with Parcel Web App Bundler&lt;/a>: Today, we will explore code splitting and see how can we do it super easily with parcel.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="release--应用发布">Release | 应用发布&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/samccone/bundle-buddy" target="_blank" rel="noopener">2017-Bundle Buddy
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>：Bundle Buddy 能够通过分析编译生成的 SourceMap 来寻找 JavaScript 代码块之间的源代码冗余情况。该工具能够帮助开发者寻找合适的代码分割点以降低最终发布应用的不稳定性，同时还能提升页面加载性能。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.freebuf.com/articles/web/97945.html" target="_blank" rel="noopener">技术分享：几种常见的 JavaScript 混淆和反混淆工具分析实战 &lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://qianduan.guru/2016/09/02/security-for-web-developer/" target="_blank" rel="noopener">当我们在谈论前端加密时，我们在谈些什么&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/fouber/blog/issues/6" target="_blank" rel="noopener">大公司里怎样开发和部署前端代码？&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.csdn.net/zswang/article/details/47438561" target="_blank" rel="noopener">移动时代的前端加密&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/U6c" target="_blank" rel="noopener">2017-How we deliver BBC Web Pages to the Internet&lt;/a>: In this post Neil Craig, Lead Technical Architect in the BBC Online Technology Group gives an overview of the way in which the BBC serves the majority of its web pages to the public.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Web-Debug-List</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/web-debug-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/web-debug-list/</guid><description>&lt;h1 id="web-debug-list">Web Debug List&lt;/h1>
&lt;h1 id="调试工具">调试工具&lt;/h1>
&lt;h2 id="断点调试">断点调试&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/visionmedia/debug" target="_blank" rel="noopener">debug
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: tiny node.js &amp;amp; browser debugging utility for your libraries and applications.&lt;/li>
&lt;/ul>
&lt;h2 id="chrome-dev-tools">Chrome Dev Tools&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://developer.chrome.com/devtools/docs/tips-and-tricks" target="_blank" rel="noopener">Chrome developer tools tips and tricks&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.igeekbar.com/igeekbar/post/156.htm" target="_blank" rel="noopener">超完整的 Chrome 浏览器客户端调试大全&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.logrocket.com/making-the-most-of-the-chrome-developer-tools-8cac9a206979" target="_blank" rel="noopener">More helpful (and lesser known) features in the Chrome dev tools&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.logrocket.com/visualizing-backend-performance-in-the-chrome-devtools-bb6fd232540" target="_blank" rel="noopener">Seeing backend performance in the Chrome dev tools&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4p" target="_blank" rel="noopener">Using the Chrome devtools new code coverage feature&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b2T" target="_blank" rel="noopener">2017-Mastering Chrome Developer Tools: Next Level Front-End Development Techniques&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://raygun.com/blog/2015/04/emmet-and-css-the-forgotten-part/" target="_blank" rel="noopener">Emmet and css the forgotten part&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="sync-tools-同步工具">Sync Tools: 同步工具&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://browsersync.io/" target="_blank" rel="noopener">BrowserSync
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="远程调试">远程调试&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.sitepoint.com/introducing-vorlon-js-use-debug-javascript-remotely/" target="_blank" rel="noopener">Introducing Vorlon.js: How to Use It to Debug Your Javascript Remotely&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/WechatFE/vConsole" target="_blank" rel="noopener">vConsole&lt;/a>:一个针对手机网页的前端 console 调试面板。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="logging-日志记录">Logging: 日志记录&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.sitepoint.com/logging-errors-client-side-apps/" target="_blank" rel="noopener">Logging Errors in Client-Side Applications&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b9o" target="_blank" rel="noopener">How to get the most out of the JavaScript console&lt;/a>: One of the most basic debugging tools in JavaScript is console.log(). The console comes with several other useful methods that can add to a developer’s debugging toolkit.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bDf" target="_blank" rel="noopener">2017-Learn How To Debug JavaScript with Chrome DevTools&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.ido321.com/677.html" target="_blank" rel="noopener">九个 Console 命令，让 js 调试更简单&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/outsystems-experts/beyond-console-debugging-tricks-f7d0d7f5df4#.zd88ml8sz" target="_blank" rel="noopener">beyond-console-debugging-tricks&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.stacktracejs.com/" target="_blank" rel="noopener">StackTrace.js&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://dev.to/duchienvuong/fun-with-console-object" target="_blank" rel="noopener">Fun with Console object&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.cnblogs.com/iamzhanglei/p/5477500.html" target="_blank" rel="noopener">移动 web 开发调试工具 AlloyLever 介绍&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@brocco/browser-console-debugging-tips-for-arrays-objects-using-groups-and-tables-60b001316d8a#.5p4bh84px" target="_blank" rel="noopener">Browser console debugging tips for arrays &amp;amp; objects using groups and tables&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://raygun.com/blog/2015/03/speed-up-your-markup-with-zen-coding-emmet/" target="_blank" rel="noopener">Speed up your markup with zen coding emmet&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://developer.chrome.com/devtools/docs/commandline-api" target="_blank" rel="noopener">Chrome command line api&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/nolanlawson/marky" target="_blank" rel="noopener">High-resolution JavaScript timer based on performance.mark/measure (461 bytes min+gz)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="memory-leak">Memory Leak&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://developers.google.com/web/tools/chrome-devtools/memory-problems/" target="_blank" rel="noopener">2017-Google Developers - 解决你的内存问题系列&lt;/a>: &lt;a href="https://developers.google.com/web/tools/chrome-devtools/memory-problems/memory-101" target="_blank" rel="noopener">内存术语&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.bryntum.com/blog/debugging-memory-leaks-in-web-applications-using-iframes/" target="_blank" rel="noopener">2017-Debugging memory leaks in web applications using iframes&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bnw" target="_blank" rel="noopener">2017-How JavaScript works: memory management + how to handle 4 common memory leaks&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://alexn.org/blog/2017/10/11/javascript-promise-leaks-memory.html" target="_blank" rel="noopener">2017-JavaScript&amp;rsquo;s Promise Leaks Memory&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://msdn.microsoft.com/en-us/library/bb250448%28v=vs.85%29.aspx" target="_blank" rel="noopener">Understanding and Solving Internet Explorer Leak Patterns&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://v8project.blogspot.sg/2018/03/tracing-js-dom.html" target="_blank" rel="noopener">2018-Tracing from JS to the DOM and back again&lt;/a>: Debugging memory leaks in Chrome 66 just became much easier. Chrome’s DevTools can now trace and snapshot C++ DOM objects and display all reachable DOM objects from JavaScript with their references. This feature is one of the benefits of the new C++ tracing mechanism of the V8 garbage collector.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Web-Dev-List</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/web-dev-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/web-dev-list/</guid><description>&lt;h1 id="web-dev-list">Web Dev List&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s?__biz=MzI5NjM5NDQxMg==&amp;amp;mid=2247484495&amp;amp;idx=1&amp;amp;sn=5d105c66e3ea837c6885ab000bb02389&amp;amp;chksm=ec444f8cdb33c69a70363500ca56f60bf648a5fd1e34b0e16f62dbb6bdecfe5b3d43c40327b1&amp;amp;scene=21#wechat_redirect" target="_blank" rel="noopener">2020-icejs：企业级前端研发框架的演进与实践&lt;/a>: 基于淘系中后台的业务场景，icejs 是如何演进与以及实践的过程。&lt;/li>
&lt;/ul>
&lt;h1 id="lint">Lint&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/4l3YnI6U2iQuI_YsIr_utg" target="_blank" rel="noopener">2019-ESLint 在中大型团队的应用实践&lt;/a>: 本文主要介绍目前较为通用的方案——ESLint，它是一款插件化的 JavaScript 代码静态检查工具，其核心是通过对代码解析得到的 AST（Abstract Syntax Tree，抽象语法树）进行模式匹配，定位不符合约定规范的代码。&lt;/li>
&lt;/ul>
&lt;h1 id="scaffold">Scaffold&lt;/h1>
&lt;h1 id="id">ID&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/mQ0yvwrVMf5d4oRKudbi3A" target="_blank" rel="noopener">2019-CodeSandbox 是如何让 npm 上的包直接在浏览器端运行的&lt;/a>: 这里已经有一篇文章来介绍 CodeSandbox 的整体实现：CodeSandbox 浏览器端的 webpack 是如何工作的？上篇 但是这篇写的是 CodeSandbox 整个实现历程中中间的一个实现态，并非最终的架构方案。我们基于作者的原文来看下 CodeSandbox 的实现心路历程。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.jianshu.com/p/8eb175be0774" target="_blank" rel="noopener">2017-基于 webpack 打造前端在线编译器&lt;/a>: 两者综合起来就是一个针对前端开发者的在线开发平台，类似于 codepen，只是我们需要更好的将其集成到当前的网站中来。&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Web-E2ETest-List</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/web-e2etest-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/web-e2etest-list/</guid><description>&lt;h1 id="web-end-to-end-test-list">Web End to End Test List&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://hackernoon.com/stateless-end-to-end-testing-for-web-apps-7b54855f3c48?source=linkShare-fe48c4221a4c-1508838031" target="_blank" rel="noopener">Stateless end-to-end testing for web apps using Chrome, Lighthouse, and Treo&lt;/a>: This article introduces an idea of stateless end-to-end tests using Google Chrome’s Lighthouse and automatic snapshots. This approach enables fast development experience and tests availability, performance, and quality regressions. For practical examples the article uses Treo.&lt;/li>
&lt;/ul>
&lt;h1 id="cross-browser-test">Cross Browser Test&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bym" target="_blank" rel="noopener">2015-Just Say No to More End-to-End Tests&lt;/a>: Good ideas often fail in practice, and in the world of testing, one pervasive good idea that often fails in practice is a testing strategy built around end-to-end tests.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bQo" target="_blank" rel="noopener">2017-Top 5 Most Rated Node.js Frameworks for End-to-End Web Testing&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mo.github.io/2017/07/20/javascript-e2e-integration-testing.html" target="_blank" rel="noopener">2017-Javascript tools for end-to-end testing web applications&lt;/a>: This post reviews available tools for end-to-end testing web applications using Javascript (i.e. tests that click buttons, type text etc).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="nightmare">Nightmare&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://parg.co/bQA" target="_blank" rel="noopener">2016-Nightmarishly good scraping with Nightmare.js and async/await&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="testcafe">TestCafe&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://devexpress.github.io/testcafe/" target="_blank" rel="noopener">TestCafe Official Docs&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://alligator.io/vuejs/e2e-testing-testcafe/" target="_blank" rel="noopener">2017-End-to-End Testing Vue.js Apps with TestCafe&lt;/a>: End-to-end testing is one of the most valuable tools in your testing arsenal, allowing you to simulate what your user would do as they move through your app and determine if your app is responding correctly to that.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhF" target="_blank" rel="noopener">2017-E2E Testing React applications with TestCafe&lt;/a>: In this article, we will use TestCafe to test the React TodoMVC application.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@dikareva1209/all-the-tricks-that-help-you-debug-testcafe-tests-af0418220d" target="_blank" rel="noopener">2017-All the tricks that help you debug TestCafe tests&lt;/a>：When you write functional tests, sooner or later you face the need to debug them. In this article, I’ll review everything TestCafe offers to facilitate this daily routine task.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Web-Test-List</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/web-test-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/web-test-list/</guid><description>&lt;h1 id="web-测试资料索引">Web 测试资料索引&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://qaseven.github.io/2016/05/24/front-end-tools/" target="_blank" rel="noopener">前端测试工具集锦&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/tmallfe/tmallfe.github.io/issues/37" target="_blank" rel="noopener">聊一聊前端自动化测试&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://busypeoples.github.io/post/testing-workflow-with-es6/" target="_blank" rel="noopener">Karma 在 ES6 中的应用&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/justinwoo/react-karma-webpack-testing/" target="_blank" rel="noopener">react-karma-webpack-testing&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://taobaofed.org/blog/2016/01/08/karma-origin/" target="_blank" rel="noopener">karma 测试框架的前世今生&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.ruanyifeng.com/blog/2015/12/a-mocha-tutorial-of-examples.html" target="_blank" rel="noopener">测试框架 Mocha 实例教程&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UEW" target="_blank" rel="noopener">The Front-End Test Pyramid: How to Rethink Your Testing&lt;/a>: In this article we’ll look at what the front-end test pyramid is, and how to use it to create comprehensive test suites.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://joshldavis.com/2013/05/27/difference-between-tdd-and-bdd/" target="_blank" rel="noopener">2013-The Difference Between TDD and BDD&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://fex.baidu.com/blog/2015/07/front-end-test/" target="_blank" rel="noopener">2015-前端自动化测试探索&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://segmentfault.com/a/1190000004558796" target="_blank" rel="noopener">2016-聊一聊前端自动化测试&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://imweb.io/topic/56895ae54c44bcc56092e40a" target="_blank" rel="noopener">2016-前端自动化测试工具 overview&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.sitepoint.com/the-7-cross-browser-testing-tools-you-need-in-2016/" target="_blank" rel="noopener">2017-The 7 Cross-Browser Testing Tools You Need in 2016&lt;/a>: Even with responsive design and ever-improving standards support, cross-browser issues are not a thing of the past. Since it’s neither possible nor feasible to manually test your site in the galaxy of popular browsers and OS’s in broad use today, cross-browser testing tools come to the rescue!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/kNdfrD" target="_blank" rel="noopener">2017-Testing Your Frontend Code #Series#&lt;/a>: from the point of view of a frontend newbie — to testing frontend applications.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.coding.net/blog/frontend-testing" target="_blank" rel="noopener">聊聊前端开发的测试&lt;/a>：最近在做 Coding 企业版 前端开发时花了很多时间写测试，于是和大家分享一些前端开发中的测试概念与方法。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.hichroma.com/visual-testing-the-pragmatic-way-to-test-uis-18c8da617ecf" target="_blank" rel="noopener">2017-Visual Testing — the pragmatic way to test UIs&lt;/a>: How component explorers finally allow us to test our user interfaces effectively.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bf3" target="_blank" rel="noopener">2017-An Overview of JavaScript Testing in 2017&lt;/a>: This short guide is intended to catch you up with the most important reasoning, terms, tools, and approaches to JavaScript testing.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/javascript-scene/tdd-the-rite-way-53c9b46f45e3" target="_blank" rel="noopener">2017-TDD the RITE Way&lt;/a>: Test Driven Development (TDD) is a process for writing software that provably satisfies the software requirements.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/U14" target="_blank" rel="noopener">2018-An Overview of JavaScript Testing in 2018&lt;/a>: Use Jest for unit and integration tests and TestCafe for UI tests.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.freecodecamp.org/how-to-dockerize-your-end-to-end-acceptance-tests-dbb593acb8e0" target="_blank" rel="noopener">2018-How to Dockerize your End-to-End acceptance tests&lt;/a>: This article serves as a “how-to” guide for using Selenium Docker images alongside CodeceptJS and an Express server.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="test-utils">Test Utils&lt;/h1>
&lt;h2 id="mock">Mock&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://hackernoon.com/how-to-mock-data-for-node-js-applications-using-faker-js-b1f4c0e78102" target="_blank" rel="noopener">2017-How to Mock Data for Node.js Applications using Faker.js&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="ab-test">A/B Test&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://parg.co/bvk" target="_blank" rel="noopener">2017-How to quickly set up A/B testing for React websites&lt;/a>: Start collecting important data in as little as 30 minutes&lt;/li>
&lt;/ul>
&lt;h1 id="web-test-list">Web Test List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/Raathigesh/majestic" target="_blank" rel="noopener">Majestic
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Majestic is an electron app that provides a UI for running tests with Jest.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bJ5" target="_blank" rel="noopener">2017-JavaScript unit testing frameworks: Comparing Jasmine, Mocha, AVA, Tape and Jest&lt;/a>: When starting development on a new front end project, I always ask myself two questions: “Which Javascript unit testing frameworks should I use?” and “Should I even spend time adding tests?”&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="mocha">Mocha&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://rjzaworski.com/2015/06/testing-api-requests-from-window-fetch" target="_blank" rel="noopener">2015-Testing API requests from window.fetch&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.ruanyifeng.com/blog/2015/12/a-mocha-tutorial-of-examples.html" target="_blank" rel="noopener">2015-测试框架 Mocha 实例教程&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bL5" target="_blank" rel="noopener">2017-How to test JavaScript with Mocha #Series#&lt;/a>：Mocha is one of the most popular Node.js testing frameworks and while it may seem daunting, it’s actually pretty easy to get started with. &lt;a href="https://parg.co/bL5" target="_blank" rel="noopener">The Basics&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="karma">Karma&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://parg.co/beo" target="_blank" rel="noopener">2017-Automated testing with Headless Chrome&lt;/a>: If you want to run automated tests using Headless Chrome, look no further! This article will get you all set up using Karma as a runner and Mocha+Chai for authoring tests.&lt;/li>
&lt;/ul>
&lt;h1 id="unittest">UnitTest&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bh4" target="_blank" rel="noopener">2016-5 Questions Every Unit Test Must Answer How to Write Better Tests&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4S" target="_blank" rel="noopener">2016-5 Common Misconceptions About TDD &amp;amp; Unit Tests&lt;/a>: Most developers seem to agree that testing is good, but developers frequently disagree about how to test. In this article, I’ll break down some common misconceptions and hopefully teach you a few things about how you can benefit the most from TDD (Test Driven Development) &amp;amp; unit tests.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bhf" target="_blank" rel="noopener">Learning React with Create-React-App&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b41" target="_blank" rel="noopener">Redux Testing Step by Step: A Simple Methodology for Testing Business Logic&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="jest">Jest&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://auth0.com/blog/testing-react-applications-with-jest/" target="_blank" rel="noopener">2017-Testing React Applications with Jest&lt;/a>: Learn how to test React applications with the Jest JavaScript testing framework.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/N9Fl" target="_blank" rel="noopener">2016-Migrating to Jest on the P2P team at PayPal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://6me.us/KBnw6N" target="_blank" rel="noopener">Jest cheat sheet&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b4i" target="_blank" rel="noopener">2017-De-mystifying Jest Snapshot Test Mocks&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b90" target="_blank" rel="noopener">2017-Unlocking Test Performance — Migrating from Mocha to Jest&lt;/a>: Airbnb migrated from Mocha to Jest. Running our test suite with Mocha took 12+ minutes. In CI with our beefy build machines (32 cores) we’re able to run the entire Jest suite in 4 minutes 30 seconds.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bIM" target="_blank" rel="noopener">2017-Picking Jest over Mocha – testing tools comparison&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Webpack-List</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/webpack-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/2.frontend/1.web/dev/webpack-list/</guid><description>&lt;h1 id="webpack-learning--practices-list">Webpack Learning &amp;amp; Practices List&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/24954527" target="_blank" rel="noopener">前端缓存策略与基于 Webpack 的静态资源版本管理&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/fouber/blog/issues/6" target="_blank" rel="noopener">大公司里怎样开发和部署前端代码&lt;/a>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/30669007" target="_blank" rel="noopener">2017-Webpack HMR 原理解析&lt;/a>: Hot Module Replacement（以下简称 HMR）是 webpack 发展至今引入的最令人兴奋的特性之一。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="resource--资源">Resource | 资源&lt;/h1>
&lt;h2 id="book--书籍">Book | 书籍&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://survivejs.com/webpack/" target="_blank" rel="noopener">SurviveJS Webpack 📚&lt;/a>: SurviveJS - Webpack is meant for beginner to intermediate users of webpack.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://ngte.cowtransfer.com/s/77b881e3669847" target="_blank" rel="noopener">Practical Module Federation 📚&lt;/a>: Module Federation is an advanced use topic for the Webpack bundler starting with version 5.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="tutorial--教程">Tutorial | 教程&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://blog.madewithenvy.com/getting-started-with-webpack-2-ed2b86c68783#.3ksiast1f" target="_blank" rel="noopener">2016-Getting Started with Webpack 2&lt;/a>: At its simplest, webpack is a module bundler for your JavaScript. However, since its release it’s evolved into a manager of all your front-end code.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@kimberleycook/intro-to-webpack-1d035a47028d?source=linkShare-fe48c4221a4c-1482154145" target="_blank" rel="noopener">2017-Intro To Webpack&lt;/a>: Webpack is a very complex tool, and most people do not need to know how every part of it works.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@wesharehoodies/simple-beginner-guide-for-webpack-2-0-from-scratch-part-v-495dba627718" target="_blank" rel="noopener">2017-How to setup Webpack +2.0 from scratch in 2017 #Series#&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.smashingmagazine.com/2017/02/a-detailed-introduction-to-webpack/" target="_blank" rel="noopener">2017-Webpack: A Detailed Introduction&lt;/a>: JavaScript module bundling has been around for a while. RequireJS had its first commits in 2009, then Browserify made its debut, and since then several other bundlers have spawned across the Internet. Among that group, webpack has jumped out as one of the best. If you’re not familiar with it, I hope this article will get you started with this powerful tool.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://presentations.survivejs.com/webpack-the-good-parts/#/00" target="_blank" rel="noopener">WEBPACK - THE GOOD PARTS&lt;/a>: What is Webpack, Developing, Building, Assets, Bundle/code Splitting, Analysis, Optimizing.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://dev.to/kayis/webpack-basics" target="_blank" rel="noopener">2018-Webpack Basics&lt;/a>: Many people seem to like Webpack and use it for their everyday web bundling process.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="configuration-基础配置">Configuration: 基础配置&lt;/h1>
&lt;h2 id="modularity-模块化">Modularity: 模块化&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://parg.co/beE" target="_blank" rel="noopener">2017-Brief introduction to scope hoisting in Webpack&lt;/a>: On its third major release, Webpack introduced a new feature: scope hoisting. Many developers are already exposing data showing great positive impacts on the initial execution time of their bundles.&lt;/li>
&lt;/ul>
&lt;h2 id="build-performance-构建性能优化">Build Performance: 构建性能优化&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://robertknight.github.io/posts/webpack-dll-plugins/" target="_blank" rel="noopener">2016-Optimizing Webpack build times and improving caching with DLL bundles&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UkI" target="_blank" rel="noopener">Keep webpack Fast: A Field Guide for Better Build Performance&lt;/a>: This post is a field guide offering up what we learned on our path towards a faster build.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/amireh/happypack" target="_blank" rel="noopener">HappyPack
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: HappyPack makes webpack builds faster by allowing you to transform multiple files in parallel.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/Uka" target="_blank" rel="noopener">AutoDllPlugin
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Webpack&amp;rsquo;s DllPlugin without the boilerplate.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/Uk1" target="_blank" rel="noopener">HardSourceWebpackPlugin
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: HardSourceWebpackPlugin is a plugin for webpack to provide an intermediate caching step for modules.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UkW" target="_blank" rel="noopener">parallel-webpack
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Builds multi-config webpack projects in parallel.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="production--发布到生产环境">Production | 发布到生产环境&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b19" target="_blank" rel="noopener">2017-Reducing CSS bundle size 70% by cutting the class names and using scope isolation&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://iamakulov.com/notes/all/webpack-for-real-tasks-part-1/" target="_blank" rel="noopener">2017-webpack for real tasks: bundling front-end and adding compilation #Series#&lt;/a>: Bundling front-end and adding compilation ,Decreasing front-end size and improving caching, Speeding up build and improving the development workflow&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.infoq.com/cn/articles/frontend-engineering-webpack" target="_blank" rel="noopener">基于 Webpack 搭建前端工程解决方案探索&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://lifei.github.io/2015/12/20/webpack/#___8" target="_blank" rel="noopener">基于 Webpack 的前端资源构建方案&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UXN" target="_blank" rel="noopener">Web Performance Optimization with Webpack by Addy Osmani&lt;/a>: Taking advantage of its features for optimizing modern code, code-splitting scripts into critical and non-critical pieces and stripping out unused code.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="code-split--代码分割">Code Split | 代码分割&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@adamrackis/vendor-and-code-splitting-in-webpack-2-6376358f1923#.4ma6usgf0" target="_blank" rel="noopener">2017-Vendor and code splitting in webpack 2&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/bQb" target="_blank" rel="noopener">2017-webpack bits: Getting the most out of the CommonsChunkPlugin()&lt;/a>:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/b9A" target="_blank" rel="noopener">2017-How to use Webpack’s new “magic comment” feature with React Universal Component + SSR&lt;/a>: Webpack 2.4.0, which came out a few weeks ago, launched with a very interesting new feature: “magic comments.” In combination with dynamic imports, “magic comments” greatly simplify code-splitting + server-side rendering.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/Ukz" target="_blank" rel="noopener">2018-RIP CommonsChunkPlugin&lt;/a>: webpack 4 removes the CommonsChunkPlugin in favor of two new options (optimization.splitChunks and optimization.runtimeChunk). Here is how it works.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="opensource">OpenSource&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://github.com/GoogleChromeLabs/size-plugin" target="_blank" rel="noopener">2018-size-plugin
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Prints the gzipped sizes of your webpack assets and the changes since the last build.&lt;/li>
&lt;/ul>
&lt;h2 id="监控">监控&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/FormidableLabs/webpack-dashboard" target="_blank" rel="noopener">Webpack Dashboard
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A CLI dashboard for webpack dev server. 如果是 Windows 下的开发者可以优先使用 &lt;a href="https://github.com/FormidableLabs/electron-webpack-dashboard" target="_blank" rel="noopener">electron-webpack-dashboard&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/webpackmonitor/webpackmonitor" target="_blank" rel="noopener">Webpack Monitor
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A tool for monitoring webpack optimization metrics through the development process&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/zouhir/jarvis" target="_blank" rel="noopener">JARVIS
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: J.A.R.V.I.S. (Just A Rather Very Intelligent System) will put in your browser all the relevant information you need from your webpack build whether in dev or in prod.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/th0r/webpack-bundle-analyzer" target="_blank" rel="noopener">Webpack Bundle Analyzer
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/> &lt;/a>: Webpack plugin and CLI utility that represents bundle content as convenient interactive zoomable treemap.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="应用优化">应用优化&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/googlechrome/preload-webpack-plugin" target="_blank" rel="noopener">preload-webpack-plugin&lt;/a>: A Webpack plugin for wiring up link &lt;code>&amp;lt;rel='preload'&amp;gt;&lt;/code> (and prefetch) - supports async chunks&lt;/li>
&lt;/ul>
&lt;h1 id="internals">Internals&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/30669007/" target="_blank" rel="noopener">2017-Webpack HMR 原理解析&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/uc4fVViv4u86TTX2XsMgFA" target="_blank" rel="noopener">2019-Webpack 是怎样运行的?&lt;/a>: 下面我们来通过一个简单的项目来看一下 Webpack 是怎样运行的。&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>