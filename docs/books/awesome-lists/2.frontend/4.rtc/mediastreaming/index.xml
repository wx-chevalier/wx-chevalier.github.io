<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MediaStreaming | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/4.rtc/mediastreaming/</link><atom:link href="https://ng-tech.icu/books/awesome-lists/2.frontend/4.rtc/mediastreaming/index.xml" rel="self" type="application/rss+xml"/><description>MediaStreaming</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>MediaStreaming</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/4.rtc/mediastreaming/</link></image><item><title>MediaStreaming-List</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/4.rtc/mediastreaming/mediastreaming-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/2.frontend/4.rtc/mediastreaming/mediastreaming-list/</guid><description>&lt;h1 id="media-streaming-list--流媒体">Media Streaming List | 流媒体&lt;/h1>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://cloud.tencent.com/developer/article/1071271" target="_blank" rel="noopener">2016-HTML 5 视频直播一站式扫盲&lt;/a>: 为了紧跟潮流，本文将向大家介绍一下视频直播中的基本流程和主要的技术点，包括但不限于前端技术。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/Son" target="_blank" rel="noopener">2016-如何实现 1080P 延迟低于 500ms 的实时超清直播传输技术 &lt;/a>: 视频直播是很多技术团队及架构师关注的问题，在实时性方面，大部分直播是准实时的，存在 1-3 秒延迟。本文由袁荣喜向高可用架构投稿，介绍其将直播延迟控制在 500ms 的背后的实现。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://segmentfault.com/a/1190000010440054?utm_source=tuicool&amp;amp;utm_medium=referral" target="_blank" rel="noopener">2017-不再碎片化学习，快速掌握 H5 直播技术&lt;/a>: 所以，本文主要给大家介绍一下当下 HTML5 直播所涵盖的技术范围，如果要深度学习每一个技术，我们后续可以继续讨论。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="collection">Collection&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/0voice/audio_video_streaming" target="_blank" rel="noopener">音视频流媒体权威资料整理 🗃️&lt;/a>: 音视频流媒体权威资料整理，500+份文章，论文，视频，实践项目，协议，业界大神名单。&lt;/li>
&lt;/ul>
&lt;h1 id="client--客户端模块">Client | 客户端模块&lt;/h1>
&lt;h2 id="android">Android&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://toutiao.io/posts/76jep8" target="_blank" rel="noopener">Android 音视频点 / 直播模块开发&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/pili-engineering/PLDroidPlayer" target="_blank" rel="noopener">PLDroidPlayer: 适用于 Android 平台的音视频播放器 SDK&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.henishuo.com/live-play-resource-collections/" target="_blank" rel="noopener">直播方向的资源收集&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="ios">iOS&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://allluckly.cn/%E6%8A%95%E7%A8%BF/tuogao46" target="_blank" rel="noopener">iOS 开发之集成 ijkplayer 视频直播&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="h5">H5&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/27690199?utm_medium=social&amp;amp;utm_source=ZHShareTargetIDMore" target="_blank" rel="noopener">2017-H5 直播避坑指南&lt;/a>:在摸索优化背后，我们也想把这些问题和解决方法总结下来，让其他同学做到直播的时候可以自豪的说，这就是我们的 h5 直播体验。&lt;/li>
&lt;/ul>
&lt;h1 id="工程实践">工程实践&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://www.infoq.com/cn/presentations/how-to-support-the-people-live-online-classroom" target="_blank" rel="noopener">2016-怎样支持万人直播在线教室？&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/yrcO8yA0Ut2RVhUxG2OSvQ" target="_blank" rel="noopener">聊聊高并发长连接架构：百万在线的美拍直播弹幕系统如何实现&lt;/a>: 直播弹幕是直播系统的核心功能之一。如何迅速作出一个有很好扩展性的弹幕系统？如何应对业务迅速发展？&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>MediaStreaming-OpenSource-List</title><link>https://ng-tech.icu/books/awesome-lists/2.frontend/4.rtc/mediastreaming/mediastreaming-opensource-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/awesome-lists/2.frontend/4.rtc/mediastreaming/mediastreaming-opensource-list/</guid><description>&lt;h1 id="rtc-opensource-list">RTC OpenSource List&lt;/h1>
&lt;h1 id="webrtc">WebRTC&lt;/h1>
&lt;h2 id="showcase">Showcase&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/RobinLinus/snapdrop" target="_blank" rel="noopener">2020-snapdrop
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: A Progressive Web App for local file sharing&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/pavlobu/deskreen" target="_blank" rel="noopener">2020-Deskreen
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Deskreen turns any device with a web browser to a second screen for your computer&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="library">Library&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/maxogden/screencat" target="_blank" rel="noopener">Screencat
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: webrtc screensharing electron app for mac os (Alpha).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://parg.co/UsK" target="_blank" rel="noopener">WebRTC Data Channels Example&lt;/a>: A simple example of WebRTC Data Channels. Uses postMessage() as a substitute for a real signalling channel.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/fanout/pushpin" target="_blank" rel="noopener">Pushpin
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Pushpin is a reverse proxy server written in C++ that makes it easy to implement WebSocket, HTTP streaming, and HTTP long-polling services.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/feross/simple-peer" target="_blank" rel="noopener">simple-peer
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Simple WebRTC video, voice, and data channels.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://recordrtc.org" target="_blank" rel="noopener">RecordRTC.js
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: WebRTC JavaScript Library for Audio+Video+Screen+Canvas (2D+3D animation) Recording.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="live">Live&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/tabvn/video-streaming-service" target="_blank" rel="noopener">2017-video streaming service
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Build Live Video Streaming Server use Ffmpeg Nginx Rtmp Module &amp;amp; Nodejs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/gwuhaolin/livego" target="_blank" rel="noopener">LiveGo
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: 纯 Go 写的直播服务器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/ltebean/Live" target="_blank" rel="noopener">Live
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Demonstrate how to build a live broadcast app.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/ossrs/srs" target="_blank" rel="noopener">2014-Simple RTMP Server
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: SRS is a RTMP/HLS/WebRTC/SRT/GB28181 streaming cluster, high efficiency, stable and simple.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://livekit.io/" target="_blank" rel="noopener">2020-LiveKit #OpenSource#&lt;/a>: The open source platform for real-time communication. Build 1000-person, live audio or video experiences into your mobile app or website, in minutes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/aler9/rtsp-simple-server" target="_blank" rel="noopener">2022-aler9/rtsp-simple-server
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>
&lt;img src="https://img.shields.io/github/stars/aler9/rtsp-simple-server" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: rtsp-simple-server is a ready-to-use and zero-dependency server and proxy that allows users to publish, read and proxy live video and audio streams through various protocols.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="cast">Cast&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/owncast/owncast" target="_blank" rel="noopener">owncast
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Take control over your live stream video by running it yourself. Streaming + chat out of the box.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/MayaPosch/NymphCast" target="_blank" rel="noopener">2021-NymphCast
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Audio and video casting system with support for custom applications.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="hls">HLS&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/video-dev/hls.js/" target="_blank" rel="noopener">2015-hls.js
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: JavaScript HLS client using Media Source Extension&lt;/li>
&lt;/ul>
&lt;h2 id="rtsp">RTSP&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Roverr/rtsp-stream" target="_blank" rel="noopener">2019-rtsp-stream
&lt;img src="https://ng-tech.icu/assets/code.svg" style="max-width: 100px;display: inline-flex;"/>&lt;/a>: Out of box solution for RTSP - HLS live stream transcoding. Makes RTSP easy to play in browsers.&lt;/li>
&lt;/ul></description></item></channel></rss>