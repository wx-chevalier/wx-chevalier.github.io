<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/index.xml" rel="self" type="application/rss+xml" />
    <description>Spring</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>Spring</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/</link>
    </image>
    
    <item>
      <title>Java-Servlet-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/java-servlet-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/java-servlet-list/</guid>
      <description>&lt;h1 id=&#34;java-servlet-list&#34;&gt;Java Servlet List&lt;/h1&gt;
&lt;h1 id=&#34;application-server&#34;&gt;Application Server&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/OpenLiberty/open-liberty&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-OpenLiberty 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Open Liberty is a highly composable, fast to start, dynamic application server runtime environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;spark&#34;&gt;Spark&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://parg.co/U9j&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spark Java with Hibernate and MySql database example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Mybatis-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/mybatis-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/mybatis-list/</guid>
      <description>&lt;h1 id=&#34;mybatis-list&#34;&gt;MyBatis List&lt;/h1&gt;
&lt;h1 id=&#34;resource&#34;&gt;Resource&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.iocoder.cn/MyBatis/good-collection/?title&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MyBatis 实现原理与源码解析系统 #Series#&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.kknotes.com/blog/mybatis%E5%AE%8C%E5%85%A8%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MyBatis 完全使用指南 #Series#&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tutorial--开发使用&#34;&gt;Tutorial | 开发使用&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/yuanermen/archive/2013/04/02/2995920.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MyBatis 3 自动生成 主键 针对不同的数据库(oracle/sqlserver/mysql)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mapper&#34;&gt;Mapper&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/hellokitty1/p/5218892.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MyBatis 关联关系详解&lt;/a&gt;: 介绍了 MyBatis 中一对一关系与一对多关系以及多对多关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;plugins&#34;&gt;Plugins&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://git.oschina.net/free/Mybatis_Utils/tree/master&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MyBatis 工具类总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mybatis-generator&#34;&gt;MyBatis Generator&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://generator.sturgeon.mopaas.com/whatsNew.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MyBatis Generator 官方文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/isea533/article/details/42102297&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2014-MyBatis Generator 详解&lt;/a&gt;: 该中文文档由于尽可能和原文内容一致，所以有些地方如果不熟悉，看中文版的文档的也会有一定的障碍，所以本章根据该中文文档以及实际应用，使用通俗的语言来讲解详细的配置。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;internals&#34;&gt;Internals&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/33179093?iam=ed4cd6b92a003a0ce8e801ae74196e19&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;聊聊 MyBatis 缓存机制&lt;/a&gt;: MyBatis 是常见的 Java 数据库访问层框架。在日常工作中，开发人员多数情况下是使用 MyBatis 的默认缓存配置，但是 MyBatis 缓存机制有一些不足之处，在使用中容易引起脏数据，形成一些潜在的隐患。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.ibm.com/developerworks/cn/java/j-lo-ibatis-principle/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;深入分析 iBATIS 框架之系统架构与映射原理&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Spring-Internals-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/spring-internals-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/spring-internals-list/</guid>
      <description>&lt;h1 id=&#34;spring-internals-list&#34;&gt;Spring Internals List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/DerekYRC/mini-spring&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-mini-spring 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/DerekYRC/mini-spring&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: mini-spring 是简化版的 spring 框架，能帮助你快速熟悉 spring 源码和掌握 spring 的核心原理。抽取了 spring 的核心逻辑，代码极度简化，保留 spring 的核心功能，如 IoC 和 AOP、资源加载器、事件监听器、类型转换、容器扩展点、bean 生命周期和作用域、应用上下文等核心功能。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Spring-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/spring-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/spring-list/</guid>
      <description>&lt;h1 id=&#34;spring-list&#34;&gt;Spring List&lt;/h1&gt;
&lt;h1 id=&#34;resource&#34;&gt;Resource&lt;/h1&gt;
&lt;h2 id=&#34;series&#34;&gt;Series&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yinjihuan/spring-cloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;spring-cloud #Series#&lt;/a&gt;: 《Spring Cloud 微服务-全栈技术与案例解析》和《Spring Cloud 微服务 入门 实战与进阶》配套源码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hansonwang99/Spring-Boot-In-Action&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Spring-Boot-In-Action 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/hansonwang99/Spring-Boot-In-Action&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 本项目为 《Spring Boot 实战合集》的系列文章，代码已开源，并持续保持更新。如果您觉得该项目对您有用，欢迎点击右上方的 Star 按钮支持一波！！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dyc87112/SpringBoot-Learning&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-Spring Boot Learning #Series#&lt;/a&gt;: Spring Boot 基础教程，Spring Boot 2.x 版本连载中！！！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.didispace.com/spring-cloud-learning/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-Spring Cloud 从入门到精通 #Series#&lt;/a&gt;: 如果您还是初学者，建议优先以 Dalston 版教程为基础进行学习，该版本内容目前比较完整。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/YunaiV/SpringBoot-Labs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-SpringBoot-Labs 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/YunaiV/SpringBoot-Labs&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 一个涵盖六个专栏：Spring Boot 2.X、Spring Cloud、Spring Cloud Alibaba、Dubbo、分布式消息队列、分布式事务的仓库。希望胖友小手一抖，右上角来个 Star，感恩 1024.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vector4wang/spring-boot-quick&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-spring-boot-quick 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/vector4wang/spring-boot-quick&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 🌿 基于 springboot 的快速学习示例,整合自己遇到的开源框架,如：rabbitmq(延迟队列)、Kafka、jpa、redies、oauth2、swagger、jsp、docker、k3s、k3d、k8s、mybatis 加解密插件、异常处理、日志输出、多模块开发、多环境打包、缓存 cache、爬虫、jwt、GraphQL、dubbo、zookeeper 和 Async 等等 📌&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/fuzhengwei/small-spring&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-Spring 手撸专栏 #Series#&lt;/a&gt;: 🌱《Spring 手撸专栏》，本专栏以 Spring 源码学习为目的，通过手写简化版 Spring 框架，了解 Spring 核心原理。在手写的过程中会简化 Spring 源码，摘取整体框架中的核心逻辑，简化代码实现过程，保留核心功能，例如：IOC、AOP、Bean 生命周期、上下文、作用域、资源处理等内容实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/macrozheng/springcloud-learning&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-SpringCloud Learning #Series#&lt;/a&gt;: 一套涵盖大部分核心组件使用的 Spring Cloud 教程，包括 Spring Cloud Alibaba 及分布式事务 Seata，基于 Spring Cloud Greenwich 及 SpringBoot 2.1.7。篇篇精华，涵盖大部分应用场景。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tutorial&#34;&gt;Tutorial&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/bhg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Docker Spring Boot Microservice (with Gradle)&lt;/a&gt;: Step-by-step tutorial on how to create a Spring Boot Microservice and wrap it up using Docker for simple, better and safer deployments of redundant APIs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.codeleak.pl/2017/03/spring-boot-and-security-events-with-actuator.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring Boot and Security Events with Actuator&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://howtotrainyourjava.com/2017/03/09/spring-web-basics/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;We will cover the concept of HTTP protocol, servlets, web services, REST and JSON.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://memorynotfound.com/unit-test-spring-mvc-rest-service-junit-mockito/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Unit Test Spring MVC Rest Service: MockMVC, JUnit, Mockito&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://docs.spring.io/spring/docs/current/spring-framework-reference/html/remoting.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Remoting and web services using Spring&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;spring-native&#34;&gt;Spring Native&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>Spring-OpenSource-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/spring-opensource-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/spring-opensource-list/</guid>
      <description>&lt;h1 id=&#34;spring-opensource-list&#34;&gt;Spring OpenSource List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/alipay/sofa-boot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SOFABoot 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: SOFABoot is a framework that enhances Spring Boot and fully compatible with it, provides readiness check, class isolation, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/springfox/springfox&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Springfox 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Automated JSON API documentation for API&amp;rsquo;s built with Spring.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Nepxion/Discovery&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nepxion Discovery 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 🐳 Nepxion Discovery is an enhancement for Spring Cloud Discovery on Eureka + Consul + Zookeeper + Nacos with Nacos + Apollo config for gray release, router, weight, isolation 网关和服务灰度发布、路由、权重、隔离、调用链。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.spring.io/spring-native/docs/current/reference/htmlsingle/#overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring Native 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Spring Native provides support for compiling Spring applications to native executables using the GraalVM native-image compiler.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;showcase&#34;&gt;Showcase&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gitee.com/shuzheng/zheng&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-zheng 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 基于 Spring SpringMVC Mybatis 分布式敏捷开发系统架构，提供整套公共微服务服务模块：集中权限管理（单点登录）、内容管理、支付中心、用户管理（支持第三方登录）、微信平台、存储系统、配置中心、日志分析、任务和通知等，支持服务治理、监控和追踪，努力为中小型企业打造全方位 J2EE 企业级开发解决方案。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/SCE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-基于 Netty 的 Spring Boot 内置 Servlet 容器的实现 #Series#&lt;/a&gt;: Spring Boot 有 Tomcat、Jetty 和 undertow 三种内置 Servlet 容器，默认使用 Tomcat。一般来说已经够用了，但当 Spring Boot 用于高并发微服务的时候，可能并不够用，而且 tomcat 的资源占用在这种情况下说不上轻量化了。于是萌生了自己实现一个 Spring Boot 的 Netty Servlet 容器的想法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/diaozxin007/xilidou-framework&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-徒手撸框架，实现 IoC 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Spring 作为 J2ee 开发事实上的标准，是每个 Java 开发人员都需要了解的框架。但是 Spring 的 IoC 和 Aop 的特性，对于初级的 Java 开发人员来说还是比较难于理解的。所以我就想写一系列的文章给大家讲解这些特性。从而能够进一步深入了解 Spring 框架。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Exrick/xboot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-XBoot 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/Exrick/xboot&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 基于 Spring Boot 2.x 的一站式前后端分离快速开发平台 XBoot 微信小程序+Uniapp 前端：Vue+iView Admin 后端：Spring Boot 2.x/Spring Security/JWT/JPA+Mybatis-Plus/Redis/Elasticsearch/Activiti 分布式限流/同步锁/验证码/SnowFlake 雪花算法 ID 动态权限 数据权限 工作流 代码生成 定时任务 社交账号 短信登录 单点登录 OAuth2 开放平台 客服机器人 数据大屏 暗黑模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hs-web/hsweb-framework&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-hsweb-framework 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/hs-web/hsweb-framework&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: hsweb (haʊs wɛb) 是一个基于 spring-boot 2.x 开发 ,首个使用全响应式编程的企业级后台管理系统基础项目。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hope-for/hope-boot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hope-boot 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 一款现代化的脚手架项目。企业开发？接外包？赚外快？还是学习？这都能满足你，居家必备，值得拥有 🍻&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gitee.com/zlt2000/microservices-platform&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;microservices-platform 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 基于 SpringBoot2.x、SpringCloud 和 SpringCloudAlibaba 并采用前后端分离的企业级微服务多租户系统架构。并引入组件化的思想实现高内聚低耦合，项目代码简洁注释丰富上手容易，适合学习和企业中使用。真正实现了基于 RBAC、jwt 和 oauth2 的无状态统一权限认证的解决方案，面向互联网设计同时适合 B 端和 C 端用户，支持 CI/CD 多环境部署，并提供应用管理方便第三方系统接入；同时还集合各种微服务治理功能和监控功能。模块包括:企业级的认证系统、开发平台、应用监控、慢 sql 监控、统一日志、单点登录、Redis 分布式高速缓存、配置中心、分布式任务调度、接口文档、代码生成等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gitee.com/log4j/pig&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-pig 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 基于 Spring Boot 2.4、Spring Cloud 2020 &amp;amp; AlibabaOAuth2 的微服务 RBAC 权限管理系统。记得右上角点个 star 关注更新&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/smart-cloud/smart-cloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-smart-cloud 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/smart-cloud/smart-cloud&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 基于 springboot &amp;amp;&amp;amp; springcloud 的脚手架，支持服务合并部署与拆分部署、接口加解密签名、日志数据 脱敏、接口数据 mock、接口文档自动生成、请求幂等校验、接口日志&amp;amp;&amp;amp;sql 日志切面打印、分表分库分布式事务、国际化语言等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/RudeCrab/rude-java&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-rude-java 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/RudeCrab/rude-java&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Java Practice Projects(SSM、Spring Boot、Spring Security、MinIO、Vue). 以 Java 语言为主的各种项目实践，涵盖各个业务、各个功能，并附上高质量文章讲解，其中一些甚至可以单开一个仓库。让你再也不用寻找各种框架 demo、项目脚手架。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;工具库&#34;&gt;工具库&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lets-mica/mica&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-lets-mica/mica 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/lets-mica/mica&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Spring Cloud 微服务开发核心工具集。工具类、验证码、http、redis、ip2region、xss 等，开箱即用。 🔝 🔝 记得右上角点个 star 关注更新！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;spring-boot&#34;&gt;Spring Boot&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vector4wang/spring-boot-quick&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;spring-boot-quick 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 🌿 基于 springboot 的快速学习示例,整合自己遇到的开源框架,如：rabbitmq(延迟队列)、Kafka、jpa、redies、oauth2、swagger、jsp、docker、spring-batch、异常处理、日志输出、多模块开发、多环境打包、缓存 cache、爬虫、jwt、GraphQL、dubbo、zookeeper 和 Async 等等 📌&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;响应式&#34;&gt;响应式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hs-web/hsweb-framework&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-hsweb-framework 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/hs-web/hsweb-framework&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: hsweb (haʊs wɛb) 是一个基于 spring-boot 2.x 开发 ,首个使用全响应式编程的企业级后台管理系统基础项目。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/201206030/novel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-novel 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/201206030/novel&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: novel 是一套基于时下最新 Java 技术栈 Spring Boot 3 + Vue 3 开发的前后端分离学习型小说项目，配备保姆级教程手把手教你从零开始开发上线一套生产级别的 Java 系统，由小说门户系统、作家后台管理系统、平台后台管理系统等多个子系统构成。包括小说推荐、作品检索、小说排行榜、小说阅读、小说评论、会员中心、作家专区、充值订阅、新闻发布等功能。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;spring-cloud&#34;&gt;Spring Cloud&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dromara/lamp-cloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-lamp-cloud 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/dromara/lamp-cloud&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: lamp-cloud 基于 Jdk11 + SpringCloud + SpringBoot 开发的微服务中后台快速开发平台，专注于多租户(SaaS 架构)解决方案，亦可作为普通项目（非 SaaS 架构）的基础开发框架使用，目前已实现插拔式数据库隔离、SCHEMA 隔离、字段隔离 等租户隔离方案。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zhoutaoo/SpringCloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-SpringCloud 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/zhoutaoo/SpringCloud&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 基于 SpringCloud2.1 的微服务开发脚手架，整合了 spring-security-oauth2、nacos、feign、sentinel、springcloud-gateway 等。服务治理方面引入 elasticsearch、skywalking、springboot-admin、zipkin 等，让项目开发快速进入业务开发，而不需过多时间花费在架构搭建上。持续更新中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yangzongzhuan/RuoYi-Cloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-RuoYi-Cloud 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/yangzongzhuan/RuoYi-Cloud&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 🎉 (RuoYi)官方仓库 基于 Spring Boot、Spring Cloud &amp;amp; Alibaba 的分布式微服务架构权限管理系统&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;libraries&#34;&gt;Libraries&lt;/h1&gt;
&lt;h2 id=&#34;log&#34;&gt;Log&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/fayechenlong/plumelog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-plumelog 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/fayechenlong/plumelog&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 一个 Java 分布式日志组件，支持百亿级别，日志从搜集到查询，不用去文件中翻阅日志方便快捷，支持查询一个调用链的日志，支持链路追踪，查看调用链耗时情况，在分布式系统中也可以查询关联日志，能够帮助快速定位问题，简单易用，没有代码入侵，查询界面友好，高效，方便，只要你是 java 系统，不要做任何项目改造，接入直接使用，日志不落本地磁盘。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mouzt/mzt-biz-log&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021-mzt-biz-log 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/mouzt/mzt-biz-log&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 支持 Springboot，基于注解的可使用变量、可以自定义函数的通用操作日志组件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/qqxx6661/log-record&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022-log-record 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/qqxx6661/log-record&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 使用注解优雅的记录系统日志，操作日志等，支持 SpEL 表达式，自定义上下文，自定义函数，实体类 DIFF。并支持将日志消息传递至消息队列。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;web-development&#34;&gt;Web Development&lt;/h1&gt;
&lt;h2 id=&#34;frameworks&#34;&gt;Frameworks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/TogetherOS/cicada&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cicada 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Fast, lightweight Web framework based on Netty; without too much dependency, and the core jar package is only 30KB.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ninjaframework/ninja&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ninja 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Ninja is a full stack web framework for Java. Rock solid, fast and super productive.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jfinal/jfinal&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-JFinal 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: JFinal 是基于 Java 语言的极速 WEB + ORM 框架，其核心设计目标是开发迅速、代码量少、学习简单、功能强大、轻量级、易扩展、Restful。在拥有 Java 语言所有优势的同时再拥有 ruby、python 等动态语言的开发效率！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/perwendel/spark&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spark 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A simple expressive web framework for java. News: Spark now has a kotlin DSL.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://micronaut.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Micronaut 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A modern, JVM-based, full-stack framework for building modular, easily testable microservice and serverless applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://quarkus.io/#!&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Quarkus 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: A Kubernetes Native Java stack tailored for OpenJDK HotSpot and GraalVM, crafted from the best of breed Java libraries and standards.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;auth&#34;&gt;Auth&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/spring-projects/spring-security&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring Security 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Spring Security provides security services for the Spring IO Platform. Spring Security 5.0 requires Spring 5.0 as a minimum and also requires Java 8.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pac4j/pac4j&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pac4j 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Security engine for Java (authentication, authorization, multi frameworks): OAuth, CAS, SAML, OpenID Connect, LDAP, JWT&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bujiio/buji-pac4j&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;buji-pac4j 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: The buji-pac4j project is an easy and powerful security library for Shiro web applications and web services which supports authentication and authorization, but also advanced features like CSRF protection. It&amp;rsquo;s based on Java 8, Shiro 1.4 and on the pac4j security engine v3.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/apache/shiro&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apache Shiro 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Apache Shiro is a powerful and easy-to-use Java security framework that performs authentication, authorization, cryptography, and session management.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mybatis&#34;&gt;MyBatis&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.mybatis.org/mybatis-3/zh/java-api.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MyBatis 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: MyBatis is a first class persistence framework with support for custom SQL, stored procedures and advanced mappings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://mybatis.tk/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MyBatis 分页插件 PageHelper、通用 Mapper 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/javaplugs/mybatis-types/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mybatis-types 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: Type Handlers for MyBatis 3.x including Java 8 time (JSR 310) support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Mearalu/mybatis-multi-tenancy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mybatis-multi-tenancy 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 这是一个 mybatis 的基于共享数据表模式的多租户插件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/baomidou/mybatis-plus&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mybatis-plus 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: An powerful enhanced toolkit of MyBatis for simplify development.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>SpringBoot-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/springboot-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/springboot-list/</guid>
      <description>&lt;h1 id=&#34;spring-boot&#34;&gt;Spring Boot&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://marcin-chwedczuk.github.io/zen-and-the-art-of-unit-testing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Zen and the Art of Unit Testing&lt;/a&gt;: In this blog post we will concern ourselves with unit testing of classic 3-layer business applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UV0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Spring Boot metrics monitoring using Prometheus &amp;amp; Grafana&lt;/a&gt;: In this post we&amp;rsquo;ll discuss how to achieve the same goal, using another open source stack: Prometheus and Grafana.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/U7O&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-SpringBoot 2 performance — servlet stack vs WebFlux reactive stack&lt;/a&gt;: The intent of this experiment to compare the traditional servlet stack vs the reactive stack by capturing their performance under load.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://davidtanzer.net/running_multiple_spring_boot_apps_in_the_same_jvm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;running_multiple_spring_boot_apps_in_the_same_jvm&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;controller--请求处理&#34;&gt;Controller | 请求处理&lt;/h2&gt;
&lt;h3 id=&#34;swagger&#34;&gt;Swagger&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.baeldung.com/swagger-2-documentation-for-spring-rest-api&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;swagger-2-documentation-for-spring-rest-api&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://heidloff.net/article/usage-of-swagger-2-0-in-spring-boot-applications-to-document-apis/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Usage of Swagger 2.0 in Spring Boot Applications to document APIs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.didispace.com/springbootswagger2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring Boot 中使用 Swagger2 构建强大的 RESTful API 文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.sina.com.cn/s/blog_72ef7bea0102vpu7.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Swagger 实践和总结&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://insights.thoughtworkers.org/spring-batch-best-practices/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring Batch 在大型企业中的最佳实践&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.baeldung.com/swagger-2-documentation-for-spring-rest-api&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Setting Up Swagger 2 with a Spring REST API&lt;/a&gt;: In this tutorial, we will look at Swagger 2 for a Spring REST web service. For this article, we will use the Springfox implementation of the Swagger 2 specification.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;service--服务&#34;&gt;Service | 服务&lt;/h2&gt;
&lt;h3 id=&#34;aop&#34;&gt;AOP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.didispace.com/springbootaoplog/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring Boot 中使用 AOP 统一处理 Web 请求日志&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.sina.com.cn/s/blog_624a352c0101fo9j.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;关于 spring,IOC 和 AOP 的解析原理和举例&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/moreevan/article/details/11977115&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring AOP 实现原理&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;storage--存储&#34;&gt;Storage | 存储&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.baeldung.com/spring-jdbc-jdbctemplate&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Spring JDBC&lt;/a&gt;: In this article, we’ll go through practical use cases of the Spring JDBC module.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;test--测试&#34;&gt;Test | 测试&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.baeldung.com/spring-boot-testing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Testing in Spring Boot&lt;/a&gt;: In this article, we’ll have a look at writing tests using the framework support in Spring Boot.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dzone.com/articles/unit-and-integration-tests-in-spring-boot-2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Unit and Integration Tests in Spring Boot&lt;/a&gt;: Learn how to write unit and integration tests in a Spring Boot environment and the tools to facilitate this in this tutorial.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://reflectoring.io/unit-testing-spring-boot/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-Unit Testing with Spring Boot&lt;/a&gt;: This tutorial provides you with these mechanics and goes into the technical details that are necessary to write good unit tests with a focus on Spring Boot applications.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;production--发布到生产环境&#34;&gt;Production | 发布到生产环境&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>SpringCloud-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/springcloud-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/springcloud-list/</guid>
      <description>&lt;h1 id=&#34;spring-cloud-list&#34;&gt;Spring Cloud List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.javacodegeeks.com/2015/06/learning-spring-cloud-infrastructure-and-configuration.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2015-Learning SpringCloud Infrastructure and Configuration&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/MNBGWjm-QJtbVnD7tlaufQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-从架构演进的角度聊聊 Spring Cloud 都做了些什么？&lt;/a&gt;: 本次分享主要解答这两个问题：Spring Cloud 在微服务的架构中都做了哪些事情？Spring Cloud 提供的这些功能对微服务的架构提供了怎样的便利？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.didispace.com/microservice-framework/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;微服务架构的基础框架选择：Spring Cloud 还是 Dubbo？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/bfqTQ8JB59dEKi8IuE4YOw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-拜托！面试请不要再问我 Spring Cloud 底层原理&lt;/a&gt;: 毫无疑问，Spring Cloud 是目前微服务架构领域的翘楚，无数的书籍博客都在讲解这个技术。不过大多数讲解还停留在对 Spring Cloud 功能使用的层面，其底层的很多原理，很多人可能并不知晓。因此本文将通过大量的手绘图，给大家谈谈 Spring Cloud 微服务架构的底层原理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/forezp/SpringCloudLearning&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-SpringCloudLearning 
















  &lt;img src=&#34;https://martrix-usa.oss-accelerate.aliyuncs.com/logo/code.svg&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt; 
















  &lt;img src=&#34;https://img.shields.io/github/stars/forezp/SpringCloudLearning&#34; style=&#34;max-width: 100px;display: inline-flex;&#34;/&gt;&lt;/a&gt;: 史上最简单的 Spring Cloud 教程源码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;deployment&#34;&gt;Deployment&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spring-cloud/spring-cloud-kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-spring-cloud-kubernetes&lt;/a&gt;: Kubernetes integration with Spring Cloud Discovery Client, Configuration, etc&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>SpringSecurity-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/springsecurity-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/springsecurity-list/</guid>
      <description>&lt;h1 id=&#34;spring-security-list&#34;&gt;Spring Security List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.baeldung.com/security-spring&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018-Security with Spring #Series#&lt;/a&gt;: The Security with Spring tutorials focus, as you&amp;rsquo;d expect, on Spring Security. Get started with the Registration series if you&amp;rsquo;re interested in building a registration flow, and understanding some of the frameworks basics. Then, explore the topics you&amp;rsquo;re most interested in, related to security. Finally, have a look at some of the more advanced topics, such as the OAuth support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/RameshMF/spring-security-tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020-Spring security tutorials and examples #Series#&lt;/a&gt;: This tutorial describes the usage and importance of Spring security with lots of examples.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;spring-security-5&#34;&gt;Spring Security 5&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.baeldung.com/tag/spring-security-5/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring Security Series #Series#&lt;/a&gt;: With the latest Spring Security release, a lot has changed. One of those changes is how we can handle password encoding in our applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;jwt&#34;&gt;JWT&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.devglan.com/spring-security/spring-boot-jwt-auth&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2017-Spring Boot Security Jwt Authentication&lt;/a&gt;: In this post we will be securing our REST APIs with JWT(JSOn Web Token) authentication. We will be using spring boot maven based configuration to develop and secure our APIs with seperate API for signup and generate token.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://auth0.com/blog/securing-spring-boot-with-jwts/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Securing Spring Boot with JWTs&lt;/a&gt;: Learn how to set up a Spring Boot project using Java, and secure it with JWTs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;sso&#34;&gt;SSO&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.baeldung.com/spring-boot-keycloak&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-A Quick Guide to Using Keycloak with Spring Boot&lt;/a&gt;: In this article, we’ll cover the basics of setting up a Keycloak server, how to connect a Spring Boot application to it, and how to use it with Spring Security.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.baeldung.com/spring-security-cas-sso&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-CAS SSO With Spring Security&lt;/a&gt;: In this article, we’re going to look at integrating the Central Authentication Service (CAS) with Spring Security. CAS is a Single Sign-On (SSO) service.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;sql-injection&#34;&gt;SQL Injection&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://parg.co/bB1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2016-A beginner’s guide to SQL injection and how you should prevent it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tomcat-List</title>
      <link>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/tomcat-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-lists/1.language/zoo/java/spring/tomcat-list/</guid>
      <description>&lt;h1 id=&#34;tomcat-list&#34;&gt;Tomcat List&lt;/h1&gt;
&lt;h1 id=&#34;resource&#34;&gt;Resource&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mulesoft.com/cn/tcat/understanding-apache-tomcat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Understanding Apache Tomcat-Apache Tomcat Resources by Mulesoft #Series#&lt;/a&gt;: Apache Tomcat is the world&amp;rsquo;s most widely used web application server, with over one million downloads per month and over 70% penetration in the enterprise datacenter. Apache Tomcat is used to power everything from simple one server sites to large enterprise networks. The following is a collection of Apache Tomcat resources that will help you identify, monitor, troubleshoot, and resolve common problems with Apache Tomcat.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.gocit.vn/files/Apress.Apache.Tomcat.7-www.gocit.vn.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2011-Apache Tomcat 7 📚&lt;/a&gt;: This book will be useful to the reader who is familiar with Java, but new to servlet development with Tomcat.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;internals--tuning&#34;&gt;Internals &amp;amp; Tuning&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://parg.co/UP0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2004-How Tomcat Works: A Guide to Developing Your Own Java Servlet Container 📚&lt;/a&gt;: How Tomcat Works is the only book that explains the internal workings of Tomcat, the open source project used by millions of Java developers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/u012562943/article/details/51441157&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tomcat 学习总结(3) ——Tomcat 优化详细教程&lt;/a&gt;: Tomcat 是我们经常使用的 servlet 容器之一，甚至很多线上产品都使用 Tomcat 充当服务器。而且优化后的 Tomcat 性能提升显著，本文从以下几方面进行分析优化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
