<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>编程语言对比 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/cs-series/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%90%86%E8%AE%BA/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AF%B9%E6%AF%94/</link><atom:link href="https://ng-tech.icu/books/cs-series/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%90%86%E8%AE%BA/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AF%B9%E6%AF%94/index.xml" rel="self" type="application/rss+xml"/><description>编程语言对比</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>编程语言对比</title><link>https://ng-tech.icu/books/cs-series/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%90%86%E8%AE%BA/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AF%B9%E6%AF%94/</link></image><item><title>选择合适的编程语言</title><link>https://ng-tech.icu/books/cs-series/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%90%86%E8%AE%BA/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AF%B9%E6%AF%94/%E9%80%89%E6%8B%A9%E5%90%88%E9%80%82%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/cs-series/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%90%86%E8%AE%BA/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AF%B9%E6%AF%94/%E9%80%89%E6%8B%A9%E5%90%88%E9%80%82%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</guid><description>&lt;h1 id="选择合适的编程语言">选择合适的编程语言&lt;/h1>
&lt;p>很多人的代码之路可能从某个 Google 搜索开始，譬如&lt;code>如何学习xxx&lt;/code>，不过又该决定从哪个语言开始这一段旅程呢？如果你问身边朋友的建议，可能会听到这些建议:&lt;/p>
&lt;ul>
&lt;li>硅谷里的小伙伴经常调笑 Java，我觉得我可以先学这个。&lt;/li>
&lt;li>Haskell，现在这么热，肯定要学这个。&lt;/li>
&lt;li>Go 语言的 Logo 好可爱。&lt;/li>
&lt;/ul>
&lt;p>不过还有很多人估计会选择直接搜索，我应该学习啥语言呢？我们的思考过程可以总结在下面这张图中:&lt;/p>
&lt;p>这个过程真的是纠结而又快乐，估计如果是强迫症的处女座会更痛苦。从我的角度来看，我们考虑学哪一门语言应该从以下几个方面进行考虑:&lt;/p>
&lt;ul>
&lt;li>这门语言的市场需求量如何&lt;/li>
&lt;li>这门语言的未来前景如何&lt;/li>
&lt;li>这门语言是否容易上手&lt;/li>
&lt;li>你计划用这门语言构建如何的项目&lt;/li>
&lt;/ul>
&lt;p>编程语言的这片红海也是英雄辈出，每年都会有新的编程语言出现，我们先来看一幅漫画:&lt;/p>
&lt;p>当我们现在考虑应该选择哪一门入门语言时，我们也要来看看这些年里别人的选择，下图是 12 年里各个语言的搜索量排行:&lt;/p>
&lt;p>Java 本身有其优势与劣势，而 Python 正在逐步成长为最受欢迎的选择之一。不过这两年随着 Web 技术的迅猛发展，JavaScript 正成为日益受欢迎的选择之一。在正式阐述之前，我首先澄清一下:&lt;/p>
&lt;ul>
&lt;li>我并不想引起圣战，并没有强调哪一门语言就比其他的好&lt;/li>
&lt;li>我认为每个人不应该拘泥于某一门语言&lt;/li>
&lt;li>我推荐才入门的同学可以从 JavaScript 开始&lt;/li>
&lt;/ul>
&lt;p>现在我们来看看学校里是怎么教编程语言的。&lt;/p>
&lt;h1 id="computer-science-101">Computer Science 101&lt;/h1>
&lt;p>大学里经常在计算机科学与技术的系列课程中开设某一门编程课，并且常常看做数学或者电子课程的扩展。估计你也经常会听到如下的论述:计算机科学与技术的课程并不能让你成为编程大拿，就像刷墙的并不能成为美术大师一样。而在 2016 年里，还是有很多大学像教数学一样教授计算机科学与技术。在这种背景下，很多编程入门级的课程都关注与 C 这样的底层抽象语言，或者专注于数学的类似于 MATLAB 这样的语言。&lt;/p>
&lt;p>上图就是 TIOBE 对于编程流行度的排行榜，而在 2014 年里 Python 逐步代替 Java 成为最广泛的美国计算机科学与技术语言:&lt;/p>
&lt;p>而如果我们专注于工程应用领域的语言流行度，则有些不同:&lt;/p>
&lt;p>超过一半的开发者在使用 JavaScript，JavaScript 的浪潮从前端开始逐步席卷到后端，并且逐步发展到游戏开发与物联网等领域。而对于 JavaScript 开发者需求量也仅次于 Java:&lt;/p>
&lt;p>在过去的两年中，超过 5000 名开发者在 Free Code Camp 的帮助下寻找到了合适的开发工作。我并不是因为我本身负责教授 JavaScript 就去推广它，而是因为 JavaScript 是最易于找到第一份工作的语言所以我选择去教授他。&lt;/p>
&lt;h1 id="factor-1the-job-market">Factor #1:The Job Market&lt;/h1>
&lt;p>如果你是完全处于个人的兴趣爱好而学习编程，那么你可以跳过本节。不过&lt;a href="https://medium.freecodecamp.com/we-asked-15-000-people-who-they-are-and-how-theyre-learning-to-code-4104e29b2781#.30hlfqj32" target="_blank" rel="noopener">绝大部分&lt;/a>学习编程的人都希望能够获得一份不错的工作。就像我早前提及的，Java 是目前看来最受雇主欢迎的语言，而 JavaScript 紧随其后。不过这其中有个很大的因素就是 Java 已经流行了 20 多年，很大一部分岗位来源于对于旧系统的维护需求。&lt;/p>
&lt;p>从上图可以看出现在大概 2.7 个 Java 开发者竞争一个岗位，而 PHP 与 iOS 差不多是两个人竞争一个岗位。&lt;/p>
&lt;h1 id="factor-2the-long-term-prospects">Factor #2:The long term prospects&lt;/h1>
&lt;p>差不多现在开源项目中，每个 JavaScript 项目的 Pull Request 请求数是 Java、Python、Ruby 平均数的两倍，从这一点看来，JavaScript 比其他任何的流行语言都要发展迅速。&lt;/p>
&lt;p>而 JavaScript 生态圈也不断受益于来自 Google、Microsoft、Facebook 以及 Netflix 等公司的投资，譬如 JavaScript 生态圈中的著名的静态扩展 TypeScript 有超过 100 位的开源贡献者，其中很多都是来自于 Microsoft 或者 Google 的雇员。目前收购了 Sun 的 Oracle 也在寻求利用这种社区参与度扩大 Java 的影响力。&lt;/p>
&lt;h1 id="factor-3difficulty-to-learn">Factor #3:Difficulty To Learn&lt;/h1>
&lt;p>估计大部分开发者都同意相对高层的脚本式语言相对易于学习，JavaScript、Python 以及 Ruby 就是属于这个范畴。虽然不少学校在教 Java 或者 C++，不过它们是真的不容易学啊。&lt;/p>
&lt;h1 id="factor-4projects-you-can-build-with-it">Factor #4:Projects you can build with it&lt;/h1>
&lt;p>这一点正是 JavaScript 耀眼之处，JavaScript 可以运行在任何支持浏览器的设备上，你可以用 JavaScript 构建任何应用，然后随处分享。正如 Stack Overflow 的合伙人 Jeff Atwood 所说:所有能够用 JavaScript 实现的应用最终都会转到 JavaScript 中。Java 曾经也是主打一次编译，到处运行，估计你还记得&lt;a href="http://motherboard.vice.com/read/a-brief-history-of-the-java-applet" target="_blank" rel="noopener">Java Applets&lt;/a>，近两年才被 Oracle 去掉这一特性。而 Python 也面临同样的问题，这里我们列举几个好玩的用 JavaScript 构建的游戏:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://s.codepen.io/adambeagle/debug/qOamaz" target="_blank" rel="noopener">1970s style Simon game&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://s.codepen.io/safx/debug/Ewcym" target="_blank" rel="noopener">Conway’s Game of Life&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://s.codepen.io/duttakapil/debug/BKGjOa" target="_blank" rel="noopener">Star Wars-themed Wikipedia Search&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://s.codepen.io/Megabyteceer/debug/qbXJMQ" target="_blank" rel="noopener">A roguelike dungeon crawler game&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="objection-1javascript-不是运行的很慢吗">Objection #1:JavaScript 不是运行的很慢吗？&lt;/h1>
&lt;p>JavaScript 其实是一个非常高效的语言，NodeJS 本身是比 Python、Ruby 以及 PHP 要快的，它也近似于 C++、Java 以及 Go 这些编译语言。&lt;/p>
&lt;h1 id="objection-2but-javascript-isnt-statically-typed">Objection #2:But JavaScript isn&amp;rsquo;t statically typed&lt;/h1>
&lt;p>类似于 Python 或者 Ruby，JavaScript 同样是一门动态类型语言，很方便，不过很容易引起动态类型转化与验证的问题。譬如我以为我操作的是一个数组:&lt;/p>
&lt;pre tabindex="0">&lt;code>
exampleArray = [1, 2]
-&amp;gt; [1, 2]
exampleArray.length
-&amp;gt; 2
&lt;/code>&lt;/pre>&lt;p>然后如果一不小心转化为了字符串，那就糟了:&lt;/p>
&lt;pre tabindex="0">&lt;code>
exampleArray = “text”
-&amp;gt; “text”
exampleArray.length
-&amp;gt; 4
&lt;/code>&lt;/pre>&lt;h1 id="objection-3我打算写个移动应用来着">Objection #3:我打算写个移动应用来着&lt;/h1>
&lt;p>&lt;a href="http://ngcordova.com/" target="_blank" rel="noopener">Angular Cordova&lt;/a>与&lt;a href="https://facebook.github.io/react-native/" target="_blank" rel="noopener">React Native &lt;/a>都是不错的选择。&lt;/p></description></item></channel></rss>