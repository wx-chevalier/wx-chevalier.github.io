<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>组件系统 | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/react-series/5.%E6%9E%B6%E6%9E%84%E6%9C%BA%E5%88%B6/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link>
      <atom:link href="https://ng-tech.icu/books/react-series/5.%E6%9E%B6%E6%9E%84%E6%9C%BA%E5%88%B6/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml" />
    <description>组件系统</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>组件系统</title>
      <link>https://ng-tech.icu/books/react-series/5.%E6%9E%B6%E6%9E%84%E6%9C%BA%E5%88%B6/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link>
    </image>
    
    <item>
      <title>setState</title>
      <link>https://ng-tech.icu/books/react-series/5.%E6%9E%B6%E6%9E%84%E6%9C%BA%E5%88%B6/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/setstate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/react-series/5.%E6%9E%B6%E6%9E%84%E6%9C%BA%E5%88%B6/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/setstate/</guid>
      <description>&lt;h1 id=&#34;react-setstate&#34;&gt;React setState&lt;/h1&gt;
&lt;p&gt;在代码中调用 &lt;code&gt;setState&lt;/code&gt; 函数之后，React 会将传入的参数对象与组件当前的状态合并，然后触发所谓的调和过程(Reconciliation)。经过调和过程，React 会以相对高效的方式根据新的状态构建 React 元素树并且着手重新渲染整个 UI 界面。在 React 得到元素树之后，React 会自动计算出新的树与老树的节点差异，然后根据差异对界面进行最小化重渲染。在差异计算算法中，React 能够相对精确地知道哪些位置发生了改变以及应该如何改变，这就保证了按需更新，而不是全部重新渲染。&lt;/p&gt;
&lt;h1 id=&#34;setstate-调用流程&#34;&gt;setState 调用流程&lt;/h1&gt;
&lt;h1 id=&#34;事务&#34;&gt;事务&lt;/h1&gt;
&lt;p&gt;事务(Transaction)源于数据库理论，是数据库管理系统执行过程中的一个逻辑单位，由一个有限的数据库操作序列构成。React 中将多个操作封装到某个事务中，将操作与执行相剥离，下面的伪代码简述事务的基本流程：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 代码只是为了理解 transaction 和 react 无关
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transactionManager&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TransactionManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;transactionManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Transaction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 修改数据的操作1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;transactionManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Transaction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 修改数据的操作2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;transactionManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;perform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;React 和许多现代前端框架都借鉴了这一设计模式，将操作和执行分离。这样的好处是可以做到极大的性能优化，举个例子，我们知道 DOM 操作是极其耗时的，为了优化性能，我们可以将 DOM 操作合并一起执行。React 的 DOM 更新也是合并执行的，这得益于事务设计。&lt;/p&gt;
&lt;h1 id=&#34;批次更新&#34;&gt;批次更新&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>VDOM</title>
      <link>https://ng-tech.icu/books/react-series/5.%E6%9E%B6%E6%9E%84%E6%9C%BA%E5%88%B6/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/vdom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/react-series/5.%E6%9E%B6%E6%9E%84%E6%9C%BA%E5%88%B6/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/vdom/</guid>
      <description>&lt;h1 id=&#34;vdom&#34;&gt;VDOM&lt;/h1&gt;
&lt;h1 id=&#34;links&#34;&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/lWyqHfHFAstS6AhfaHe7Iw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://mp.weixin.qq.com/s/lWyqHfHFAstS6AhfaHe7Iw&lt;/a&gt; 详解 React 16 的 Diff 策略&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>事务机制</title>
      <link>https://ng-tech.icu/books/react-series/5.%E6%9E%B6%E6%9E%84%E6%9C%BA%E5%88%B6/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E4%BA%8B%E5%8A%A1%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/react-series/5.%E6%9E%B6%E6%9E%84%E6%9C%BA%E5%88%B6/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E4%BA%8B%E5%8A%A1%E6%9C%BA%E5%88%B6/</guid>
      <description>&lt;h1 id=&#34;react-中事务机制&#34;&gt;React 中事务机制&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>源码概览</title>
      <link>https://ng-tech.icu/books/react-series/5.%E6%9E%B6%E6%9E%84%E6%9C%BA%E5%88%B6/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E6%BA%90%E7%A0%81%E6%A6%82%E8%A7%88/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/react-series/5.%E6%9E%B6%E6%9E%84%E6%9C%BA%E5%88%B6/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E6%BA%90%E7%A0%81%E6%A6%82%E8%A7%88/</guid>
      <description>&lt;h1 id=&#34;react-源码概览&#34;&gt;React 源码概览&lt;/h1&gt;
&lt;h1 id=&#34;断点调试-react-应用&#34;&gt;断点调试 React 应用&lt;/h1&gt;
&lt;h1 id=&#34;目录总览&#34;&gt;目录总览&lt;/h1&gt;
&lt;h1 id=&#34;组件声明&#34;&gt;组件声明&lt;/h1&gt;
&lt;h1 id=&#34;dom-渲染&#34;&gt;DOM 渲染&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>组件系统</title>
      <link>https://ng-tech.icu/books/react-series/5.%E6%9E%B6%E6%9E%84%E6%9C%BA%E5%88%B6/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/react-series/5.%E6%9E%B6%E6%9E%84%E6%9C%BA%E5%88%B6/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;h1 id=&#34;react-中的组件体系&#34;&gt;React 中的组件体系&lt;/h1&gt;
&lt;p&gt;
















  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://i.postimg.cc/Qx8DFmSs/image.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
