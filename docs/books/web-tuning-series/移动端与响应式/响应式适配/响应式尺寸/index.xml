<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>响应式尺寸 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/web-tuning-series/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%B8%8E%E5%93%8D%E5%BA%94%E5%BC%8F/%E5%93%8D%E5%BA%94%E5%BC%8F%E9%80%82%E9%85%8D/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B0%BA%E5%AF%B8/</link><atom:link href="https://ng-tech.icu/books/web-tuning-series/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%B8%8E%E5%93%8D%E5%BA%94%E5%BC%8F/%E5%93%8D%E5%BA%94%E5%BC%8F%E9%80%82%E9%85%8D/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B0%BA%E5%AF%B8/index.xml" rel="self" type="application/rss+xml"/><description>响应式尺寸</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>响应式尺寸</title><link>https://ng-tech.icu/books/web-tuning-series/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%B8%8E%E5%93%8D%E5%BA%94%E5%BC%8F/%E5%93%8D%E5%BA%94%E5%BC%8F%E9%80%82%E9%85%8D/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B0%BA%E5%AF%B8/</link></image><item><title>基于 vw 的移动端适配</title><link>https://ng-tech.icu/books/web-tuning-series/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%B8%8E%E5%93%8D%E5%BA%94%E5%BC%8F/%E5%93%8D%E5%BA%94%E5%BC%8F%E9%80%82%E9%85%8D/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B0%BA%E5%AF%B8/%E5%9F%BA%E4%BA%8E-vw-%E7%9A%84%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/web-tuning-series/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%B8%8E%E5%93%8D%E5%BA%94%E5%BC%8F/%E5%93%8D%E5%BA%94%E5%BC%8F%E9%80%82%E9%85%8D/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B0%BA%E5%AF%B8/%E5%9F%BA%E4%BA%8E-vw-%E7%9A%84%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/</guid><description>&lt;h1 id="基于-vw-的移动端适配">基于 vw 的移动端适配&lt;/h1>
&lt;p>目前出视觉设计稿，我们都是使用 750px 宽度的，从上面的原理来看，那么 100vw = 750px，即 1vw = 7.5px。那么我们可以根据设计图上的 px 值直接转换成对应的 vw 值。看到这里，很多同学开始感到崩溃，又要计算，能不能简便一点，能不能再简单一点，其实是可以的，我们可以使用 PostCSS 的插件 &lt;a href="https://github.com/evrone/postcss-px-to-viewport" target="_blank" rel="noopener">postcss-px-to-viewport&lt;/a>，让我们可以直接在代码中写 px，比如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>&lt;span class="nt">w-369&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">369&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>&lt;span class="nt">w-369&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="nt">h2&lt;/span> &lt;span class="nt">span&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#ff5000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">inline-block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">text-shadow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mh">#ff5000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">margin-right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>PostCSS 编译之后就是我们所需要的带 vw 代码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>&lt;span class="nt">w-369&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">49.2&lt;/span>&lt;span class="kt">vw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>&lt;span class="nt">w-369&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="nt">h2&lt;/span> &lt;span class="nt">span&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#ff5000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">inline-block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.53333&lt;/span>&lt;span class="kt">vw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">text-shadow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mf">0.26667&lt;/span>&lt;span class="kt">vw&lt;/span> &lt;span class="mf">0.26667&lt;/span>&lt;span class="kt">vw&lt;/span> &lt;span class="mh">#ff5000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.26667&lt;/span>&lt;span class="kt">vw&lt;/span> &lt;span class="mf">0.66667&lt;/span>&lt;span class="kt">vw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>&lt;span class="nt">w-369&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="nt">h2&lt;/span> &lt;span class="nt">span&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>&lt;span class="nt">w-369&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="nt">i&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">2.66667&lt;/span>&lt;span class="kt">vw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">margin-right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.66667&lt;/span>&lt;span class="kt">vw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在实际使用的时候，你可以对该插件进行相关的参数配置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;postcss-px-to-viewport&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;viewportWidth&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">750&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;viewportHeight&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1334&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;unitPrecision&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;viewportUnit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;vw&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;selectorBlackList&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;minPixelValue&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mediaQuery&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面解决了 px 到 vw 的转换计算。那么在哪些地方可以使用 vw 来适配我们的页面。根据相关的测试：&lt;/p>
&lt;ul>
&lt;li>容器适配，可以使用 vw&lt;/li>
&lt;li>文本的适配，可以使用 vw&lt;/li>
&lt;li>大于 1px 的边框、圆角、阴影都可以使用 vw&lt;/li>
&lt;li>内距和外距，可以使用 vw&lt;/li>
&lt;/ul>
&lt;h1 id="1px-问题">1px 问题&lt;/h1>
&lt;p>前面提到过，对于 &lt;code>1px&lt;/code> 是不建议将其转换成对应的 &lt;code>vw&lt;/code> 单位的，但在 Retina 下，我们始终是需要面对如何解决 &lt;code>1px&lt;/code> 的问题。个人推荐另外一种解决&lt;code>1px&lt;/code>的方案。依旧是使用 PostCSS 插件，解决 &lt;code>1px&lt;/code> 可以使用 &lt;a href="https://github.com/jonathantneal/postcss-write-svg" target="_blank" rel="noopener">postcss-write-svg&lt;/a>。&lt;/p>
&lt;p>使用 postcss-write-svg 你可以通过&lt;code>border-image&lt;/code>或者&lt;code>background-image&lt;/code>两种方式来处理。比如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">@&lt;/span>&lt;span class="k">svg&lt;/span> &lt;span class="nt">1px-border&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">2px&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">@&lt;/span>&lt;span class="k">rect&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">fill&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--color&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">black&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="o">%;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">50&lt;/span>&lt;span class="o">%;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">example&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">border&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="kc">solid&lt;/span> &lt;span class="kc">transparent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">border-image&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nf">svg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">border&lt;/span> &lt;span class="nf">param&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="kc">color&lt;/span> &lt;span class="mh">#00b1ff&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="kc">stretch&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样 PostCSS 会自动帮你把 CSS 编译出来：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">example&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">border&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="kc">solid&lt;/span> &lt;span class="kc">transparent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">border-image&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">url&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;data:image/svg+xml;charset=utf-8,%3Csvg xmlns=&amp;#39;http://www.w3.org/2000/svg&amp;#39; height=&amp;#39;2px&amp;#39;%3E%3Crect fill=&amp;#39;%2300b1ff&amp;#39; width=&amp;#39;100%25&amp;#39; height=&amp;#39;50%25&amp;#39;/%3E%3C/svg%3E&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">2&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="kc">stretch&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 PostCSS 的插件是不是比我们修改图片要来得简单与方便。&lt;/p>
&lt;p>上面演示的是使用&lt;code>border-image&lt;/code>方式，除此之外还可以使用&lt;code>background-image&lt;/code>来实现。比如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">@&lt;/span>&lt;span class="k">svg&lt;/span> &lt;span class="nt">square&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">@&lt;/span>&lt;span class="k">rect&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">fill&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--color&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">black&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="o">%;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="o">%;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">#&lt;/span>&lt;span class="nn">example&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">white&lt;/span> &lt;span class="nf">svg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">square&lt;/span> &lt;span class="nf">param&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="kc">color&lt;/span> &lt;span class="mh">#00b1ff&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译出来就是：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">#&lt;/span>&lt;span class="nn">example&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">white&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">url&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;data:image/svg+xml;charset=utf-8,%3Csvg xmlns=&amp;#39;http://www.w3.org/2000/svg&amp;#39;%3E%3Crect fill=&amp;#39;%2300b1ff&amp;#39; width=&amp;#39;100%25&amp;#39; height=&amp;#39;100%25&amp;#39;/%3E%3C/svg%3E&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个方案简单易用，是我所需要的。目前测试下来，基本能达到我所需要的需求。但有一点千万别忘了，记得在中添加：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width=device-width,initial-scale=1,maximum-scale=1,minimum-scale=1,user-scalable=no&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面阐述的是这个适配方案中所用到的技术点，简单的总结一下：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>使用&lt;code>vw&lt;/code>来实现页面的适配，并且通过 PostCSS 的插件&lt;a href="https://github.com/evrone/postcss-px-to-viewport" target="_blank" rel="noopener">postcss-px-to-viewport&lt;/a>把&lt;code>px&lt;/code>转换成&lt;code>vw&lt;/code>。这样的好处是，我们在撸码的时候，不需要进行任何的计算，你只需要根据设计图写&lt;code>px&lt;/code>单位&lt;/p>
&lt;/li>
&lt;li>
&lt;p>为了更好的实现长宽比，特别是针对于&lt;code>img&lt;/code>、&lt;code>vedio&lt;/code>和&lt;code>iframe&lt;/code>元素，通过 PostCSS 插件&lt;a href="https://github.com/yisibl/postcss-aspect-ratio-mini" target="_blank" rel="noopener">postcss-aspect-ratio-mini&lt;/a>来实现，在实际使用中，只需要把对应的宽和高写进去即可&lt;/p>
&lt;/li>
&lt;li>
&lt;p>为了解决 &lt;code>1px&lt;/code> 的问题，使用 PostCSS 插件 &lt;a href="https://github.com/jonathantneal/postcss-write-svg" target="_blank" rel="noopener">postcss-write-svg&lt;/a>,自动生成 &lt;code>border-image&lt;/code> 或者 &lt;code>background-image&lt;/code> 的图片&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="viewport-不足之处">Viewport 不足之处&lt;/h1>
&lt;p>采用 vw 来做适配处理并不是只有好处没有任何缺点。有一些细节之处还是存在一定的缺陷的。比如当容器使用 vw 单位，margin 采用 px 单位时，很容易造成整体宽度超过 100vw，从而影响布局效果。对于类似这样的现象，我们可以采用相关的技术进行规避。比如将 margin 换成 padding，并且配合 box-sizing。只不过这不是最佳方案，随着将来浏览器或者应用自身的 Webview 对 calc()函数的支持之后，碰到 vw 和 px 混合使用的时候，可以结合 calc()函数一起使用，这样就可以完美的解决。&lt;/p>
&lt;p>另外一点，px 转换成 vw 单位，多少还会存在一定的像素差，毕竟很多时候无法完全整除。&lt;/p></description></item><item><title>屏幕尺寸</title><link>https://ng-tech.icu/books/web-tuning-series/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%B8%8E%E5%93%8D%E5%BA%94%E5%BC%8F/%E5%93%8D%E5%BA%94%E5%BC%8F%E9%80%82%E9%85%8D/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B0%BA%E5%AF%B8/%E5%B1%8F%E5%B9%95%E5%B0%BA%E5%AF%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/web-tuning-series/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%B8%8E%E5%93%8D%E5%BA%94%E5%BC%8F/%E5%93%8D%E5%BA%94%E5%BC%8F%E9%80%82%E9%85%8D/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B0%BA%E5%AF%B8/%E5%B1%8F%E5%B9%95%E5%B0%BA%E5%AF%B8/</guid><description>&lt;h1 id="css-屏幕基础与尺寸单元详解">CSS 屏幕基础与尺寸单元详解&lt;/h1>
&lt;p>对页面布局原理有更深的了解，从而准确地控制好网页元素，保证按照预定的方式显示。&lt;/p>
&lt;h1 id="屏幕基础">屏幕基础&lt;/h1>
&lt;h2 id="pixel--像素">Pixel | 像素&lt;/h2>
&lt;p>像素（Pixel）是数字图像的最小组成单元，它不是一个物理尺寸，但和物理尺寸存在一个可变的换算关系（物理尺寸之间的换算是固定的）。像素就是分辨率的单位，分辨率 1920px*1080px 的意思就是，在这个华为荣耀 7 的 5.2 英寸屏幕上，在竖向的高度上有 1920 个像素块，在横向的宽度上有 1080 个像素块。&lt;/p>
&lt;p>PPI（Pixel Per Inch）是指每英寸包含的像素数，同时也是针对这个换算关系的一个描述性指标。其中的英寸（Inch）和厘米（cm）、毫米（mm）等尺寸一样，都属于物理尺寸。不同的显示设备会有不同的 PPI，因此，每一个像素点的物理尺寸（可以理解为你如果能拿刻度尺来量的话，得到的数值），也会因为设备的不同而存在差异。一般来说，越高的 PPI，相当于在单位物理尺寸内用了更多、更小的像素点来显示图像，因此会更清晰。&lt;/p>
&lt;p>与 PPI 类似的，还有一个 DPI（Dot Per Inch），是指每英寸打印的点数，表示了打印机的打印精度，是属于印刷行业的概念。但如今随着数字化的输入输出设备的发展，很多人也把数字图像的解析度用 DPI 来表示。严格来说，印刷时计算的网点和电脑显示器的显示像素并不相同，但现在已普遍认同，数字图像显示屏的信息，用 DPI 或 PPI 表示均可行，是相同的含义。&lt;/p>
&lt;p>设备像素（device pixels）是指与硬件设备直接相关的像素，是真实的屏幕设备中的像素点。比如说，一个电脑显示器的参数中，最佳分辨率是 1920x1080，那么指的就是这个显示器在屏幕上用于显示的实际像素点，也就是设备像素。&lt;/p>
&lt;p>另一个概念是 css 像素（css pixels）。css 像素是指网页布局和样式定义所使用的像素，也就是说，css 代码中的 px，对应的就是 css 像素。那么，css 像素和设备像素有什么区别呢？简单地说，css 像素比设备像素要更“虚拟”一些。下面来解释这一点。在桌面电脑上，浏览器有一个很少使用的功能：缩放。比如下边这个矩形元素，宽度是 128px，高度是 40px。显然，这里的尺寸是 css 像素。矩形元素的 css 像素尺寸没有变化，同样，你的显示器的设备像素尺寸也不会变化。但是，放大后，元素看起来变大了，在你的屏幕上占据了更大的空间。对应地，如果是缩小，则元素看起来变小了，在屏幕上占据的空间也变小了。&lt;/p>
&lt;p>css 像素和设备像素之间是一种可变的转化关系。在 100%缩放比例下，1 个 css 像素等于 1 个设备像素。在表示某一数目的 css 像素时，在放大状态下使用了更多的设备像素，而在缩小状态下使用了更少的设备像素。这就是 css 像素和设备像素的概念。&lt;/p>
&lt;p>对前端开发来说，设备像素没有意义，我只会关心 css 像素。只有 css 像素才描述了网页的布局与外观，我只需要让我的网页在 100%缩放比例下看起来不错就可以了。&lt;/p>
&lt;h2 id="viewport--视口">viewport | 视口&lt;/h2>
&lt;p>正常情况下，viewport 和浏览器的显示窗口是一样大小的。但是，在移动设备上，两者可能不是一样大小。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">innerWidth&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;undefined&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nx">viewportwidth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">innerWidth&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">viewportheight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">innerHeight&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>viewport 的作用即为：&lt;/p>
&lt;ul>
&lt;li>width 控制 viewport 的宽度，可以是固定值，也可以是 device-width，即设备的宽度&lt;/li>
&lt;li>height 高度&lt;/li>
&lt;li>initial-scale 控制初始化缩放比例，1.0 表示不可以缩放&lt;/li>
&lt;li>maximum-scale 最大缩放比例&lt;/li>
&lt;li>minimum-scale 最小缩放比例&lt;/li>
&lt;li>user-scalable: 是否允许用户缩放&lt;/li>
&lt;/ul>
&lt;p>可见如果不定义 viewport 的话，页面宽度以屏幕分辨率为基准，而设置以后可以根据设备宽度来调整页面，达到适配终端大小的效果&lt;/p>
&lt;p>比如，手机浏览器的窗口宽度可能是 640 像素，这时 viewport 宽度就是 640 像素，但是网页宽度有 950 像素，正常情况下，浏览器会提供横向滚动条，让用户查看窗口容纳不下的 310 个像素。另一种方法则是，将 viewport 设成 950 像素，也就是说，浏览器的显示宽度还是 640 像素，但是网页的显示区域达到 950 像素，整个网页缩小了，在浏览器中可以看清楚全貌。这样一来，手机浏览器就可以看到网页在桌面浏览器上的显示效果。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://cdn.css-tricks.com/wp-content/uploads/2014/05/vw.gif" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">full-width&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">vw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">margin-left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-50&lt;/span>&lt;span class="kt">vw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">margin-right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-50&lt;/span>&lt;span class="kt">vw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后，手机浏览器的供应商是这么考虑的：由于手机屏幕的宽度对于 css 网页布局来说太小，为了让更多的网页能正常显示（一些流体布局的网页会在过窄的视口中变得一团乱），应该让视口更宽，超越屏幕的宽度。所以，在手机浏览器中，视口被划分为了两个：可见视口（visual viewport）和布局视口（layout viewport）。可见视口是指当前在手机屏幕上显示的部分。当你做缩放的时候，可见视口的尺寸（css 像素值）也会变化。&lt;/p>
&lt;p>和可见视口不同，布局视口用于元素布局和尺寸计算（比如百分比的宽度值），而且比可见视口明显要更宽。无论你缩放，或者滑动页面，甚至翻转手机屏幕，布局视口始终不变。前文介绍过&lt;html>元素会取视口的宽度值，在手机上，这个限定和确定&lt;html>的是布局视口。这就是手机浏览器在处理时和桌面电脑浏览器不一样的地方，而这个布局视口的引入，保证了网页在手机里中的显示与在桌面电脑上的一致。布局视口的宽度是由手机浏览器定义的，随浏览器不同而不同。比如 Safari 是 980px，Android Webkit 是 800px。这都远比屏幕宽度值要大。&lt;/p>
&lt;p>手机中的布局视口是可以更改的。你一定在很多移动版网页中见到过下边这个&lt;meta>标签元素。&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&amp;#34;&amp;gt;
&lt;/code>&lt;/pre>&lt;p>这是最早由 Safari 引入，但如今已普遍被各类手机浏览器认可了的一项设置。这其中有一句 width=device-width，它的意思是，把手机浏览器的布局视口的宽度，更改为当前设备的宽度。你还可以使用 width=500 这样的具体数值（也是 css 像素值）。总的来说，使用这个&lt;meta>标签元素，就可以告诉手机浏览器当前页面应该使用的布局视口的尺寸。&lt;/p>
&lt;p>做一下总结:&lt;/p>
&lt;ul>
&lt;li>当 视觉视口 = 布局视口,不会出现横向滚动条,而且 1css 像素 = 1 设备像素&lt;/li>
&lt;li>当 视觉视口 &amp;lt; 布局视口,会出现横向滚动条,而且 1css 像素 = 1 设备像素&lt;/li>
&lt;li>当 视觉视口 &amp;gt; 布局视口,不会出现横向滚动条,而且 1css 像素 &amp;gt; 1 设备像素&lt;/li>
&lt;/ul>
&lt;h1 id="viewport">Viewport&lt;/h1>
&lt;p>Viewport 指的是网页的显示区域，也就是不借助滚动条的情况下，用户可以看到的部分网页大小，中文译为“视口”。视窗（Viewport）指的就是浏览器可视化的区域，而这个可视区域是 window.innerWidth/window.innerHeight 的大小。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>vw：是 Viewport&amp;rsquo;s width 的简写,1vw 等于 window.innerWidth 的 1%&lt;/p>
&lt;/li>
&lt;li>
&lt;p>vh：和 vw 类似，是 Viewport&amp;rsquo;s height 的简写，1vh 等于 window.innerHeihgt 的 1%&lt;/p>
&lt;/li>
&lt;li>
&lt;p>vmin：vmin 的值是当前 vw 和 vh 中较小的值&lt;/p>
&lt;/li>
&lt;li>
&lt;p>vmax：vmax 的值是当前 vw 和 vh 中较大的值&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>vmin 和 vmax 是根据 Viewport 中长度偏大的那个维度值计算出来的，如果 window.innerHeight &amp;gt; window.innerWidth 则 vmin 取百分之一的 window.innerWidth，vmax 取百分之一的 window.innerHeight 计算。&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://s2.ax1x.com/2019/11/27/QC5Hvq.png" alt="vmin 与 vmax 示意图" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;h1 id="lengths-units--尺寸单元">Lengths Units | 尺寸单元&lt;/h1>
&lt;h2 id="relative-lengths-units--相对尺寸单元">Relative Lengths Units | 相对尺寸单元&lt;/h2>
&lt;p>Relative length units specify a length relative to another length property. Relative length units scales better between different rendering mediums.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Unit&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>em&lt;/td>
&lt;td>Relative to the font-size of the element (2em means 2 times the size of the current font)&lt;a href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss_unit_em" target="_blank" rel="noopener">Try it&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ex&lt;/td>
&lt;td>Relative to the x-height of the current font (rarely used)&lt;a href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss_unit_ex" target="_blank" rel="noopener">Try it&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ch&lt;/td>
&lt;td>Relative to width of the &amp;ldquo;0&amp;rdquo; (zero)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>rem&lt;/td>
&lt;td>Relative to font-size of the root element&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>vw&lt;/td>
&lt;td>Relative to 1% of the width of the viewport*&lt;a href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss_unit_vw" target="_blank" rel="noopener">Try it&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>vh&lt;/td>
&lt;td>Relative to 1% of the height of the viewport*&lt;a href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss_unit_vh" target="_blank" rel="noopener">Try it&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>vmin&lt;/td>
&lt;td>Relative to 1% of viewport&amp;rsquo;s* smaller dimension&lt;a href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss_unit_vmin" target="_blank" rel="noopener">Try it&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>vmax&lt;/td>
&lt;td>Relative to 1% of viewport&amp;rsquo;s* larger dimension&lt;a href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss_unit_vmax" target="_blank" rel="noopener">Try it&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="absolute-lengths">Absolute Lengths&lt;/h2>
&lt;p>The absolute length units are fixed and a length expressed in any of these will appear as exactly that size.&lt;/p>
&lt;p>Absolute length units are not recommended for use on screen, because screen sizes vary so much. However, they can be used if the output medium is known, such as for print layout.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Unit&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>cm&lt;/td>
&lt;td>centimeters&lt;a href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss_unit_cm" target="_blank" rel="noopener">Try it&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>mm&lt;/td>
&lt;td>millimeters&lt;a href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss_unit_mm" target="_blank" rel="noopener">Try it&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>in&lt;/td>
&lt;td>inches (1in = 96px = 2.54cm)&lt;a href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss_unit_in" target="_blank" rel="noopener">Try it&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>px&lt;/td>
&lt;td>pixels (1px = 1/96th of 1in)&lt;a href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss_unit_px" target="_blank" rel="noopener">Try it&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>pt&lt;/td>
&lt;td>points (1pt = 1/72 of 1in)&lt;a href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss_unit_pt" target="_blank" rel="noopener">Try it&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>pc&lt;/td>
&lt;td>picas (1pc = 12 pt)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="links">Links&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://evilmartians.com/chronicles/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques" target="_blank" rel="noopener">https://evilmartians.com/chronicles/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques&lt;/a> 其中有对 Pixel 的详细介绍&lt;/li>
&lt;/ul></description></item><item><title>响应式尺寸</title><link>https://ng-tech.icu/books/web-tuning-series/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%B8%8E%E5%93%8D%E5%BA%94%E5%BC%8F/%E5%93%8D%E5%BA%94%E5%BC%8F%E9%80%82%E9%85%8D/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B0%BA%E5%AF%B8/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B0%BA%E5%AF%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/web-tuning-series/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%B8%8E%E5%93%8D%E5%BA%94%E5%BC%8F/%E5%93%8D%E5%BA%94%E5%BC%8F%E9%80%82%E9%85%8D/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B0%BA%E5%AF%B8/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B0%BA%E5%AF%B8/</guid><description>&lt;h1 id="element-query">Element Query&lt;/h1>
&lt;h1 id="合理的单位搭配">合理的单位搭配&lt;/h1>
&lt;h2 id="absolute-size--percent绝对尺寸与百分比尺寸">Absolute Size &amp;amp; Percent:绝对尺寸与百分比尺寸&lt;/h2>
&lt;p>在移动端开发中，笔者最早是倾向于用百分比布局，这样相较于传统的绝对布局肯定是具有一定灵活性，&lt;/p>
&lt;h1 id="responsive-size响应式尺寸">Responsive Size:响应式尺寸&lt;/h1>
&lt;h2 id="media-query媒介查询">Media Query:媒介查询&lt;/h2>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;a href="http://stephen.io/mediaqueries/" target="_blank" rel="noopener">CSS Media Queries for iPads &amp;amp; iPhones&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="media-query-by-scss">Media Query By SCSS&lt;/h3>
&lt;h2 id="flexible-units灵活的尺寸单位">Flexible Units:灵活的尺寸单位&lt;/h2>
&lt;p>### Viewport Size:基于 Viewport 的单位&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-s" data-lang="s">&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span>&lt;span class="n">vw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">% of viewport width
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">1vh = 1%&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">viewport&lt;/span> &lt;span class="n">height&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span>&lt;span class="n">vmin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="n">vw&lt;/span> &lt;span class="n">or&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="n">vh&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">whichever&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">smaller&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span>&lt;span class="n">vmax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="n">vw&lt;/span> &lt;span class="n">or&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="n">vh&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">whichever&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">larger&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>总而言之，就笔者目前的认知而言，虽然在下文中也会介绍几种关于 Viewport Size 的 Polyfill，不过总体而言笔者还不是很建议现在就大范围地使用 Viewport Size。&lt;/p>
&lt;h4 id="viewport-units-buggyfillhttpsgithubcomrodneyrehmviewport-units-buggyfill">&lt;a href="https://github.com/rodneyrehm/viewport-units-buggyfill" target="_blank" rel="noopener">viewport-units-buggyfill&lt;/a>&lt;/h4>
&lt;h4 id="vminpolyhttpsgithubcomsaabivminpoly">&lt;a href="https://github.com/saabi/vminpoly" target="_blank" rel="noopener">vminpoly&lt;/a>&lt;/h4>
&lt;p>整体而言该 Polyfill 的完善度与社区活跃度皆不如上者，建议有需要的还是参考下上面那个 Polyfill。&lt;/p>
&lt;h3 id="fontsize字体">FontSize:字体&lt;/h3>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;a href="http://kyleschaeffer.com/development/css-font-size-em-vs-px-vs-pt-vs/" target="_blank" rel="noopener">css-font-size-em-vs-px-vs-pt-vs&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a href="https://cloudfour.com/thinks/the-ems-have-it-proportional-media-queries-ftw/" target="_blank" rel="noopener">the-ems-have-it-proportional-media-queries-ftw&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="fixed-size">Fixed Size&lt;/h3>
&lt;p>To avoid mobile browsers (iOS Safari, &lt;em>et al&lt;/em>.) from zooming in on HTML form elements when a ``drop-down is tapped, add&lt;code>font-size&lt;/code> to the selector rule:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">input[type=&amp;#34;text&amp;#34;], input[type=&amp;#34;number&amp;#34;], select, textarea {   font-size: 16px;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="flexible-size">Flexible Size&lt;/h3>
&lt;p>The type font size in a responsive layout should be able to adjust with each viewport. You can calculate the font size based on the viewport height and width using &lt;code>:root&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">:&lt;/span>&lt;span class="nd">root&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err"> &lt;/span>&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="kt">vw&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">vh&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="kt">vmin&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you can utilize the &lt;code>root em&lt;/code> unit based on the value calculated by &lt;code>:root&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err"> &lt;/span>&lt;span class="k">font&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mf">1.6&lt;/span> &lt;span class="kc">sans-serif&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">:root&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na"> font-size&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nf">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="kt">vw&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">vh&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="mf">.25&lt;/span>&lt;span class="kt">vmin&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na"> font&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="mf">.75&lt;/span> &lt;span class="s2">&amp;#34;Open Sans&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="ni">sans-serif&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nc">.container&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na"> padding&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">code&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na"> background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#eee&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na"> border-radius&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">em&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na"> background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#ffeb3b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na"> font-style&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="ni">normal&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">code&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">em&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na"> padding&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="mf">.1&lt;/span>&lt;span class="kt">em&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="mf">.2&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="合理的单位搭配-1">合理的单位搭配&lt;/h2>
&lt;p>在响应式开发中，很多人都会建议不要使用 px 这种绝对值作为尺寸，不过这也是因人而异的，过度的使用相对值也会导致开发的复杂度与不可预测性的增加。老实说，最傻瓜的开发方案就是在一套视觉稿基础上使用绝对值开发，然后使用下文介绍的按比例缩放的技巧去适应各个屏幕。&lt;/p>
&lt;p>For layout type things like the sizes of boxes, you want to use % because you will typically have several columns sized as a percentage of their parent that will stack on top of each other at a certain breakpoint (width:100%). No other unit will allow you to fill 100% of the space like % does. But with the min-height, max-height, min-width, max-width CSS keys.
For padding/margins use em, normally you will want to space your elements out relative to the size of your text. With em (the with of an &amp;lsquo;M&amp;rsquo; character) you can quite easily say I want approximately 1 character spacing here.&lt;/p>
&lt;p>For borders you can use px or em, there is a difference though. If you want your border to look like it&amp;rsquo;s one pixel wide on all devices, use 1px. It may not be one pixel on all devices however, high density displays convert 1px into 2px for example. If you want your border to be a size based on your font, use em.&lt;/p>
&lt;p>&lt;a href="http://dabblet.com/gist/3734579" target="_blank" rel="noopener">dabblet&lt;/a>&lt;/p>
&lt;p>For fonts use em (or %), the use of em carries through parents to children and it just a nicer unit to work with over px.
For the next generation
vw and vh. The vw is 1/100th of the window&amp;rsquo;s width and the vh is 1/100th of the window&amp;rsquo;s height. For responsiveness they are going to be the new units.&lt;/p>
&lt;p>在阅读本文的时候，反而希望你能先忘却关于 CSS、Web 开发那些你已经知道的东西，我们今天讨论的并不是多么复杂深奥的内容，如果你觉得准备好了那我们可以从下面这个简单的点图开始:&lt;/p>
&lt;p>上面这些点分布的有些随意，分分合合，有近有远，我们的问题就是如何将这些点划分入到五个组中。最简单的，我们可以在那些相距较远的两个点之间设置为分隔区划分到不同的组合中。&lt;/p>
&lt;p>上面这几个圈都是我随手画出来的，你当然可以选择其他的划分方式，譬如将最右边的两个点划分到一个分组中。其实这个问题并无所谓错误答案，不过如果你以如下方式划分的话:&lt;/p>
&lt;p>看上去是不是觉得怪怪的？我问这个问题也不是无中生有，当我们需要为不同尺寸的屏幕设置不同的 CSS 样式稿时，会有人喜欢按照最常见的尺寸作为分割点，即 320px，768px 与 1024px。&lt;/p>
&lt;p>不知道你有没有听过或者说过下面这些话:中等屏幕的话是不是按照 768px 来划分？还是应该把 768px 也划分到中等屏幕的范围内？不过这个尺寸是 iPad 横屏状态下的尺寸，应该算是大屏幕了吧？唔那大屏幕就是 768px 和以上尺寸咯？然后 320px 左右的是小屏幕？那 319px 算啥？区分蚂蚁的吗？本文的主旨即使讨论如何选择合适的分割点与分隔组。&lt;/p>
&lt;h1 id="选择合适的分隔点">选择合适的分隔点&lt;/h1>
&lt;p>你在幼儿园里就会画上面的这些圆吧，我现在用矩形度量来详细阐述下:&lt;/p>
&lt;p>我们在这里选择了 600px，900px，1200px 以及 1800px 作为分割点，这些分隔组包含了最常见的 14 个机型:&lt;/p>
&lt;p>我们把这两张图合并下，可以得出下面这个更适合你的老板、设计师、开发者以及测试人员看的一张图:&lt;/p>
&lt;h1 id="用更直观的方式命名你的分组">用更直观的方式命名你的分组&lt;/h1>
&lt;p>你愿意的话，也可以使用&lt;a href="https://css-tricks.com/naming-media-queries/" target="_blank" rel="noopener">Papa-Bear 与 Baby-Bear&lt;/a>来称呼你选定的分割点。不过当你和设计师一起讨论网站在不同屏幕上的展示效果时，肯定希望双方都能够在脑海中形成感性直观的认知。如果你用平板竖屏尺寸来形容的话，那到底是 iPad 还是 Surface 呢？特别是现在这种手机越来越大，平板越来越小的情况，你很难用单纯的平板或者手机来划分尺寸。不过好消息是苹果已经不做新产品了，他们只是不断地将按钮、耳机口从现在的产品中移除。这边我也不好给出什么建议，只能说设计师和产品之间需要多多沟通。&lt;/p>
&lt;h1 id="flexible">Flexible&lt;/h1>
&lt;p>Flexible 到今天也有几年的历史了，解救了很多同学针对于 H5 页面布局的适配问题。而这套方案也相对而言是一个较为成熟的方案。简单的回忆一下，当初为了能让页面更好的适配各种不同的终端，通过 Hack 手段来根据设备的 dpr 值相应改变&lt;code>&amp;lt;meta&amp;gt;&lt;/code> 标签中 viewport 的值：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- dpr = 1--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;initial-scale=scale,maximum-scale=scale,minimum-scale=scale,user-scalable=no&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- dpr = 2--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;initial-scale=0.5,maximum-scale=0.5,minimum-scale=0.5,user-scalable=no&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- dpr = 3--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;initial-scale=0.3333333333,maximum-scale=0.3333333333,minimum-scale=0.3333333333,user-scalable=no&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>从而让页面达么缩放的效果，也变相的实现页面的适配功能。而其主要的思想有三点：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>根据 dpr 的值来修改 viewport 实现 1px 的线&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据 dpr 的值来修改 html 的 font-size，从而使用 rem 实现等比缩放&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 Hack 手段用 rem 模拟 vw 特性&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>