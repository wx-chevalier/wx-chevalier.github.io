<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Saga | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/distributedsystem-notes/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/%E6%9F%94%E6%80%A7%E4%BA%8B%E5%8A%A1/saga/</link><atom:link href="https://ng-tech.icu/books/distributedsystem-notes/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/%E6%9F%94%E6%80%A7%E4%BA%8B%E5%8A%A1/saga/index.xml" rel="self" type="application/rss+xml"/><description>Saga</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Saga</title><link>https://ng-tech.icu/books/distributedsystem-notes/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/%E6%9F%94%E6%80%A7%E4%BA%8B%E5%8A%A1/saga/</link></image><item><title>Saga</title><link>https://ng-tech.icu/books/distributedsystem-notes/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/%E6%9F%94%E6%80%A7%E4%BA%8B%E5%8A%A1/saga/saga/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/distributedsystem-notes/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/%E6%9F%94%E6%80%A7%E4%BA%8B%E5%8A%A1/saga/saga/</guid><description>&lt;h1 id="saga">Saga&lt;/h1>
&lt;p>Saga 起源于 1987 年 Hector &amp;amp; Kenneth 发表的论文 &lt;a href="https://www.cs.cornell.edu/andru/cs711/2002fa/reading/sagas.pdf" target="_blank" rel="noopener">Sagas&lt;/a>，把一个分布式事务拆分为多个本地事务，每个本地事务都有相应的执行模块和补偿模块（TCC 中的 Confirm 和 Cancel）。当 Saga 事务中任意一个本地事务出错时，可以通过调用相关的补偿方法恢复之前的事务，达到事务最终的一致性。&lt;/p>
&lt;p>当每个 Saga 子事务 T1, T2, …, Tn 都有对应的补偿定义 C1, C2, …, Cn-1,那么 Saga 系统可以保证：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>子事务序列 T1, T2, …, Tn 得以完成 (最佳情况)；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>或者序列 T1, T2, …, Tj, Cj, …, C2, C1, 0 &amp;lt; j &amp;lt; n, 得以完成。&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>