<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>系统设计 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/ai-toolkits-series/7.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%B9%B3%E5%8F%B0/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</link><atom:link href="https://ng-tech.icu/books/ai-toolkits-series/7.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%B9%B3%E5%8F%B0/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml"/><description>系统设计</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>系统设计</title><link>https://ng-tech.icu/books/ai-toolkits-series/7.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%B9%B3%E5%8F%B0/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</link></image><item><title>Python 深度学习框架回顾</title><link>https://ng-tech.icu/books/ai-toolkits-series/7.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%B9%B3%E5%8F%B0/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/python-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6%E5%9B%9E%E9%A1%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/ai-toolkits-series/7.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%B9%B3%E5%8F%B0/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/python-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6%E5%9B%9E%E9%A1%BE/</guid><description>&lt;h3 id="python-深度学习框架回顾">Python 深度学习框架回顾&lt;/h3>
&lt;h3 id="摘要">摘要&lt;/h3>
&lt;p>本文翻译自 Madison May 发布的 &lt;a href="https://indico.io/blog/python-deep-learning-frameworks-reviewed/" target="_blank" rel="noopener">Python Deep Learning Frameworks Reviewed&lt;/a>，经原作者授权由 InfoQ 中文站翻译并分享。本文对于常用的基于 Python 的深度学习框架 Theano、Lasagne、Blocks、TensorFlow、Keras、MXNet、PyTorch 进行了介绍与优劣比较，有助于深度学习入门者对于这些框架形成初步的认识。&lt;/p>
&lt;h3 id="正文">正文&lt;/h3>
&lt;p>最近我一直在思考某个 Data Science Stack Exchange 上存在很久的问题：&lt;a href="http://datascience.stackexchange.com/a/695/684" target="_blank" rel="noopener">什么才是最好的基于 Python 的神经网络库？&lt;/a> 时光飞逝，在过去的两年半的时间里涌现出了很多基于 Python 的 深度学习框架，而我 2014 年七月份推荐的 pylearn2 这个框架早已物是人非，不再维护。可喜的是已经有不少优秀的深度学习框架填补了它的空缺，成为了 indico 日常产品开发中重要的组成部分。当然，尺有所短，寸有所长，每个框架都有其优势与不足；我也希望在本文中基于自己的工作经历对于 2017 年中的 Python 深度学习生态进行一个综合宏观的介绍，希望为初学者勾勒出一幅清晰的群雄逐鹿图。具体而言，本文会着眼于以下框架：&lt;/p>
&lt;ul>
&lt;li>Theano&lt;/li>
&lt;li>Lasagne&lt;/li>
&lt;li>Blocks&lt;/li>
&lt;li>TensorFlow&lt;/li>
&lt;li>Keras&lt;/li>
&lt;li>MXNet&lt;/li>
&lt;li>PyTorch&lt;/li>
&lt;/ul>
&lt;h3 id="theanohttpsgithubcomtheanotheano">&lt;a href="https://github.com/Theano/Theano" target="_blank" rel="noopener">Theano&lt;/a>&lt;/h3>
&lt;h4 id="描述">&lt;strong>描述：&lt;/strong>&lt;/h4>
&lt;p>Theano 是一个允许你定义、优化以及高效执行包含多维数组的数学表达式的 Python 库；它支持 GPU 操作，并且能够进行高速的符号微分运算。&lt;/p>
&lt;h4 id="文档">&lt;strong>文档：&lt;/strong>&lt;/h4>
&lt;p>&lt;a href="http://deeplearning.net/software/theano/" target="_blank" rel="noopener">http://deeplearning.net/software/theano/&lt;/a>&lt;/p>
&lt;h4 id="总结">&lt;strong>总结：&lt;/strong>&lt;/h4>
&lt;p>Theano 不仅仅是一个可以独立使用的库，它还是我们下面介绍的很多框架的底层数值计算引擎；它来自蒙特利尔大学 MILA 实验室，由 Frédéric Bastien 最早创建。Theano 提供的 API 相对底层，因此如果你希望高效运行 Theano，你必须对它的底层算法非常熟悉。如果你拥有丰富的机器学习理论知识与经验，并且你希望对于自己的模型有细粒度的控制或者自己动手创建新的模型，那么 Theano 是个不错的选择。总结而言，Theano 最大的优势就是其灵活性。&lt;/p>
&lt;h4 id="优势">&lt;strong>优势：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>相对灵活&lt;/li>
&lt;li>正确使用的话性能较好&lt;/li>
&lt;/ul>
&lt;h4 id="不足">&lt;strong>不足：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>陡峭的学习曲线&lt;/li>
&lt;li>大量的底层 API&lt;/li>
&lt;li>编译复杂符号图的时候可能会很慢&lt;/li>
&lt;/ul>
&lt;h4 id="资源">&lt;strong>资源：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://deeplearning.net/software/theano/install.html" target="_blank" rel="noopener">安装指南&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://deeplearning.net/software/theano/tutorial/" target="_blank" rel="noopener">官方教程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/goodfeli/theano_exercises" target="_blank" rel="noopener">Theano 幻灯介绍与实践案例&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Newmu/Theano-Tutorial" target="_blank" rel="noopener">基于 Theano 实现从线性拟合到 CNN&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://indico.io/blog/introduction-to-deep-learning-with-python-and-theano-2/" target="_blank" rel="noopener">基于 Python &amp;amp; Theano 的深度学习介绍&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="lasagnehttpsgithubcomlasagnelasagne">&lt;a href="https://github.com/Lasagne/Lasagne" target="_blank" rel="noopener">Lasagne&lt;/a>&lt;/h3>
&lt;h4 id="描述-1">&lt;strong>描述：&lt;/strong>&lt;/h4>
&lt;p>基于 Theano 的轻量级神经网络构建与训练库。&lt;/p>
&lt;h4 id="文档-1">&lt;strong>文档：&lt;/strong>&lt;/h4>
&lt;p>&lt;a href="http://lasagne.readthedocs.org/" target="_blank" rel="noopener">http://lasagne.readthedocs.org/&lt;/a>&lt;/p>
&lt;h4 id="总结-1">&lt;strong>总结：&lt;/strong>&lt;/h4>
&lt;p>鉴于 Theano 着重打造面向符号数学的工具库，Lasagne 提供了基于 Theano 的相对高层的抽象，使它对于偏向工程的深度学习开发者更为友好。它最早由 DeepMind 的研究学者 Sander Dieleman 开发与维护。不同于 Theano 中网络模型需要指定为符号变量的表达式，Lasagne 允许用户以层的概念来定义网络，并且引入了所谓的 “Conv2DLayer” 与 “DropoutLayer”。Lasagne 以牺牲部分灵活性为代价提供了常用的组件来进行层构建、初始化、模型正则化、模型监控与模型训练。&lt;/p>
&lt;h4 id="优势-1">&lt;strong>优势：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>还是比较灵活的&lt;/li>
&lt;li>比 Theano 提供了更高层的抽象接口&lt;/li>
&lt;li>文档与代码更为条理清晰&lt;/li>
&lt;/ul>
&lt;h4 id="不足-1">&lt;strong>不足：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>社区并不是很活跃&lt;/li>
&lt;/ul>
&lt;h4 id="资源-1">&lt;strong>资源：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Lasagne/Lasagne" target="_blank" rel="noopener">官方 GitHub 主页&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://lasagne.readthedocs.io/en/latest/user/installation.html" target="_blank" rel="noopener">官方 安装 指南&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://lasagne.readthedocs.io/en/latest/user/tutorial.html" target="_blank" rel="noopener">官方 Lasagne 教程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Lasagne/Lasagne/tree/master/examples" target="_blank" rel="noopener">示范代码&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="blockshttpsgithubcommila-udemblocks">&lt;a href="https://github.com/mila-udem/blocks" target="_blank" rel="noopener">Blocks&lt;/a>&lt;/h3>
&lt;h4 id="描述-2">&lt;strong>描述：&lt;/strong>&lt;/h4>
&lt;p>基于 Theano 的神经网络构建与训练框架。&lt;/p>
&lt;h4 id="文档-2">&lt;strong>文档：&lt;/strong>&lt;/h4>
&lt;p>&lt;a href="http://blocks.readthedocs.io/en/latest/" target="_blank" rel="noopener">http://blocks.readthedocs.io/en/latest/&lt;/a>&lt;/p>
&lt;h4 id="总结-2">&lt;strong>总结：&lt;/strong>&lt;/h4>
&lt;p>类似于 Lasagne，Blocks 在 Theano 的基础上添加了对于层的抽象，从而方便定义更加清晰，简单且标准的深度学习模型。它同样来源于蒙特利尔大学的 MILA 实验室，同样也是 Theano 与 PyLearn2 的作者。Blocks 相对于 Lasagne 具有更复杂的学习曲线，不过它也提供了更加灵活的接口操作。除此之外，Blocks 对于循环神经网络架构有非常好的支持，因此我个人很推荐你尝试下它；Blocks 也是除了 TensorFlow 之外我们在 indico 工作中首先考虑的选择了。&lt;/p>
&lt;h4 id="优势-2">&lt;strong>优势：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>还是比较灵活的&lt;/li>
&lt;li>比 Theano 提供了更高层的抽象接口&lt;/li>
&lt;li>提供了相对完备的测试&lt;/li>
&lt;/ul>
&lt;h4 id="不足-2">&lt;strong>不足：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>陡峭的学习曲线&lt;/li>
&lt;li>社区不是很活跃&lt;/li>
&lt;/ul>
&lt;h4 id="资源-2">&lt;strong>资源：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://blocks.readthedocs.io/en/latest/setup.html" target="_blank" rel="noopener">官方安装指南&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://arxiv.org/pdf/1506.00619.pdf" target="_blank" rel="noopener">Blocks 库构建的 Arxiv 论文&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.reddit.com/r/MachineLearning/comments/4kpztm/lasagne_vs_blocks_for_deep_learning/" target="_blank" rel="noopener">Reddit 上关于 Blocks 与 Lasagne 区别的讨论&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/mila-udem/fuel" target="_blank" rel="noopener">Block 的姐妹库 Fuel&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="tensorflowhttpsgithubcomtensorflowtensorflow">&lt;a href="https://github.com/tensorflow/tensorflow" target="_blank" rel="noopener">TensorFlow&lt;/a>&lt;/h3>
&lt;h4 id="描述-3">&lt;strong>描述：&lt;/strong>&lt;/h4>
&lt;p>使用数据流图进行数值计算的开源软件库。&lt;/p>
&lt;h4 id="文档-3">&lt;strong>文档：&lt;/strong>&lt;/h4>
&lt;p>&lt;a href="https://www.tensorflow.org/api_docs/python/" target="_blank" rel="noopener">https://www.tensorflow.org/api_docs/python/&lt;/a>&lt;/p>
&lt;h4 id="总结-3">&lt;strong>总结：&lt;/strong>&lt;/h4>
&lt;p>TensorFlow 集成了类似于 Theano 这样底层的符号计算功能，也包含了类似于 Blocks 或者 Lasagne 这样的高层 API。尽管 TensorFlow 登上 Python 深度学习库的时间尚短，但是它已经成为了最受瞩目、社区最为庞大的工具。TensorFlow 由 Google 大脑团队发布并且维护，它支持多 GPU 的机器学习模型，提供了高效的数据管道以及内建的用于审视、可视化以及序列化模型的功能。最近 TensorFlow 团队决定添加对于 Keras 的内建支持，使得 TensorFlow 具备更好的可用性。尽管社区都认同 &lt;a href="https://indico.io/blog/the-good-bad-ugly-of-tensorflow/" target="_blank" rel="noopener">TensorFlow 是有缺陷的&lt;/a>，但是因为其社区的庞大与项目背后支持力量，学习 TensorFlow 会是个不错的选择；TensorFlow 也是现在 indico 的首选机器学习库。&lt;/p>
&lt;h4 id="优势-3">&lt;strong>优势：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>由 Google 支持&lt;/li>
&lt;li>社区很繁荣&lt;/li>
&lt;li>同时提供了底层与高层的网络训练接口&lt;/li>
&lt;li>比 Theano 能够更快地训练模型&lt;/li>
&lt;li>清晰的多 GPU 支持&lt;/li>
&lt;/ul>
&lt;h4 id="不足-3">&lt;strong>不足：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>一开始的时候性能不是很好&lt;/li>
&lt;li>对 RNN 的支持度仍然落后于 Theano&lt;/li>
&lt;/ul>
&lt;h4 id="资源-3">&lt;strong>资源：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://www.tensorflow.org/" target="_blank" rel="noopener">官方 TensorFlow 主页&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md" target="_blank" rel="noopener">下载与安装指南&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://indico.io/blog/the-good-bad-ugly-of-tensorflow/" target="_blank" rel="noopener">indico 对于 TensorFlow 的评价&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/nlintz/TensorFlow-Tutorial" target="_blank" rel="noopener">一系列 TensorFlow 指南&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.udacity.com/course/deep-learning--ud730" target="_blank" rel="noopener">Udacity 上关于 TensorFlow 的教程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.tensorflow.org/tutorials/mnist/beginners/" target="_blank" rel="noopener">TensorFlow MNIST 指南&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://indico.io/blog/tensorflow-data-inputs-part1-placeholders-protobufs-queues/" target="_blank" rel="noopener">TensorFlow 数据输入&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="kerashttpsgithubcomfcholletkeras">&lt;a href="https://github.com/fchollet/keras" target="_blank" rel="noopener">Keras&lt;/a>&lt;/h3>
&lt;h4 id="描述-4">&lt;strong>描述：&lt;/strong>&lt;/h4>
&lt;p>支持卷积神经网络，循环神经网络的 Python 深度学习库，能够运行在 Theano 或者 TensorFlow 之上。&lt;/p>
&lt;h4 id="文档-4">&lt;strong>文档：&lt;/strong>&lt;/h4>
&lt;p>&lt;a href="https://keras.io/" target="_blank" rel="noopener">https://keras.io/&lt;/a>&lt;/p>
&lt;h4 id="总结-4">&lt;strong>总结：&lt;/strong>&lt;/h4>
&lt;p>Keras 算是这个列表中提供了最高层接口、用户使用最友好的深度学习库了。它由 Google 大脑团队的 Francis Chollet 创建与维护；它允许用户自由选择底层模型构建框架，可以是 Theano 或者 TensorFlow。Keras 的用户交互借鉴了 Torch，如果你有基于 Lua 进行机器学习的经验，Keras 会是很值得一试的工具。因为 Keras 完善的文档与简单易用的接口，Keras 的社区非常繁荣与活跃。最近，TensorFlow 团队宣布计划将内建支持 Keras，因此不久的将来 Keras 会是 TensorFlow 项目的子集了吧。&lt;/p>
&lt;h4 id="优势-4">&lt;strong>优势：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>你可以自由选择使用 Theano 或者 TensorFlow&lt;/li>
&lt;li>直观，高级的接口&lt;/li>
&lt;li>相对简单的学习曲线&lt;/li>
&lt;/ul>
&lt;h4 id="不足-4">&lt;strong>不足：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>与其他相比灵活性略差&lt;/li>
&lt;/ul>
&lt;h4 id="资源-4">&lt;strong>资源：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://keras.io/#installation" target="_blank" rel="noopener">官方安装指南&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://groups.google.com/forum/#!forum/keras-users" target="_blank" rel="noopener">Keras 用户的 Google 社群&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/fchollet/keras/tree/master/examples" target="_blank" rel="noopener">Keras 使用示例&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/fchollet/keras/tree/master/docker" target="_blank" rel="noopener">基于 Docker 的 Keras 环境搭建&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/fchollet/keras-resources" target="_blank" rel="noopener">Keras 教程&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="mxnethttpsgithubcomdmlcmxnet">&lt;a href="https://github.com/dmlc/mxnet" target="_blank" rel="noopener">MXNet&lt;/a>&lt;/h3>
&lt;h4 id="描述-5">&lt;strong>描述：&lt;/strong>&lt;/h4>
&lt;p>MXNet 致力于提供兼顾性能与灵活性的深度学习框架。&lt;/p>
&lt;h4 id="文档-5">&lt;strong>文档：&lt;/strong>&lt;/h4>
&lt;p>&lt;a href="http://mxnet.io/api/python/index.html#python-api-reference" target="_blank" rel="noopener">http://mxnet.io/api/python/index.html#python-api-reference&lt;/a>&lt;/p>
&lt;h4 id="总结-5">&lt;strong>总结：&lt;/strong>&lt;/h4>
&lt;p>作为 Amazon 的钦定深度学习框架，MXNet 也算是性能最好的深度学习框架之一了。它提供了类似于 Theano 与 TensorFlow 的数据流图，并且支持多 GPU 配置，提供了类似于 Lasagne 与 Blocks 的相对高阶的模型构建块，还能运行在多种硬件设备上(包括移动设备)。Python 只是 MXNet 支持的多种语言之一，它还提供了基于 R, Julia, C++, Scala, Matlab 以及 JavaScript 的多种接口。如果你专注于效率，那么 MXNet 是个不二选择，不过你可能会要让自己习惯 MXNet 中很多的奇怪设定。&lt;/p>
&lt;h4 id="优势-5">&lt;strong>优势：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>相当快的评测结果&lt;/li>
&lt;li>彻底的灵活性&lt;/li>
&lt;/ul>
&lt;h4 id="不足-5">&lt;strong>不足：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>社区最小&lt;/li>
&lt;li>比 Theano 更陡峭的学习曲线&lt;/li>
&lt;/ul>
&lt;h4 id="资源-5">&lt;strong>资源：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://mxnet.io/get_started/" target="_blank" rel="noopener">官方初始化指南&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://indico.io/blog/getting-started-with-mxnet/" target="_blank" rel="noopener">indico 对于 MXNet 的介绍&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dmlc/mxnet/tree/master/example" target="_blank" rel="noopener">MXNet 示例仓库&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.allthingsdistributed.com/2016/11/mxnet-default-framework-deep-learning-aws.html" target="_blank" rel="noopener">Amazon 的 CTO 对于 MXNet 的评价&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://arxiv.org/abs/1512.01274" target="_blank" rel="noopener">MXNet Arxiv 论文&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="pytorchhttpsgithubcompytorchpytorch">&lt;a href="https://github.com/pytorch/pytorch" target="_blank" rel="noopener">PyTorch&lt;/a>&lt;/h3>
&lt;h4 id="描述-6">&lt;strong>描述：&lt;/strong>&lt;/h4>
&lt;p>支持强力 GPU 加速的 Python Tensor 与 动态神经网络库。&lt;/p>
&lt;h4 id="文档-6">&lt;strong>文档：&lt;/strong>&lt;/h4>
&lt;p>&lt;a href="http://pytorch.org/docs/" target="_blank" rel="noopener">http://pytorch.org/docs/&lt;/a>&lt;/p>
&lt;h4 id="总结-6">&lt;strong>总结：&lt;/strong>&lt;/h4>
&lt;p>PyTorch 问世不过数周，在我们的深度学习框架列表中尚属新生儿。虽然 PyTorch 主要基于 Lua Torch，但是它是由 Facebook 人工智能研究团队(FAIR)支持的，并且它设计初衷就是用来处理动态计算图问题，这个特性也是其他的 Theano，TensorFlow，以及其他扩展框架所没有的。虽然 PyTorch 尚未成熟，但是因为它这一特性我们相信它会在未来的 Python 深度学习生态系统中占据一席之地，并且我们认为它是个非常不错的选项。&lt;/p>
&lt;h4 id="优势-6">&lt;strong>优势：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>由 Facebook 支持与维护&lt;/li>
&lt;li>支持动态图计算&lt;/li>
&lt;li>同时提供了高层接口与底层接口&lt;/li>
&lt;/ul>
&lt;h4 id="不足-6">&lt;strong>不足：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>与竞争者相比还不成熟&lt;/li>
&lt;li>除了官方文档之外的相关资料尚处于短缺&lt;/li>
&lt;/ul>
&lt;h4 id="资源-6">&lt;strong>资源：&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://pytorch.org/" target="_blank" rel="noopener">官方主页&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://twitter.com/PyTorch" target="_blank" rel="noopener">PyTorch twitter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/pytorch/examples" target="_blank" rel="noopener">PyTorch 使用示例仓库&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/pytorch/tutorials" target="_blank" rel="noopener">PyTorch 教程仓库&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>参考英文原文：&lt;a href="https://indico.io/blog/python-deep-learning-frameworks-reviewed/" target="_blank" rel="noopener">Python Deep Learning Frameworks Reviewed&lt;/a>&lt;/p>
&lt;/blockquote></description></item></channel></rss>