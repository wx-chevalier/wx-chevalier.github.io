<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Markdown | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/developer-zero-to-mastery/%E8%BD%AF%E6%8A%80%E8%83%BD/%E6%96%87%E6%A1%A3%E6%BC%94%E7%A4%BA/markdown/</link><atom:link href="https://ng-tech.icu/books/developer-zero-to-mastery/%E8%BD%AF%E6%8A%80%E8%83%BD/%E6%96%87%E6%A1%A3%E6%BC%94%E7%A4%BA/markdown/index.xml" rel="self" type="application/rss+xml"/><description>Markdown</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>Markdown</title><link>https://ng-tech.icu/books/developer-zero-to-mastery/%E8%BD%AF%E6%8A%80%E8%83%BD/%E6%96%87%E6%A1%A3%E6%BC%94%E7%A4%BA/markdown/</link></image><item><title>Gitbook</title><link>https://ng-tech.icu/books/developer-zero-to-mastery/%E8%BD%AF%E6%8A%80%E8%83%BD/%E6%96%87%E6%A1%A3%E6%BC%94%E7%A4%BA/markdown/gitbook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/developer-zero-to-mastery/%E8%BD%AF%E6%8A%80%E8%83%BD/%E6%96%87%E6%A1%A3%E6%BC%94%E7%A4%BA/markdown/gitbook/</guid><description>&lt;p>﻿```.
├── book.json
├── README.md
├── SUMMARY.md
├── chapter-1/
| ├── README.md
| └── something.md
└── chapter-2/
├── README.md
└── something.md&lt;/p>
&lt;pre tabindex="0">&lt;code>
### Project integration with subdirectory {#subdirectory}
```.
├── book.json
└── docs/
├── README.md
└── SUMMARY.md
&lt;/code>&lt;/pre>&lt;p>With &lt;code>book.json&lt;/code> containing:&lt;/p>
&lt;pre tabindex="0">&lt;code>{
&amp;#34;root&amp;#34;: &amp;#34;./docs&amp;#34;
}
&lt;/code>&lt;/pre></description></item><item><title>MarkDown</title><link>https://ng-tech.icu/books/developer-zero-to-mastery/%E8%BD%AF%E6%8A%80%E8%83%BD/%E6%96%87%E6%A1%A3%E6%BC%94%E7%A4%BA/markdown/markdown/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/developer-zero-to-mastery/%E8%BD%AF%E6%8A%80%E8%83%BD/%E6%96%87%E6%A1%A3%E6%BC%94%E7%A4%BA/markdown/markdown/</guid><description>&lt;p>﻿# MarkDown&lt;/p>
&lt;h2 id="html-标签">HTML 标签&lt;/h2>
&lt;p>Markdown 是 HTML 的父集，所以任何 HTML 文件都是有效的 Markdown。&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;!--这意味着我们可以在 Markdown 里使用任何 HTML 元素，比如注释元素，
且不会被 Markdown 解析器所影响。不过如果你在 Markdown 文件内创建了 HTML 元素，
你将无法在 HTML 元素的内容中使用 Markdown 语法。--&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="标题">标题&lt;/h2>
&lt;p>通过在文本前加上不同数量的 hash(#), 你可以创建相对应的 &lt;code>&amp;lt;h1&amp;gt;&lt;/code> 到 &lt;code>&amp;lt;h6&amp;gt;&lt;/code> HTML 元素。&lt;/p>
&lt;pre tabindex="0">&lt;code># 这是一个 &amp;lt;h1&amp;gt;
## 这是一个 &amp;lt;h2&amp;gt;
### 这是一个 &amp;lt;h3&amp;gt;
#### 这是一个 &amp;lt;h4&amp;gt;
##### 这是一个 &amp;lt;h5&amp;gt;
###### 这是一个 &amp;lt;h6&amp;gt;
&lt;/code>&lt;/pre>&lt;p>对于 &lt;code>&amp;lt;h1&amp;gt;&lt;/code> 和 &lt;code>&amp;lt;h2&amp;gt;&lt;/code> 元素，Markdown 额外提供了两种添加方式。&lt;/p>
&lt;pre tabindex="0">&lt;code>这是一个 h1
=============
这是一个 h2
-------------
&lt;/code>&lt;/pre>&lt;h2 id="文本样式">文本样式&lt;/h2>
&lt;p>文本的斜体，粗体在 Markdown 中可以轻易实现。&lt;/p>
&lt;pre tabindex="0">&lt;code>*此文本为斜体。*
_此文本也是。_
**此文本为粗体。**
__此文本也是__
***此文本是斜体加粗体。***
**_或者这样。_**
*__这个也是！__*
&lt;/code>&lt;/pre>&lt;p>GitHub 也支持 Markdown，在 GitHub 的 Markdown 解析器中，我们可以使用删除线：&lt;/p>
&lt;pre tabindex="0">&lt;code>~~此文本为删除线效果。~~
&lt;/code>&lt;/pre>&lt;h2 id="段落">段落&lt;/h2>
&lt;p>段落由一个句子或是多个中间没有空行的句子组成，每个段落由一个或是多个空行分隔开来。&lt;/p>
&lt;pre tabindex="0">&lt;code>这是第一段落. 这句话在同一个段落里，好玩么？
现在我是第二段落。
这句话也在第二段落！
这句话在第三段落！
&lt;/code>&lt;/pre>&lt;p>如果你想插入一个 &lt;code>&amp;lt;br /&amp;gt;&lt;/code> 标签，你可以在段末加入两个以上的空格，然后另起一 段。(译者注：试了一下，很多解析器，并不需要空两个空格，直接换行就会添加一个&lt;code>&amp;lt;br /&amp;gt;&lt;/code>)&lt;/p>
&lt;pre tabindex="0">&lt;code>此段落结尾有两个空格（选中以显示）。
上文有一个 &amp;lt;br /&amp;gt; ！
&lt;/code>&lt;/pre>&lt;p>段落引用可由 &lt;code>&amp;gt;&lt;/code> 字符轻松实现。&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;gt; 这是一个段落引用。你可以
&amp;gt; 手动断开你的句子，然后在每句句子前面添加 `&amp;gt;` 字符。或者让你的句子变得很长，以至于他们自动得换行。
&amp;gt; 只要你的文字以 `&amp;gt;` 字符开头，两种方式无异。
&amp;gt; 你也可以对文本进行
&amp;gt;&amp;gt; 多层引用
&amp;gt; 这多机智啊！
&lt;/code>&lt;/pre>&lt;h2 id="列表">列表&lt;/h2>
&lt;p>无序列表可由星号，加号或者减号来创建&lt;/p>
&lt;pre tabindex="0">&lt;code>* 项目
* 项目
* 另一个项目
或者
+ 项目
+ 项目
+ 另一个项目
或者
- 项目
- 项目
- 最后一个项目
&lt;/code>&lt;/pre>&lt;p>有序序列可由数字加上点 &lt;code>.&lt;/code> 来实现&lt;/p>
&lt;pre tabindex="0">&lt;code>1. 项目一
2. 项目二
3. 项目三
&lt;/code>&lt;/pre>&lt;p>即使你的数字标签有误，Markdown 依旧会呈现出正确的序号，不过这并不是一个好主意&lt;/p>
&lt;pre tabindex="0">&lt;code>1. 项目一
1. 项目二
1. 项目三
&lt;/code>&lt;/pre>&lt;p>(此段与上面效果一模一样)&lt;/p>
&lt;p>你也可以使用子列表&lt;/p>
&lt;pre tabindex="0">&lt;code>1. 项目一
2. 项目二
3. 项目三
* 子项目
* 子项目
4. 项目四
&lt;/code>&lt;/pre>&lt;p>你甚至可以使用任务列表，它将会生成 HTML 的选择框（checkboxes）标签。&lt;/p>
&lt;pre tabindex="0">&lt;code>下面方框里包含 &amp;#39;x&amp;#39; 的列表，将会生成选中效果的选择框。
- [ ] 任务一需要完成
- [ ] 任务二需要完成
下面这个选择框将会是选中状态
- [x] 这个任务已经完成
&lt;/code>&lt;/pre>&lt;h2 id="代码块">代码块&lt;/h2>
&lt;p>代码块（HTML 中 &lt;code>&amp;lt;code&amp;gt;&lt;/code> 标签）可以由缩进四格（spaces）或者一个制表符（tab）实现&lt;/p>
&lt;pre tabindex="0">&lt;code> This is code
So is this
&lt;/code>&lt;/pre>&lt;p>在你的代码中，你仍然使用 tab（或者四个空格）可以进行缩进操作&lt;/p>
&lt;pre tabindex="0">&lt;code> my_array.each do |item|
puts item
end
&lt;/code>&lt;/pre>&lt;p>内联代码可由反引号 ` 实现&lt;/p>
&lt;pre tabindex="0">&lt;code>John 甚至不知道 `go_to()` 方程是干嘛的!
&lt;/code>&lt;/pre>&lt;p>在 GitHub 的 Markdown（GitHub Flavored Markdown）解析器中，你可以使用特殊的语法表示代码块&lt;/p>
&lt;pre tabindex="0">&lt;code>```ruby
def foobar
puts &amp;#34;Hello world!&amp;#34;
end
```
&lt;/code>&lt;/pre>&lt;p>以上代码不需要缩进，而且 GitHub 会根据`“后指定的语言来进行语法高亮显示&lt;/p>
&lt;h2 id="水平线分隔">水平线分隔&lt;/h2>
&lt;p>水平线（&lt;code>&amp;lt;hr/&amp;gt;&lt;/code>）可由三个或以上的星号或是减号创建，它们之间可以带或不带空格&lt;/p>
&lt;pre tabindex="0">&lt;code>***
---
- - -
****************
&lt;/code>&lt;/pre>&lt;h2 id="links">Links&lt;/h2>
&lt;p>Markdown 最棒的地方就是便捷的书写链接。把链接文字放在中括号[]内，在随后的括弧()内加入 url 就可以了。&lt;/p>
&lt;pre tabindex="0">&lt;code>[点我点我!](http://test.com/)
&lt;/code>&lt;/pre>&lt;p>你也可以在小括号内使用引号，为链接加上一个标题（title）&lt;/p>
&lt;pre tabindex="0">&lt;code>[点我点我!](http://test.com/ &amp;#34;连接到Test.com&amp;#34;)
&lt;/code>&lt;/pre>&lt;p>相对路径也可以有&lt;/p>
&lt;pre tabindex="0">&lt;code>[去 music](/music/).
&lt;/code>&lt;/pre>&lt;p>Markdown 同样支持引用形式的链接&lt;/p>
&lt;pre tabindex="0">&lt;code>[点此链接][link1] 以获取更多信息！
[看一看这个链接][foobar] 如果你愿意的话。
&lt;/code>&lt;/pre>&lt;p>对于引用形式，链接的标题可以处于单引号中，括弧中或是忽略。引用名可以在文档的任何地方，并且可以随意命名，只要名称不重复。&lt;/p>
&lt;p>“隐含式命名” 的功能可以让链接文字作为引用名&lt;/p>
&lt;pre tabindex="0">&lt;code>[This][] is a link.
&lt;/code>&lt;/pre>&lt;p>但这并不常用&lt;/p>
&lt;h2 id="图片">图片&lt;/h2>
&lt;p>图片与链接相似，只需在前添加一个感叹号&lt;/p>
&lt;pre tabindex="0">&lt;code>![这是alt,请把鼠标放在图片上](http://imgur.com/myimage.jpg &amp;#34;这是title&amp;#34;)
&lt;/code>&lt;/pre>&lt;p>引用形式也同样起作用&lt;/p>
&lt;pre tabindex="0">&lt;code>![这是alt][myimage]
&lt;/code>&lt;/pre>&lt;h2 id="杂项">杂项&lt;/h2>
&lt;h3 id="自动链接">自动链接&lt;/h3>
&lt;pre tabindex="0">&lt;code>&amp;lt;http://testwebsite.com/&amp;gt; 与
[http://testwebsite.com/](http://testwebsite.com/) 等同
&lt;/code>&lt;/pre>&lt;h3 id="电子邮件的自动链接">电子邮件的自动链接&lt;/h3>
&lt;pre tabindex="0">&lt;code>&amp;lt;foo@bar.com&amp;gt;
&lt;/code>&lt;/pre>&lt;h3 id="转义字符">转义字符&lt;/h3>
&lt;pre tabindex="0">&lt;code>我希望 *将这段文字置于星号之间* 但是我不希望它被
斜体化, 这么做: \*这段置文字于星号之间\*。
&lt;/code>&lt;/pre>&lt;h3 id="键盘上的功能键">键盘上的功能键&lt;/h3>
&lt;p>在 GitHub 的 Markdown 中，你可以使用 &lt;code>&amp;lt;kbd&amp;gt;&lt;/code> 标签来表示功能键。&lt;/p>
&lt;pre tabindex="0">&lt;code>你的电脑死机了？试试
&amp;lt;kbd&amp;gt;Ctrl&amp;lt;/kbd&amp;gt;+&amp;lt;kbd&amp;gt;Alt&amp;lt;/kbd&amp;gt;+&amp;lt;kbd&amp;gt;Del&amp;lt;/kbd&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Ctrl+Alt+Del&lt;/p>
&lt;h3 id="表格">表格&lt;/h3>
&lt;p>表格只被 GitHub 的 Markdown 支持，并且有一点笨重，但如果你真的要用的话: (译者注：其实现在大部分 markdown 都已经支持)&lt;/p>
&lt;pre tabindex="0">&lt;code>| 第一列 | 第二列 | 第三列 |
| :--------- | :------: | ----------: |
| 左对齐 | 居个中 | 右对齐 |
| 某某某 | 某某某 | 某某某 |
&lt;/code>&lt;/pre>&lt;p>或者, 同样的&lt;/p>
&lt;pre tabindex="0">&lt;code>第一列 | 第二列 | 第三列
:-- | :-: | --:
这太丑了 | 药不能 | 停
&lt;/code>&lt;/pre></description></item><item><title>StyleGuide</title><link>https://ng-tech.icu/books/developer-zero-to-mastery/%E8%BD%AF%E6%8A%80%E8%83%BD/%E6%96%87%E6%A1%A3%E6%BC%94%E7%A4%BA/markdown/styleguide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/developer-zero-to-mastery/%E8%BD%AF%E6%8A%80%E8%83%BD/%E6%96%87%E6%A1%A3%E6%BC%94%E7%A4%BA/markdown/styleguide/</guid><description>&lt;p>﻿- 注意中英文单词间隔：V8 团队致力于提高 ES2015 特性性能&lt;/p>
&lt;ul>
&lt;li>注意中英文标点符号使用
本项目暂约定以下代码风格(不断逐条添加中)：&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>关于空格
&lt;ul>
&lt;li>所有代码使用 4 个空格缩进&lt;/li>
&lt;li>运算符后使用一个空格&lt;/li>
&lt;li>&amp;ldquo;,&amp;rdquo; 和 for 循环语句中的&amp;quot;;&amp;quot; 后面跟上一个空格&lt;/li>
&lt;li>条件、分支保留字，如 if for while else switch 后留出一个空格&lt;/li>
&lt;li>&amp;ldquo;[]&amp;rdquo;, &amp;ldquo;.&amp;ldquo;和&amp;rdquo;-&amp;gt;&amp;rdquo; 前后不留空格&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>用空行把大块代码分成逻辑上的“段落&lt;/li>
&lt;li>关于括号
&lt;ul>
&lt;li>大括号另起一行&lt;/li>
&lt;li>即便只有一行代码也加大括号&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>C 指针中的指针符靠近类型名，如写成 int* p，而不写成 int *p&lt;/li>
&lt;li>关于标点
&lt;ul>
&lt;li>中文表述，使用中文全角的标点符号，如：()、。，？&lt;/li>
&lt;li>数学公式(包括文中混排的公式)和英文代码，使用英文半角的标点符号，如：(),.?…&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>关于注释
&lt;ul>
&lt;li>注释统一用中文&lt;/li>
&lt;li>尽量统一用&amp;quot;//&amp;quot;，一般不用&amp;quot;/&lt;em>&amp;hellip;&lt;/em>/&amp;quot;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>关于命名
&lt;ul>
&lt;li>类名为大写字母开头的单词组合&lt;/li>
&lt;li>函数名比较长，由多个单词组成的，每个单词的首字母大写，如 int MaxSubArray()；函数名很短，由一个单词组成，首字母小写，比如 int swap()&lt;/li>
&lt;li>变量名比较长，由多个单词组成的，首个单词的首字母小写，后面紧跟单词的首字母大写，如 maxEnd；变量名很短，由一个单词组成，首字母小写，如 left&lt;/li>
&lt;li>变量尽量使用全名，能够描述所要实现的功能，如 highestTemprature；对于已经公认了的写法才使用缩写，如 tmp mid prev next&lt;/li>
&lt;li>变量名能“望文生义”，如 v1, v2 不如 area, height&lt;/li>
&lt;li>常量的命名都是大写字母的单词，之间用下划线隔开，比如 MY_CONSTANT&lt;/li>
&lt;li>il &amp;lt; 4384 和 inputLength &amp;lt; MAX_INPUT_LENGTH，后一种写法更好&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>一个函数只专注做一件事&lt;/li>
&lt;li>时间复杂度小写表示，如 O(nlogn)，而不写成 O(N*logN)&lt;/li>
&lt;li>正文中绝大部分采用 C 实现，少量 C++代码，即以 C 为主，但不去刻意排斥回避 C++；&lt;/li>
&lt;li>关于的地得
&lt;ul>
&lt;li>形容词(代词) + 的 + 名词，例如：我的小苹果&lt;/li>
&lt;li>副词 + 地 + 动词，例如：慢慢地走&lt;/li>
&lt;li>动词 + 得 + 副词，例如：走得很快&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>关于参考文献
&lt;ul>
&lt;li>格式：主要责任者.书名〔文献类型标识 ] .其他责任者.版本.出版地：出版者，出版年.文献数量.丛编项.附注项.文献标准编号。例子：1 刘少奇.论共产党员的修养.修订 2 版.北京：人民出版社，1962.76 页.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>专业术语
&lt;ul>
&lt;li>统一一律用“树结点”，而不是“树节点”。&lt;/li>
&lt;li>用左子树、右子树表示树的左右子树没问题，但是否用左孩子、右孩子表示树或子树的左右结点？&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item></channel></rss>