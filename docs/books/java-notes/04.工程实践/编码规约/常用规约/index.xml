<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>常用规约 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/</link><atom:link href="https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/index.xml" rel="self" type="application/rss+xml"/><description>常用规约</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>常用规约</title><link>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/</link></image><item><title>安全规约</title><link>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6/</guid><description/></item><item><title>测试规约</title><link>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E6%B5%8B%E8%AF%95%E8%A7%84%E7%BA%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E6%B5%8B%E8%AF%95%E8%A7%84%E7%BA%A6/</guid><description/></item><item><title>代码规约</title><link>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E4%BB%A3%E7%A0%81%E8%A7%84%E7%BA%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E4%BB%A3%E7%A0%81%E8%A7%84%E7%BA%A6/</guid><description>&lt;h1 id="代码规约">代码规约&lt;/h1>
&lt;h1 id="浮点类型处理">浮点类型处理&lt;/h1></description></item><item><title>命名与注释</title><link>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E5%91%BD%E5%90%8D%E4%B8%8E%E6%B3%A8%E9%87%8A/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E5%91%BD%E5%90%8D%E4%B8%8E%E6%B3%A8%E9%87%8A/</guid><description>&lt;h1 id="命名与注释">命名与注释&lt;/h1>
&lt;h1 id="命名规范">命名规范&lt;/h1>
&lt;p>首先，所有命名规则必须遵循以下规则：&lt;/p>
&lt;ul>
&lt;li>1)、名称只能由字母、数字、下划线、&lt;code>$&lt;/code> 符号组成&lt;/li>
&lt;li>2)、不能以数字开头&lt;/li>
&lt;li>3)、名称不能使用 Java 中的关键字。&lt;/li>
&lt;li>4)、坚决不允许出现中文及拼音命名。&lt;/li>
&lt;/ul>
&lt;p>对于不同的类、变量，又有不同的约定。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>项目名全部小写。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>包名全部小写。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>类名首字母大写，如果类名由多个单词组成，每个单词的首字母都要大写。如：&lt;code>public class MyFirstClass{}&lt;/code>。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>package 的命名: package 的名字由全部小写的字母组成，例如：com.test。&lt;/p>
&lt;p>class 和 interface 的命名: class 和 interface 的名字由大写字母开头而其他字母都小写的单词组成，例如：Person，RuntimeException。&lt;/p>
&lt;h2 id="变量与常量">变量与常量&lt;/h2>
&lt;ul>
&lt;li>变量名、方法名首字母小写，如果名称由多个单词组成，每个单词的首字母都要大写。如：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">index&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">toString&lt;/span>&lt;span class="o">(){}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>常量名全部大写&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">GAME_COLOR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;RED&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>class 变量的命名: 变量的名字用一个小写字母开头，后面的单词用大写字母开头,例如：index，currentImage。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>class 方法的命名: 方法的名字用一个小写字母开头，后面的单词用大写字母开头,例如：run()，getBalance()。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>static final 变量的命名: static final 变量的名字所有字母都大写，并且能表示完整含义。例如：PI，PASSWORD。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>参数的命名: 参数的名字和变量的命名规范一致。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数组的命名: 数组应该总是用这样的方式来命名：byte[] buffer。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="注释规范">注释规范&lt;/h1>
&lt;p>Java 支持三种注释方式。前两种分别是 // 和 &lt;code>/* */&lt;/code>，第三种被称作说明注释，它以 &lt;code>/**&lt;/code> 开始，以 &lt;code>*/&lt;/code> 结束。说明注释允许你在程序中嵌入关于程序的信息。你可以使用 javadoc 工具软件来生成信息，并输出到 HTML 文件中。说明注释，使你更加方便的记录你的程序信息。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">&lt;strong>标签&lt;/strong>&lt;/th>
&lt;th style="text-align:center">&lt;strong>描述&lt;/strong>&lt;/th>
&lt;th style="text-align:center">&lt;strong>示例&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">@author&lt;/td>
&lt;td style="text-align:center">标识一个类的作者&lt;/td>
&lt;td style="text-align:center">@author description&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">@deprecated&lt;/td>
&lt;td style="text-align:center">指名一个过期的类或成员&lt;/td>
&lt;td style="text-align:center">@deprecated description&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">{@docRoot}&lt;/td>
&lt;td style="text-align:center">指明当前文档根目录的路径&lt;/td>
&lt;td style="text-align:center">Directory Path&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">@exception&lt;/td>
&lt;td style="text-align:center">标志一个类抛出的异常&lt;/td>
&lt;td style="text-align:center">@exception exception-name explanation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">{@inheritDoc}&lt;/td>
&lt;td style="text-align:center">从直接父类继承的注释&lt;/td>
&lt;td style="text-align:center">Inherits a comment from the immediate surperclass.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">{@link}&lt;/td>
&lt;td style="text-align:center">插入一个到另一个主题的链接&lt;/td>
&lt;td style="text-align:center">{@link name text}&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">{@linkplain}&lt;/td>
&lt;td style="text-align:center">插入一个到另一个主题的链接，但是该链接显示纯文本字体&lt;/td>
&lt;td style="text-align:center">Inserts an in-line link to another topic.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">@param&lt;/td>
&lt;td style="text-align:center">说明一个方法的参数&lt;/td>
&lt;td style="text-align:center">@param parameter-name explanation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">@return&lt;/td>
&lt;td style="text-align:center">说明返回值类型&lt;/td>
&lt;td style="text-align:center">@return explanation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">@see&lt;/td>
&lt;td style="text-align:center">指定一个到另一个主题的链接&lt;/td>
&lt;td style="text-align:center">@see anchor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">@serial&lt;/td>
&lt;td style="text-align:center">说明一个序列化属性&lt;/td>
&lt;td style="text-align:center">@serial description&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">@serialData&lt;/td>
&lt;td style="text-align:center">说明通过 writeObject( ) 和 writeExternal( )方法写的数据&lt;/td>
&lt;td style="text-align:center">@serialData description&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">@serialField&lt;/td>
&lt;td style="text-align:center">说明一个 ObjectStreamField 组件&lt;/td>
&lt;td style="text-align:center">@serialField name type description&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">@since&lt;/td>
&lt;td style="text-align:center">标记当引入一个特定的变化时&lt;/td>
&lt;td style="text-align:center">@since release&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">@throws&lt;/td>
&lt;td style="text-align:center">和 @exception 标签一样.&lt;/td>
&lt;td style="text-align:center">The @throws tag has the same meaning as the @exception tag.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">{@value}&lt;/td>
&lt;td style="text-align:center">显示常量的值，该常量必须是 static 属性。&lt;/td>
&lt;td style="text-align:center">Displays the value of a constant, which must be a static field.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">@version&lt;/td>
&lt;td style="text-align:center">指定类的版本&lt;/td>
&lt;td style="text-align:center">@version info&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="类注释">类注释&lt;/h2>
&lt;p>在每个类前面必须加上类注释，注释模板如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">* Copyright (C), 2006-2010, NGTE info. Co., Ltd.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">* FileName: Test.java
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">* 类的详细说明
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">* @Date 创建日期
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">* @version 1.00
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="属性注释">属性注释&lt;/h2>
&lt;p>在每个属性前面必须加上属性注释，注释模板如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/** 提示信息 */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">strMsg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="方法注释">方法注释&lt;/h2>
&lt;p>在每个方法前面必须加上方法注释，注释模板如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">* 类方法的详细使用说明
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">* @param 参数1 参数1的使用说明
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">* @return 返回结果的说明
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">* @throws 异常类型.错误代码 注明从此类方法中抛出异常的说明
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在每个构造方法前面必须加上注释，注释模板如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">* 构造方法的详细使用说明
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">* @param 参数1 参数1的使用说明
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">* @throws 异常类型.错误代码 注明从此类方法中抛出异常的说明
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在方法内部使用单行或者多行注释，该注释根据实际情况添加。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//背景颜色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">Color&lt;/span> &lt;span class="n">bgColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">RED&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>性能规约</title><link>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E6%80%A7%E8%83%BD%E8%A7%84%E7%BA%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E6%80%A7%E8%83%BD%E8%A7%84%E7%BA%A6/</guid><description/></item><item><title>性能优化</title><link>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid><description>&lt;p>性能优化&lt;/p>
&lt;h1 id="性能优化">性能优化&lt;/h1>
&lt;h2 id="并发编程">并发编程&lt;/h2>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://github.com/wx-chevalier/OSS/blob/master/2017/8/1/jvm-concurrence.png?raw=true" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;p>如上图所示，Java 中所有变量都存储在主存中，并对所有线程共享。线程都有自己的私有工作内存，保存主存中某些变量的拷贝。线程对所有变量的操作都是在工作内存中进行。线程之间无法相互直接访问，变量传递均需要通过主存完成。安全的同步共享数据必须使用锁机制。&lt;/p>
&lt;p>应用架构&lt;/p>
&lt;p>安全编码&lt;/p>
&lt;p>代码风格&lt;/p>
&lt;p>所谓的编程规范与样式指南即是希望通过制定对语言常见特性和使用注意事项的细则描述，提升编程技能，保证项目的可维护、易重构、易理解、易实现等特性。&lt;/p>
&lt;h1 id="代码风格">代码风格&lt;/h1>
&lt;p>Clean Code&lt;/p>
&lt;h1 id="命名与格式化">命名与格式化&lt;/h1>
&lt;h1 id="函数式编程">函数式编程&lt;/h1>
&lt;h2 id="lambda">Lambda&lt;/h2>
&lt;h3 id="避免过度臃肿的-lambda-实现">避免过度臃肿的 Lambda 实现&lt;/h3>
&lt;p>在将早期的代码迁移到 Java 8 中基于 Lambda 的函数式风格时，往往会生硬地将类中的代码迁移过去：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">persons&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">persons&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">filter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getGender&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">Gender&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">MALE&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LocalDate&lt;/span> &lt;span class="n">now&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Duration&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Duration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">between&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getBirthDate&lt;/span>&lt;span class="o">(),&lt;/span> &lt;span class="n">now&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Duration&lt;/span> &lt;span class="n">adult&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Duration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ChronoUnit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">YEARS&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">compareTo&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">adult&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}).&lt;/span>&lt;span class="na">map&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getFirstName&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getLastName&lt;/span>&lt;span class="o">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="na">collect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Collectors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toList&lt;/span>&lt;span class="o">());&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>作为典型的面向对象的语言，我们还是应该将与对象相关的代码封装到类中：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Person&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isMale&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">getGender&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">Gender&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">MALE&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isAdult&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">LocalDate&lt;/span> &lt;span class="n">when&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Duration&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Duration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">between&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">birthDate&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">when&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Duration&lt;/span> &lt;span class="n">adult&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Duration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ChronoUnit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">YEARS&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">compareTo&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">adult&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后简要地提升下 Lambda 以及 Stream 代码的可读性：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Implementation details
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">Predicate&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">isMaleOrAdult&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isMale&lt;/span>&lt;span class="o">())&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LocalDate&lt;/span> &lt;span class="n">now&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isAdult&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Function&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">concatenateFirstAndLastName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getFirstName&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getLastName&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">persons&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">filter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">isMaleOrAdult&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">map&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">concatenateFirstAndLastName&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>异常与日志规约</title><link>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E5%BC%82%E5%B8%B8%E4%B8%8E%E6%97%A5%E5%BF%97%E8%A7%84%E7%BA%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/java-notes/04.%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E7%BC%96%E7%A0%81%E8%A7%84%E7%BA%A6/%E5%B8%B8%E7%94%A8%E8%A7%84%E7%BA%A6/%E5%BC%82%E5%B8%B8%E4%B8%8E%E6%97%A5%E5%BF%97%E8%A7%84%E7%BA%A6/</guid><description/></item></channel></rss>