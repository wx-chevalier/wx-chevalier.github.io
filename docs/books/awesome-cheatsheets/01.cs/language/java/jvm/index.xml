<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JVM | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/awesome-cheatsheets/01.cs/language/java/jvm/</link>
      <atom:link href="https://ng-tech.icu/books/awesome-cheatsheets/01.cs/language/java/jvm/index.xml" rel="self" type="application/rss+xml" />
    <description>JVM</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>JVM</title>
      <link>https://ng-tech.icu/books/awesome-cheatsheets/01.cs/language/java/jvm/</link>
    </image>
    
    <item>
      <title>JVM-Tuning-CheatSheet</title>
      <link>https://ng-tech.icu/books/awesome-cheatsheets/01.cs/language/java/jvm/jvm-tuning-cheatsheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/awesome-cheatsheets/01.cs/language/java/jvm/jvm-tuning-cheatsheet/</guid>
      <description>&lt;h1 id=&#34;jvm-调试与优化实践清单&#34;&gt;JVM 调试与优化实践清单&lt;/h1&gt;
&lt;p&gt;本文着重于介绍 JVM 线上问题定位中常用的调试命令与工具，对于具体的应用案例请参考其他章节。&lt;/p&gt;
&lt;h1 id=&#34;调试工具&#34;&gt;调试工具&lt;/h1&gt;
&lt;p&gt;常见的调试工具会提供慢调用自动监听、全局线程比对、热点方法分析等功能。&lt;/p&gt;
&lt;h1 id=&#34;jvm-参数配置分析&#34;&gt;JVM 参数配置分析&lt;/h1&gt;
&lt;h2 id=&#34;基础参数&#34;&gt;基础参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-Xms4g&lt;/code&gt;: JVM 启动时，分配的最小堆大小 4G&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;垃圾回收参数&#34;&gt;垃圾回收参数&lt;/h2&gt;
&lt;h2 id=&#34;其他参数&#34;&gt;其他参数&lt;/h2&gt;
&lt;h2 id=&#34;tomcat-jvm-配置&#34;&gt;Tomcat JVM 配置&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-server&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -Xms5120m -Xmx5120m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -XX:PermSize=256m -XX:MaxPermSize=256m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -Xmn2500m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -XX:MaxDirectMemorySize=1g&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -XX:SurvivorRatio=10&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -XX:+UseConcMarkSweepGC -XX:+UseCMSCompactAtFullCollection -XX:CMSMaxAbortablePrecleanTime=5000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -XX:+CMSClassUnloadingEnabled -XX:CMSInitiatingOccupancyFraction=80 -XX:+UseCMSInitiatingOccupancyOnly&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -XX:+ExplicitGCInvokesConcurrent -Dsun.rmi.dgc.client.gcInterval=72000000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -XX:ParallelGCThreads=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CPU_COUNT&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -Xloggc:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;MIDDLEWARE_LOGS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/gc.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;MIDDLEWARE_LOGS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/java.hprof&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -Djava.awt.headless=true&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -Dsun.net.client.defaultConnectTimeout=10000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -Dsun.net.client.defaultReadTimeout=30000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -DJM.LOG.PATH=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;MIDDLEWARE_LOGS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -Dfile.encoding=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;JAVA_FILE_ENCODING&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -Djava.awt.headless=true -Dcom.sun.management.jmxremote.port=1090&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.ssl=false&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CATALINA_OPTS&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -Dcom.sun.management.jmxremote.authenticate=false -Djava.rmi.server.hostname=10.125.59.163&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;th&gt;扩展阅读&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-Xms4g&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Xmx4g&lt;/td&gt;
&lt;td&gt;jvm 启动时，允许分配的最大的堆大小：4g&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:MetaspaceSize=256m&lt;/td&gt;
&lt;td&gt;元数据区默认大小，从 JDK8 之后，没有 Perm 区了&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:MaxMetaspaceSize=256m&lt;/td&gt;
&lt;td&gt;元数据的最大大小&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Xmn2g&lt;/td&gt;
&lt;td&gt;分配的年轻代大小：2g&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:MaxDirectMemorySize=1g&lt;/td&gt;
&lt;td&gt;配置最大的堆外内存&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://hellojava.info/?tag=maxdirectmemorysize&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://hellojava.info/?tag=maxdirectmemorysize&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:SurvivorRatio=10&lt;/td&gt;
&lt;td&gt;Eden 区与 Survivor 区的大小比值&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:+UseConcMarkSweepGC&lt;/td&gt;
&lt;td&gt;使用 CMS 内存收集&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:+UseCMSCompactAtFullCollection&lt;/td&gt;
&lt;td&gt;在 FULL GC 的时候，对年老代的压缩&lt;/td&gt;
&lt;td&gt;CMS 是不会移动内存的，因此，这个非常容易产生碎片，导致内存不够用，因此，内存的压缩这个时候就会被启用。增加这个参数是个好习惯。可能会影响性能,但是可以消除碎片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:CMSMaxAbortablePrecleanTime=5000&lt;/td&gt;
&lt;td&gt;指定 CMS-concurrent-abortable-preclean 阶段执行的时间，该阶段主要是执行一些预清理，减少应用暂停的时间。但在 JDK 5.0+、6.0+的版本中有可能会由于 JDK 的 bug29 导致 CMS 在 remark 完毕后很久才触发 sweeping 动作。通过设置-XX: CMSMaxAbortablePrecleanTime=5（单位为 ms）来避免，&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://shensy.iteye.com/blog/1915227&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://shensy.iteye.com/blog/1915227&lt;/a&gt; &lt;a href=&#34;http://www.blogjava.net/BlueDavy/archive/2009/10/09/297562.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.blogjava.net/BlueDavy/archive/2009/10/09/297562.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:+CMSClassUnloadingEnabled&lt;/td&gt;
&lt;td&gt;由于使用的框架是 Spring/Hibernate 大量采用 cglib，导致生成的 Proxy 会比较多，而这些是存放在 PermGen 区域，sun JDK 默认情况下不会去回收，必须加上-XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled 参数，JDK 才会去回收这部分数据&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:CMSInitiatingOccupancyFraction=80&lt;/td&gt;
&lt;td&gt;使用 cms 作为垃圾回收使用 80％后开始 CMS 收集&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:+UseCMSInitiatingOccupancyOnly&lt;/td&gt;
&lt;td&gt;我们用-XX+UseCMSInitiatingOccupancyOnly 标志来命令 JVM 不基于运行时收集的数据来启动 CMS 垃圾收集周期。而是，当该标志被开启时，JVM 通过 CMSInitiatingOccupancyFraction 的值进行每一次 CMS 收集，而不仅仅是第一次。然而，请记住大多数情况下，JVM 比我们自己能作出更好的垃圾收集决策。因此，只有当我们充足的理由(比如测试)并且对应用程序产生的对象的生命周期有深刻的认知时，才应该使用该标志&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:+ExplicitGCInvokesConcurrent&lt;/td&gt;
&lt;td&gt;如今,被广泛接受的最佳实践是避免显式地调用 GC(所谓的“系统 GC”)，即在应用程序中调用 system.gc()。然而，这个建议是不管使用的 GC 算法的，值得一提的是，当使用 CMS 收集器时，系统 GC 将是一件很不幸的事，因为它默认会触发一次 Full GC。幸运的是，有一种方式可以改变默认设置。标志-XX:+ExplicitGCInvokesConcurrent 命令 JVM 无论什么时候调用系统 GC，都执行 CMS GC，而不是 Full GC，&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Dsun.rmi.dgc.server.gcInterval=2592000000&lt;/td&gt;
&lt;td&gt;作为 rmi-server 时，gc 的时间间隔，默认是 1 小时，720 小时&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://coderanch.com/t/91073/Difference-client-gcInterval-server-gcInterval&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://coderanch.com/t/91073/Difference-client-gcInterval-server-gcInterval&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Dsun.rmi.dgc.client.gcInterval=2592000000&lt;/td&gt;
&lt;td&gt;作为 rmi-client 时，gc 的时间间隔，默认是 1 小时，720 小时&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://coderanch.com/t/91073/Difference-client-gcInterval-server-gcInterval&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://coderanch.com/t/91073/Difference-client-gcInterval-server-gcInterval&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:ParallelGCThreads=4&lt;/td&gt;
&lt;td&gt;并行收集器的线程数&lt;/td&gt;
&lt;td&gt;此值最好配置与处理器数目相等 同样适用于 CMS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Xloggc:/home/admin/logs/gc.log&lt;/td&gt;
&lt;td&gt;gc 打印的日志目录&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:+PrintGCDetails&lt;/td&gt;
&lt;td&gt;打印 GC 的详情信息&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:+PrintGCDateStamps&lt;/td&gt;
&lt;td&gt;打印 GC 的时间戳&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:+HeapDumpOnOutOfMemoryError&lt;/td&gt;
&lt;td&gt;当发生 OOM 错误 时，将内存 DUMP 下来&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-XX:HeapDumpPath=/home/admin/logs/java.hprof&lt;/td&gt;
&lt;td&gt;内存 DUMP 的路径&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Djava.awt.headless=true&lt;/td&gt;
&lt;td&gt;Headless 模式是在缺少显示屏、键盘或者鼠标时的系统配置&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Dsun.net.client.defaultConnectTimeout=10000&lt;/td&gt;
&lt;td&gt;java.net.URLConnection 默认的连接超时时间，毫秒数单位&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Dsun.net.client.defaultReadTimeout=30000&lt;/td&gt;
&lt;td&gt;设置超时时间，当从 inputstream 进行读取的时候&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-DJM.LOG.PATH=/home/admin/logs&lt;/td&gt;
&lt;td&gt;阿里中间件约定定义日志文件路径&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-DJM.SNAPSHOT.PATH=/home/admin/snapshots&lt;/td&gt;
&lt;td&gt;容灾文件，原来和日志一个目录，现在单独指定，防止运维误删, 如 diamond，configclient&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Dfile.encoding=UTF-8&lt;/td&gt;
&lt;td&gt;设置文件编码为 UTF-8，Charset.defaultCharset()&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Dhsf.publish.delayed=true&lt;/td&gt;
&lt;td&gt;true 意思是启动延迟发布,也就是不向 configserver 上注册地址,等待用户通过 online hsf 触发将 hsf 服务地址,注册到 configserver 去,才能提供使用(这种场景下 -Dhsf.publish.delayed=true 和 online hsf 必须同时使用,缺一不可);&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Dproject.name=di-afi&lt;/td&gt;
&lt;td&gt;设置工程名，与应用名相同&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Dpandora.boot.wait=true&lt;/td&gt;
&lt;td&gt;PandoraBootstrap.markAndWait()，标记这里是不是要等待的，&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Dlog4j.defaultInitOverride=true&lt;/td&gt;
&lt;td&gt;检查系统属性 log4j.defaultInitOverride，如果该属性被设置为 false，则执行初始化；否则（只要不是 false，无论是什么值，甚至没有值，都是否则），跳过初始化，&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Dpandora.location=/home/admin/di-afi/target/taobao-hsf.sar&lt;/td&gt;
&lt;td&gt;设置潘多拉的路径&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Dapp.location=/home/admin/di-afi/target/di-afi&lt;/td&gt;
&lt;td&gt;设置应用的路径&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Djava.endorsed.dirs&lt;/td&gt;
&lt;td&gt;包升级替换机制，一般默认是 lib/endorsed 文件夹，就是说，可以把你自己的 jar 包放在这里，代替原有的系统的 jar 包&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Djava.io.tmpdir=/home/admin/di-afi/.default/temp&lt;/td&gt;
&lt;td&gt;设置应用的写入的临时文件目录&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;内存分析&#34;&gt;内存分析&lt;/h1&gt;
&lt;p&gt;Full GC 每小时小于个位数&lt;/p&gt;
&lt;h1 id=&#34;线程与调用分析&#34;&gt;线程与调用分析&lt;/h1&gt;
&lt;h1 id=&#34;追踪&#34;&gt;追踪&lt;/h1&gt;
&lt;h1 id=&#34;jvm-常用调试命令与工具介绍&#34;&gt;JVM 常用调试命令与工具介绍&lt;/h1&gt;
&lt;p&gt;本文着重于介绍 JVM 线上问题定位中常用的调试命令与工具，对于具体的应用案例请参考其他章节。&lt;/p&gt;
&lt;h1 id=&#34;内存&#34;&gt;内存&lt;/h1&gt;
&lt;p&gt;Full GC 每小时小于个位数&lt;/p&gt;
&lt;h2 id=&#34;dump&#34;&gt;Dump&lt;/h2&gt;
&lt;p&gt;JEP 328: Flight Recorder（JFR）是 Oracle 刚刚开源的强大特性。而 JFR 是一套集成进入 JDK、JVM 内部的事件机制框架，通过良好架构和设计的框架，硬件层面的极致优化，生产环境的广泛验证，它可以做到极致的可靠和低开销。在 SPECjbb2015 等基准测试中，JFR 的性能开销最大不超过 1%。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Time-Based&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ java -XX:StartFlightRecording&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;delay&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;20s,duration&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;60s,filename&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;C:&lt;span class=&#34;se&#34;&gt;\m&lt;/span&gt;yRecording.jfr,settings&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;profile,name&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SampleRecording
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Continuous With Dump on Demand&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ java -XX:StartFlightRecording&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;default
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Continuous With Dump on Exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ java -XX:StartFlightRecording&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;default -XX:FlightRecorderOptions&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;dumponexit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;true,dumponexitpath&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;C:&lt;span class=&#34;se&#34;&gt;\t&lt;/span&gt;mp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过 jmap 命令生成 dump 文件
命令格式：jmap -dump:live,format=b,file=heap.bin &lt;pid&gt;
注意：如果要保留 heapdump 中的不可达对象，则需要把”:live“去掉，即使用命令”jmap -dump,format=b,file=heap.bin &lt;pid&gt;“
通过设置 JVM 参数自动生成 使用-XX:+HeapDumpOnOutOfMemoryError 这个 JVM 参数，在 Java 进程运行过程中发生 OOM 的时候就会生成一个 heapdump 文件，并写入到指定目录，一般用-XX:HeapDumpPath=${HOME}/logs/test 来设置。&lt;/p&gt;
&lt;h1 id=&#34;线程&#34;&gt;线程&lt;/h1&gt;
&lt;h1 id=&#34;网络&#34;&gt;网络&lt;/h1&gt;
&lt;h1 id=&#34;磁盘&#34;&gt;磁盘&lt;/h1&gt;
&lt;h1 id=&#34;追踪-1&#34;&gt;追踪&lt;/h1&gt;
&lt;h1 id=&#34;links&#34;&gt;Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/91jason/blog/493870?p=%7b%7bpage%7d%7d&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JVM 监控与调优&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://www.infoq.com/cn/articles/Diagnosing-Common-Java-Database-Performance-Hotspots&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;诊断 Java 代码中常见的数据库性能热点问题&lt;/a&gt; &lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651815337&amp;amp;idx=1&amp;amp;sn=8e846e11e908735a5175c9eacb642329&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;大神手把手教你 Java 性能优化 - 江南白衣(加强版)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://calvin1978.blogcn.com/articles/jvmoption-2.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;关键业务系统的 JVM 启动参数推荐&lt;/a&gt; &lt;a href=&#34;http://calvin1978.blogcn.com/articles/jvmoption-2.html?f=tt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;关键业务系统的 JVM 参数推荐 (2016 热冬版 )&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/jiushuai/article/details/8455788&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JVM 调试工具说明&lt;/a&gt; &amp;gt;&lt;a href=&#34;http://ihuangweiwei.iteye.com/blog/1219302&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java VisualVM &lt;/a&gt; &amp;gt;&lt;a href=&#34;http://docs.oracle.com/javase/tutorial/jmx/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JMX&lt;/a&gt;:Java Management Extensions (JMX)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
