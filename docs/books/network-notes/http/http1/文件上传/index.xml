<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>文件上传 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/network-notes/http/http1/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</link><atom:link href="https://ng-tech.icu/books/network-notes/http/http1/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/index.xml" rel="self" type="application/rss+xml"/><description>文件上传</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>文件上传</title><link>https://ng-tech.icu/books/network-notes/http/http1/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</link></image><item><title>Range</title><link>https://ng-tech.icu/books/network-notes/http/http1/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/range/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/network-notes/http/http1/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/range/</guid><description>&lt;h1 id="range">Range&lt;/h1>
&lt;p>Range 是在 HTTP/1.1 (opens new window)中新增的一个字段，这个特性也是我们使用的迅雷等支持多线程下载以及断点下载的核心机制。首先客户端会发起一个带有 Range: bytes=0-xxx 的请求，如果服务端支持 Range，则会在响应头中添加 Accept-Ranges: bytes 来表示支持 Range 的请求，之后客户端才可能发起带 Range 的请求。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-s" data-lang="s">&lt;span class="line">&lt;span class="cl">&lt;span class="n">GET&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="m">360&lt;/span>&lt;span class="n">_0388.jpg&lt;/span> &lt;span class="n">HTTP&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Host&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">limit.qiufeng.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Connection&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">keep&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">alive&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kc">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Range&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">bytes&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0-102399&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">HTTP&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">1.1&lt;/span> &lt;span class="m">206&lt;/span> &lt;span class="n">Partial&lt;/span> &lt;span class="n">Content&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Server&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">openresty&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">1.13.6.2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Date&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">Sat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">19&lt;/span> &lt;span class="n">Sep&lt;/span> &lt;span class="m">2020&lt;/span> &lt;span class="m">06&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">11&lt;/span> &lt;span class="n">GMT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Content&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">image&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">jpeg&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Content&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Length&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="m">102400&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">....&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Content&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Range&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">bytes&lt;/span> &lt;span class="m">0-102399&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">3670627&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kc">...&lt;/span>（这里是文件流）
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到请求这里多出一个字段 Range: bytes=0-102399 ，服务端也多出一个字段 Content-Range: bytes 0-102399/3670627，以及返回的 状态码为 206. 服务端通过请求头中的 Range: bytes=0-xxx 来判断是否是进行 Range 处理，如果这个值存在而且有效，则只发回请求的那部分文件内容，响应的状态码变成 206，表示 Partial Content，并设置 Content-Range。如果无效，则返回 416 状态码，表明 Request Range Not Satisfiable。如果请求头中不带 Range，那么服务端则正常响应，也不会设置 Content-Range 等。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Value&lt;/th>
&lt;th style="text-align:center">Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">206&lt;/td>
&lt;td style="text-align:center">Partial Content&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">416&lt;/td>
&lt;td style="text-align:center">Range Not Satisfiable&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="range-格式">Range 格式&lt;/h1>
&lt;p>Range 的格式为：&lt;/p>
&lt;pre tabindex="0">&lt;code>Range:(unit=first byte pos)-[last byte pos]
&lt;/code>&lt;/pre>&lt;p>即&lt;code>Range: 单位（如bytes）= 开始字节位置-结束字节位置&lt;/code>。&lt;/p>
&lt;p>我们来举个例子，假设我们开启了多线程下载，需要把一个 5000byte 的文件分为 4 个线程进行下载。&lt;/p>
&lt;ul>
&lt;li>Range: bytes=0-1199 头 1200 个字节&lt;/li>
&lt;li>Range: bytes=1200-2399 第二个 1200 字节&lt;/li>
&lt;li>Range: bytes=2400-3599 第三个 1200 字节&lt;/li>
&lt;li>Range: bytes=3600-5000 最后的 1400 字节&lt;/li>
&lt;/ul>
&lt;p>服务器给出响应：&lt;/p>
&lt;p>第 1 个响应&lt;/p>
&lt;ul>
&lt;li>Content-Length：1200&lt;/li>
&lt;li>Content-Range：bytes 0-1199/5000&lt;/li>
&lt;/ul>
&lt;p>第 2 个响应&lt;/p>
&lt;ul>
&lt;li>Content-Length：1200&lt;/li>
&lt;li>Content-Range：bytes 1200-2399/5000&lt;/li>
&lt;/ul>
&lt;p>第 3 个响应&lt;/p>
&lt;ul>
&lt;li>Content-Length：1200&lt;/li>
&lt;li>Content-Range：bytes 2400-3599/5000&lt;/li>
&lt;/ul>
&lt;p>第 4 个响应&lt;/p>
&lt;ul>
&lt;li>Content-Length：1400&lt;/li>
&lt;li>Content-Range：bytes 3600-5000/5000&lt;/li>
&lt;/ul>
&lt;p>如果每个请求都成功了，服务端返回的 response 头中有一个 Content-Range 的字段域，Content-Range 用于响应头，告诉了客户端发送了多少数据，它描述了响应覆盖的范围和整个实体长度。一般格式：&lt;/p>
&lt;p>&lt;code>Content-Range: bytes (unit first byte pos) - [last byte pos]/[entity length]&lt;/code>即&lt;code>Content-Range：字节 开始字节位置-结束字节位置／文件大小&lt;/code>。&lt;/p></description></item></channel></rss>