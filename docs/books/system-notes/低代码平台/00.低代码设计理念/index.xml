<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>00.低代码设计理念 | Next-gen Tech Edu</title>
    <link>https://ng-tech.icu/books/system-notes/%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%B9%B3%E5%8F%B0/00.%E4%BD%8E%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5/</link>
      <atom:link href="https://ng-tech.icu/books/system-notes/%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%B9%B3%E5%8F%B0/00.%E4%BD%8E%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5/index.xml" rel="self" type="application/rss+xml" />
    <description>00.低代码设计理念</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://ng-tech.icu/media/sharing.png</url>
      <title>00.低代码设计理念</title>
      <link>https://ng-tech.icu/books/system-notes/%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%B9%B3%E5%8F%B0/00.%E4%BD%8E%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5/</link>
    </image>
    
    <item>
      <title>低代码的不足</title>
      <link>https://ng-tech.icu/books/system-notes/%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%B9%B3%E5%8F%B0/00.%E4%BD%8E%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5/%E4%BD%8E%E4%BB%A3%E7%A0%81%E7%9A%84%E4%B8%8D%E8%B6%B3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ng-tech.icu/books/system-notes/%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%B9%B3%E5%8F%B0/00.%E4%BD%8E%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5/%E4%BD%8E%E4%BB%A3%E7%A0%81%E7%9A%84%E4%B8%8D%E8%B6%B3/</guid>
      <description>&lt;h1 id=&#34;低代码的不足&#34;&gt;低代码的不足&lt;/h1&gt;
&lt;p&gt;个人认为低代码就是个噱头，远远没有概念所说的具备那么广的适用性，只能是针对某个垂直领域业务的问题解决方案：软件设计 CAP 原则：性能、可用性，可延展性，三取二，低代码为了通用性， 必然要舍弃性能跟可用性之一，而商业产品必须保证可用性，所以性能必然不够优先（三点都要也不是做不到，成本将大副增加），这就导致只能应用到对性能不敏感的 toB，toG，二这个领域又是各种 SAAS 服务商，系统集成商，云服务商的竞争之地，只靠低代码这个点无法获得足够的优势，最终只能靠与某服务商进行捆绑，否则一定会被淘汰。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
