<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>其他并发场景 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/concurrent-series/2.%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%9E%8B/%E5%85%B6%E4%BB%96%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF/</link><atom:link href="https://ng-tech.icu/books/concurrent-series/2.%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%9E%8B/%E5%85%B6%E4%BB%96%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF/index.xml" rel="self" type="application/rss+xml"/><description>其他并发场景</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>其他并发场景</title><link>https://ng-tech.icu/books/concurrent-series/2.%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%9E%8B/%E5%85%B6%E4%BB%96%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF/</link></image><item><title>并发下载</title><link>https://ng-tech.icu/books/concurrent-series/2.%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%9E%8B/%E5%85%B6%E4%BB%96%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF/%E5%B9%B6%E5%8F%91%E4%B8%8B%E8%BD%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/concurrent-series/2.%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%9E%8B/%E5%85%B6%E4%BB%96%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF/%E5%B9%B6%E5%8F%91%E4%B8%8B%E8%BD%BD/</guid><description>&lt;h1 id="并发下载">并发下载&lt;/h1>
&lt;p>首先如果你真的在万兆网当中测试过的话，会发现只要配置得当，一个TCP连接也完全可以将一张万兆网卡的带宽占满了。所以“多线程下载一个大文件的速度更快”这句话本质上来说就是错误的。那为什么真实场景下用多线程下载似乎会快一些呢？&lt;/p>
&lt;ul>
&lt;li>
&lt;p>延迟高的情况下，一个TCP连接要占满线路带宽，需要有足够大的TCP window，通常超过默认的TCP window上限，需要通过TCP window scale扩展来增加window大小。当年的操作系统对window scale的支持不太好，增加TCP连接数相当于变相增大window。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>操作系统的TCP流控实现不太合理的时候，遇到丢包可能速度会掉得很快，多个连接可以缓解这个问题，至少看到速度比较平缓，不会一下掉一半&lt;/p>
&lt;/li>
&lt;li>
&lt;p>某些网站限制了单个TCP连接的速度，或者本身因为实现问题单个TCP连接就有性能上限（比如错误地使用了很小的buffer来做IO），多个连接也就可以增加性能。&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>