<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>进程内缓存 | Next-gen Tech Edu</title><link>https://ng-tech.icu/books/spring-series/02.%E6%95%B0%E6%8D%AE%E5%BA%93/4.%E7%BC%93%E5%AD%98%E4%B8%8E-kv-%E5%AD%98%E5%82%A8/%E8%BF%9B%E7%A8%8B%E5%86%85%E7%BC%93%E5%AD%98/</link><atom:link href="https://ng-tech.icu/books/spring-series/02.%E6%95%B0%E6%8D%AE%E5%BA%93/4.%E7%BC%93%E5%AD%98%E4%B8%8E-kv-%E5%AD%98%E5%82%A8/%E8%BF%9B%E7%A8%8B%E5%86%85%E7%BC%93%E5%AD%98/index.xml" rel="self" type="application/rss+xml"/><description>进程内缓存</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><image><url>https://ng-tech.icu/media/sharing.png</url><title>进程内缓存</title><link>https://ng-tech.icu/books/spring-series/02.%E6%95%B0%E6%8D%AE%E5%BA%93/4.%E7%BC%93%E5%AD%98%E4%B8%8E-kv-%E5%AD%98%E5%82%A8/%E8%BF%9B%E7%A8%8B%E5%86%85%E7%BC%93%E5%AD%98/</link></image><item><title>Cache 注解</title><link>https://ng-tech.icu/books/spring-series/02.%E6%95%B0%E6%8D%AE%E5%BA%93/4.%E7%BC%93%E5%AD%98%E4%B8%8E-kv-%E5%AD%98%E5%82%A8/%E8%BF%9B%E7%A8%8B%E5%86%85%E7%BC%93%E5%AD%98/cache-%E6%B3%A8%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/spring-series/02.%E6%95%B0%E6%8D%AE%E5%BA%93/4.%E7%BC%93%E5%AD%98%E4%B8%8E-kv-%E5%AD%98%E5%82%A8/%E8%BF%9B%E7%A8%8B%E5%86%85%E7%BC%93%E5%AD%98/cache-%E6%B3%A8%E8%A7%A3/</guid><description>&lt;h1 id="cache-注解">Cache 注解&lt;/h1>
&lt;p>User 实体的数据访问实现：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">UserRepository&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">JpaRepository&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Long&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">User&lt;/span> &lt;span class="nf">findByName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">User&lt;/span> &lt;span class="nf">findByNameAndAge&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Integer&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nd">@Query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;from User u where u.name=:name&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">User&lt;/span> &lt;span class="nf">findUser&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@Param&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 pom.xml 中引入 cache 依赖，添加如下内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-cache&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 Spring Boot 主类中增加@EnableCaching 注解开启缓存功能，如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@EnableCaching&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Chapter51Application&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Chapter51Application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在数据访问接口中，增加缓存配置注解，如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@CacheConfig&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">cacheNames&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;users&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">UserRepository&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">JpaRepository&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Long&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nd">@Cacheable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">User&lt;/span> &lt;span class="nf">findByName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>到这里，我们可以看到，在调用第二次 findByName 函数时，没有再执行 select 语句，也就直接减少了一次数据库的读取操作。&lt;/p>
&lt;p>回过头来我们再来看这里使用到的两个注解分别作了什么事情：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>@CacheConfig&lt;/code>：主要用于配置该类中会用到的一些共用的缓存配置。在这里&lt;code>@CacheConfig(cacheNames = &amp;quot;users&amp;quot;)&lt;/code>：配置了该数据访问对象中返回的内容将存储于名为 users 的缓存对象中，我们也可以不使用该注解，直接通过&lt;code>@Cacheable&lt;/code>自己配置缓存集的名字来定义。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>@Cacheable：配置了 findByName 函数的返回值将被加入缓存。同时在查询时，会先从缓存中获取，若不存在才再发起对数据库的访问。该注解主要有下面几个参数：&lt;/p>
&lt;ul>
&lt;li>&lt;code>value&lt;/code>、&lt;code>cacheNames&lt;/code>：两个等同的参数（&lt;code>cacheNames&lt;/code>为 Spring 4 新增，作为&lt;code>value&lt;/code>的别名），用于指定缓存存储的集合名。由于 Spring 4 中新增了&lt;code>@CacheConfig&lt;/code>，因此在 Spring 3 中原本必须有的&lt;code>value&lt;/code>属性，也成为非必需项了&lt;/li>
&lt;li>&lt;code>key&lt;/code>：缓存对象存储在 Map 集合中的 key 值，非必需，缺省按照函数的所有参数组合作为 key 值，若自己配置需使用 SpEL 表达式，比如：&lt;code>@Cacheable(key = &amp;quot;#p0&amp;quot;)&lt;/code>：使用函数第一个参数作为缓存的 key 值，更多关于 SpEL 表达式的详细内容可参考&lt;a href="http://docs.spring.io/spring/docs/current/spring-framework-reference/html/cache.html#cache-spel-context" target="_blank" rel="noopener">官方文档&lt;/a>&lt;/li>
&lt;li>&lt;code>condition&lt;/code>：缓存对象的条件，非必需，也需使用 SpEL 表达式，只有满足表达式条件的内容才会被缓存，比如：&lt;code>@Cacheable(key = &amp;quot;#p0&amp;quot;, condition = &amp;quot;#p0.length() &amp;lt; 3&amp;quot;)&lt;/code>，表示只有当第一个参数的长度小于 3 的时候才会被缓存，若做此配置上面的 AAA 用户就不会被缓存，读者可自行实验尝试。&lt;/li>
&lt;li>&lt;code>unless&lt;/code>：另外一个缓存条件参数，非必需，需使用 SpEL 表达式。它不同于&lt;code>condition&lt;/code>参数的地方在于它的判断时机，该条件是在函数被调用之后才做判断的，所以它可以通过对 result 进行判断。&lt;/li>
&lt;li>&lt;code>keyGenerator&lt;/code>：用于指定 key 生成器，非必需。若需要指定一个自定义的 key 生成器，我们需要去实现&lt;code>org.springframework.cache.interceptor.KeyGenerator&lt;/code>接口，并使用该参数来指定。需要注意的是：&lt;strong>该参数与&lt;code>key&lt;/code>是互斥的&lt;/strong>&lt;/li>
&lt;li>&lt;code>cacheManager&lt;/code>：用于指定使用哪个缓存管理器，非必需。只有当有多个时才需要使用&lt;/li>
&lt;li>&lt;code>cacheResolver&lt;/code>：用于指定使用那个缓存解析器，非必需。需通过&lt;code>org.springframework.cache.interceptor.CacheResolver&lt;/code>接口来实现自己的缓存解析器，并用该参数指定。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>除了这里用到的两个注解之外，还有下面几个核心注解：&lt;/p>
&lt;ul>
&lt;li>&lt;code>@CachePut&lt;/code>：配置于函数上，能够根据参数定义条件来进行缓存，它与&lt;code>@Cacheable&lt;/code>不同的是，它每次都会真是调用函数，所以主要用于数据新增和修改操作上。它的参数与&lt;code>@Cacheable&lt;/code>类似，具体功能可参考上面对&lt;code>@Cacheable&lt;/code>参数的解析&lt;/li>
&lt;li>@CacheEvict：配置于函数上，通常用在删除方法上，用来从缓存中移除相应数据。除了同@Cacheable 一样的参数之外，它还有下面两个参数：
&lt;ul>
&lt;li>&lt;code>allEntries&lt;/code>：非必需，默认为 false。当为 true 时，会移除所有数据&lt;/li>
&lt;li>&lt;code>beforeInvocation&lt;/code>：非必需，默认为 false，会在调用方法之后移除数据。当为 true 时，会在调用方法之前移除数据。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Ehcache</title><link>https://ng-tech.icu/books/spring-series/02.%E6%95%B0%E6%8D%AE%E5%BA%93/4.%E7%BC%93%E5%AD%98%E4%B8%8E-kv-%E5%AD%98%E5%82%A8/%E8%BF%9B%E7%A8%8B%E5%86%85%E7%BC%93%E5%AD%98/ehcache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ng-tech.icu/books/spring-series/02.%E6%95%B0%E6%8D%AE%E5%BA%93/4.%E7%BC%93%E5%AD%98%E4%B8%8E-kv-%E5%AD%98%E5%82%A8/%E8%BF%9B%E7%A8%8B%E5%86%85%E7%BC%93%E5%AD%98/ehcache/</guid><description>&lt;h1 id="ehcache">Ehcache&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="http://www.blogjava.net/libin2722/articles/406569.html" target="_blank" rel="noopener">Ehcache 详细解读&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.ehcache.org/documentation/3.0/getting-started.html" target="_blank" rel="noopener">ehcache-documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CacheManager&lt;/span> &lt;span class="n">cacheManager&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">=&lt;/span> &lt;span class="n">CacheManagerBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newCacheManagerBuilder&lt;/span>&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="na">withCache&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;preConfigured&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">CacheConfigurationBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newCacheConfigurationBuilder&lt;/span>&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="na">buildConfig&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cacheManager&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">init&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Cache&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">preConfigured&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cacheManager&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getCache&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;preConfigured&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Long&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Cache&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">myCache&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cacheManager&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">createCache&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;myCache&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">CacheConfigurationBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newCacheConfigurationBuilder&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">buildConfig&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">myCache&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="mi">1L&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;da one!&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">String&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">myCache&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="mi">1L&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cacheManager&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">removeCache&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;preConfigured&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cacheManager&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">close&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>